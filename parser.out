Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARRAY_ASOCIATIVO
    CLASS
    DOBLE_DOS_PUNTOS
    ELSE
    ELSEIF
    FLECHA
    FOR
    FUNCION
    NEW
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    READLINE
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> TAG_INICIO sentencias TAG_FIN
Rule 2     programa -> TAG_INICIO sentencias
Rule 3     sentencias -> sentencia
Rule 4     sentencias -> sentencias sentencia
Rule 5     sentencia -> asignacion
Rule 6     sentencia -> declaracion_define
Rule 7     sentencia -> sentencia_echo
Rule 8     sentencia -> asignacion_array
Rule 9     sentencia -> sentencia_if
Rule 10    sentencia -> sentencia_foreach
Rule 11    sentencia -> sentencia_funcion
Rule 12    sentencia -> sentencia_return
Rule 13    sentencia -> sentencia_llamada_funcion
Rule 14    sentencia -> sentencia_incremento
Rule 15    sentencia -> sentencia_comentario
Rule 16    sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 17    sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 18    sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 19    parametros_funcion -> VARIABLE
Rule 20    parametros_funcion -> parametros_funcion COMA VARIABLE
Rule 21    parametros_funcion -> <empty>
Rule 22    sentencia_return -> RETURN expresion PUNTO_COMA
Rule 23    sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
Rule 24    lista_argumentos -> expresion
Rule 25    lista_argumentos -> lista_argumentos COMA expresion
Rule 26    lista_argumentos -> <empty>
Rule 27    expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
Rule 28    sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA
Rule 29    expresion -> expresion PUNTO expresion
Rule 30    sentencia_comentario -> <empty>
Rule 31    asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA
Rule 32    asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
Rule 33    declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
Rule 34    sentencia_echo -> ECHO expresion PUNTO_COMA
Rule 35    sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 36    condicion -> expresion IGUAL expresion
Rule 37    condicion -> expresion NO_IGUAL expresion
Rule 38    condicion -> expresion MAYOR expresion
Rule 39    condicion -> expresion MENOR expresion
Rule 40    condicion -> expresion MAYOR_IGUAL expresion
Rule 41    condicion -> expresion MENOR_IGUAL expresion
Rule 42    expresion -> expresion MAS expresion
Rule 43    expresion -> expresion MENOS expresion
Rule 44    expresion -> expresion MULTIPLICAR expresion
Rule 45    expresion -> expresion DIVIDIR expresion
Rule 46    expresion -> PAREN_IZQ expresion PAREN_DER
Rule 47    expresion -> NUMERO
Rule 48    expresion -> CADENA
Rule 49    expresion -> VARIABLE
Rule 50    expresion -> IDENTIFICADOR
Rule 51    expresion -> CORCHETE_IZQ CORCHETE_DER
Rule 52    expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER
Rule 53    lista_elementos -> expresion
Rule 54    lista_elementos -> lista_elementos COMA expresion
Rule 55    expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

Terminals, with rules where they appear

ARRAY_ASOCIATIVO     : 
AS                   : 16 17
ASIGNAR              : 16 31 32
CADENA               : 27 33 48
CLASS                : 
COMA                 : 20 25 33 54
CORCHETE_DER         : 27 32 51 52 55
CORCHETE_IZQ         : 27 32 51 52 55
DEFINE               : 33
DIVIDIR              : 45
DOBLE_DOS_PUNTOS     : 
ECHO                 : 34
ELSE                 : 
ELSEIF               : 
FLECHA               : 
FOR                  : 
FOREACH              : 16 17
FUNCION              : 
FUNCTION             : 18
IDENTIFICADOR        : 18 23 50
IF                   : 35
IGUAL                : 36
LLAVE_DER            : 16 17 18 35
LLAVE_IZQ            : 16 17 18 35
MAS                  : 28 28 42
MAYOR                : 38
MAYOR_IGUAL          : 40
MENOR                : 39
MENOR_IGUAL          : 41
MENOS                : 43
MULTIPLICAR          : 44
NEW                  : 
NO_IGUAL             : 37
NUMERO               : 47
PAREN_DER            : 16 17 18 23 33 35 46
PAREN_IZQ            : 16 17 18 23 33 35 46
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 29
PUNTO_COMA           : 22 23 28 31 32 33 34
READLINE             : 
RETURN               : 22
TAG_FIN              : 1
TAG_INICIO           : 1 2
VARIABLE             : 16 16 17 17 19 20 27 28 31 32 49 55
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
asignacion_array     : 8
condicion            : 35
declaracion_define   : 6
expresion            : 22 24 25 29 29 31 32 33 34 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 53 54 55
lista_argumentos     : 23 25
lista_elementos      : 52 54
parametros_funcion   : 18 20
programa             : 0
sentencia            : 3 4
sentencia_comentario : 15
sentencia_echo       : 7
sentencia_foreach    : 10
sentencia_funcion    : 11
sentencia_if         : 9
sentencia_incremento : 14
sentencia_llamada_funcion : 13
sentencia_return     : 12
sentencias           : 1 2 4 16 17 18 35

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . TAG_INICIO sentencias TAG_FIN
    (2) programa -> . TAG_INICIO sentencias

    TAG_INICIO      shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> TAG_INICIO . sentencias TAG_FIN
    (2) programa -> TAG_INICIO . sentencias
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    TAG_FIN         reduce using rule 30 (sentencia_comentario -> .)
    $end            reduce using rule 30 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 3

    (1) programa -> TAG_INICIO sentencias . TAG_FIN
    (2) programa -> TAG_INICIO sentencias .
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for TAG_FIN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> TAG_INICIO sentencias .)
    TAG_FIN         shift and go to state 24
    $end            reduce using rule 2 (programa -> TAG_INICIO sentencias .)
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! TAG_FIN         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! $end            [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 4

    (3) sentencias -> sentencia .

    TAG_FIN         reduce using rule 3 (sentencias -> sentencia .)
    VARIABLE        reduce using rule 3 (sentencias -> sentencia .)
    DEFINE          reduce using rule 3 (sentencias -> sentencia .)
    ECHO            reduce using rule 3 (sentencias -> sentencia .)
    IF              reduce using rule 3 (sentencias -> sentencia .)
    FOREACH         reduce using rule 3 (sentencias -> sentencia .)
    FUNCTION        reduce using rule 3 (sentencias -> sentencia .)
    RETURN          reduce using rule 3 (sentencias -> sentencia .)
    IDENTIFICADOR   reduce using rule 3 (sentencias -> sentencia .)
    $end            reduce using rule 3 (sentencias -> sentencia .)
    LLAVE_DER       reduce using rule 3 (sentencias -> sentencia .)


state 5

    (5) sentencia -> asignacion .

    TAG_FIN         reduce using rule 5 (sentencia -> asignacion .)
    VARIABLE        reduce using rule 5 (sentencia -> asignacion .)
    DEFINE          reduce using rule 5 (sentencia -> asignacion .)
    ECHO            reduce using rule 5 (sentencia -> asignacion .)
    IF              reduce using rule 5 (sentencia -> asignacion .)
    FOREACH         reduce using rule 5 (sentencia -> asignacion .)
    FUNCTION        reduce using rule 5 (sentencia -> asignacion .)
    RETURN          reduce using rule 5 (sentencia -> asignacion .)
    IDENTIFICADOR   reduce using rule 5 (sentencia -> asignacion .)
    $end            reduce using rule 5 (sentencia -> asignacion .)
    LLAVE_DER       reduce using rule 5 (sentencia -> asignacion .)


state 6

    (6) sentencia -> declaracion_define .

    TAG_FIN         reduce using rule 6 (sentencia -> declaracion_define .)
    VARIABLE        reduce using rule 6 (sentencia -> declaracion_define .)
    DEFINE          reduce using rule 6 (sentencia -> declaracion_define .)
    ECHO            reduce using rule 6 (sentencia -> declaracion_define .)
    IF              reduce using rule 6 (sentencia -> declaracion_define .)
    FOREACH         reduce using rule 6 (sentencia -> declaracion_define .)
    FUNCTION        reduce using rule 6 (sentencia -> declaracion_define .)
    RETURN          reduce using rule 6 (sentencia -> declaracion_define .)
    IDENTIFICADOR   reduce using rule 6 (sentencia -> declaracion_define .)
    $end            reduce using rule 6 (sentencia -> declaracion_define .)
    LLAVE_DER       reduce using rule 6 (sentencia -> declaracion_define .)


state 7

    (7) sentencia -> sentencia_echo .

    TAG_FIN         reduce using rule 7 (sentencia -> sentencia_echo .)
    VARIABLE        reduce using rule 7 (sentencia -> sentencia_echo .)
    DEFINE          reduce using rule 7 (sentencia -> sentencia_echo .)
    ECHO            reduce using rule 7 (sentencia -> sentencia_echo .)
    IF              reduce using rule 7 (sentencia -> sentencia_echo .)
    FOREACH         reduce using rule 7 (sentencia -> sentencia_echo .)
    FUNCTION        reduce using rule 7 (sentencia -> sentencia_echo .)
    RETURN          reduce using rule 7 (sentencia -> sentencia_echo .)
    IDENTIFICADOR   reduce using rule 7 (sentencia -> sentencia_echo .)
    $end            reduce using rule 7 (sentencia -> sentencia_echo .)
    LLAVE_DER       reduce using rule 7 (sentencia -> sentencia_echo .)


state 8

    (8) sentencia -> asignacion_array .

    TAG_FIN         reduce using rule 8 (sentencia -> asignacion_array .)
    VARIABLE        reduce using rule 8 (sentencia -> asignacion_array .)
    DEFINE          reduce using rule 8 (sentencia -> asignacion_array .)
    ECHO            reduce using rule 8 (sentencia -> asignacion_array .)
    IF              reduce using rule 8 (sentencia -> asignacion_array .)
    FOREACH         reduce using rule 8 (sentencia -> asignacion_array .)
    FUNCTION        reduce using rule 8 (sentencia -> asignacion_array .)
    RETURN          reduce using rule 8 (sentencia -> asignacion_array .)
    IDENTIFICADOR   reduce using rule 8 (sentencia -> asignacion_array .)
    $end            reduce using rule 8 (sentencia -> asignacion_array .)
    LLAVE_DER       reduce using rule 8 (sentencia -> asignacion_array .)


state 9

    (9) sentencia -> sentencia_if .

    TAG_FIN         reduce using rule 9 (sentencia -> sentencia_if .)
    VARIABLE        reduce using rule 9 (sentencia -> sentencia_if .)
    DEFINE          reduce using rule 9 (sentencia -> sentencia_if .)
    ECHO            reduce using rule 9 (sentencia -> sentencia_if .)
    IF              reduce using rule 9 (sentencia -> sentencia_if .)
    FOREACH         reduce using rule 9 (sentencia -> sentencia_if .)
    FUNCTION        reduce using rule 9 (sentencia -> sentencia_if .)
    RETURN          reduce using rule 9 (sentencia -> sentencia_if .)
    IDENTIFICADOR   reduce using rule 9 (sentencia -> sentencia_if .)
    $end            reduce using rule 9 (sentencia -> sentencia_if .)
    LLAVE_DER       reduce using rule 9 (sentencia -> sentencia_if .)


state 10

    (10) sentencia -> sentencia_foreach .

    TAG_FIN         reduce using rule 10 (sentencia -> sentencia_foreach .)
    VARIABLE        reduce using rule 10 (sentencia -> sentencia_foreach .)
    DEFINE          reduce using rule 10 (sentencia -> sentencia_foreach .)
    ECHO            reduce using rule 10 (sentencia -> sentencia_foreach .)
    IF              reduce using rule 10 (sentencia -> sentencia_foreach .)
    FOREACH         reduce using rule 10 (sentencia -> sentencia_foreach .)
    FUNCTION        reduce using rule 10 (sentencia -> sentencia_foreach .)
    RETURN          reduce using rule 10 (sentencia -> sentencia_foreach .)
    IDENTIFICADOR   reduce using rule 10 (sentencia -> sentencia_foreach .)
    $end            reduce using rule 10 (sentencia -> sentencia_foreach .)
    LLAVE_DER       reduce using rule 10 (sentencia -> sentencia_foreach .)


state 11

    (11) sentencia -> sentencia_funcion .

    TAG_FIN         reduce using rule 11 (sentencia -> sentencia_funcion .)
    VARIABLE        reduce using rule 11 (sentencia -> sentencia_funcion .)
    DEFINE          reduce using rule 11 (sentencia -> sentencia_funcion .)
    ECHO            reduce using rule 11 (sentencia -> sentencia_funcion .)
    IF              reduce using rule 11 (sentencia -> sentencia_funcion .)
    FOREACH         reduce using rule 11 (sentencia -> sentencia_funcion .)
    FUNCTION        reduce using rule 11 (sentencia -> sentencia_funcion .)
    RETURN          reduce using rule 11 (sentencia -> sentencia_funcion .)
    IDENTIFICADOR   reduce using rule 11 (sentencia -> sentencia_funcion .)
    $end            reduce using rule 11 (sentencia -> sentencia_funcion .)
    LLAVE_DER       reduce using rule 11 (sentencia -> sentencia_funcion .)


state 12

    (12) sentencia -> sentencia_return .

    TAG_FIN         reduce using rule 12 (sentencia -> sentencia_return .)
    VARIABLE        reduce using rule 12 (sentencia -> sentencia_return .)
    DEFINE          reduce using rule 12 (sentencia -> sentencia_return .)
    ECHO            reduce using rule 12 (sentencia -> sentencia_return .)
    IF              reduce using rule 12 (sentencia -> sentencia_return .)
    FOREACH         reduce using rule 12 (sentencia -> sentencia_return .)
    FUNCTION        reduce using rule 12 (sentencia -> sentencia_return .)
    RETURN          reduce using rule 12 (sentencia -> sentencia_return .)
    IDENTIFICADOR   reduce using rule 12 (sentencia -> sentencia_return .)
    $end            reduce using rule 12 (sentencia -> sentencia_return .)
    LLAVE_DER       reduce using rule 12 (sentencia -> sentencia_return .)


state 13

    (13) sentencia -> sentencia_llamada_funcion .

    TAG_FIN         reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    VARIABLE        reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    DEFINE          reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    ECHO            reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    IF              reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    FOREACH         reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    FUNCTION        reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    RETURN          reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    IDENTIFICADOR   reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    $end            reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    LLAVE_DER       reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)


state 14

    (14) sentencia -> sentencia_incremento .

    TAG_FIN         reduce using rule 14 (sentencia -> sentencia_incremento .)
    VARIABLE        reduce using rule 14 (sentencia -> sentencia_incremento .)
    DEFINE          reduce using rule 14 (sentencia -> sentencia_incremento .)
    ECHO            reduce using rule 14 (sentencia -> sentencia_incremento .)
    IF              reduce using rule 14 (sentencia -> sentencia_incremento .)
    FOREACH         reduce using rule 14 (sentencia -> sentencia_incremento .)
    FUNCTION        reduce using rule 14 (sentencia -> sentencia_incremento .)
    RETURN          reduce using rule 14 (sentencia -> sentencia_incremento .)
    IDENTIFICADOR   reduce using rule 14 (sentencia -> sentencia_incremento .)
    $end            reduce using rule 14 (sentencia -> sentencia_incremento .)
    LLAVE_DER       reduce using rule 14 (sentencia -> sentencia_incremento .)


state 15

    (15) sentencia -> sentencia_comentario .

    TAG_FIN         reduce using rule 15 (sentencia -> sentencia_comentario .)
    VARIABLE        reduce using rule 15 (sentencia -> sentencia_comentario .)
    DEFINE          reduce using rule 15 (sentencia -> sentencia_comentario .)
    ECHO            reduce using rule 15 (sentencia -> sentencia_comentario .)
    IF              reduce using rule 15 (sentencia -> sentencia_comentario .)
    FOREACH         reduce using rule 15 (sentencia -> sentencia_comentario .)
    FUNCTION        reduce using rule 15 (sentencia -> sentencia_comentario .)
    RETURN          reduce using rule 15 (sentencia -> sentencia_comentario .)
    IDENTIFICADOR   reduce using rule 15 (sentencia -> sentencia_comentario .)
    $end            reduce using rule 15 (sentencia -> sentencia_comentario .)
    LLAVE_DER       reduce using rule 15 (sentencia -> sentencia_comentario .)


state 16

    (31) asignacion -> VARIABLE . ASIGNAR expresion PUNTO_COMA
    (32) asignacion_array -> VARIABLE . CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (28) sentencia_incremento -> VARIABLE . MAS MAS PUNTO_COMA

    ASIGNAR         shift and go to state 26
    CORCHETE_IZQ    shift and go to state 27
    MAS             shift and go to state 28


state 17

    (33) declaracion_define -> DEFINE . PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 29


state 18

    (34) sentencia_echo -> ECHO . expresion PUNTO_COMA
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 30

state 19

    (35) sentencia_if -> IF . PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 37


state 20

    (16) sentencia_foreach -> FOREACH . PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> FOREACH . PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 38


state 21

    (18) sentencia_funcion -> FUNCTION . IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    IDENTIFICADOR   shift and go to state 39


state 22

    (23) sentencia_llamada_funcion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 40


state 23

    (22) sentencia_return -> RETURN . expresion PUNTO_COMA
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 41

state 24

    (1) programa -> TAG_INICIO sentencias TAG_FIN .

    $end            reduce using rule 1 (programa -> TAG_INICIO sentencias TAG_FIN .)


state 25

    (4) sentencias -> sentencias sentencia .

    TAG_FIN         reduce using rule 4 (sentencias -> sentencias sentencia .)
    VARIABLE        reduce using rule 4 (sentencias -> sentencias sentencia .)
    DEFINE          reduce using rule 4 (sentencias -> sentencias sentencia .)
    ECHO            reduce using rule 4 (sentencias -> sentencias sentencia .)
    IF              reduce using rule 4 (sentencias -> sentencias sentencia .)
    FOREACH         reduce using rule 4 (sentencias -> sentencias sentencia .)
    FUNCTION        reduce using rule 4 (sentencias -> sentencias sentencia .)
    RETURN          reduce using rule 4 (sentencias -> sentencias sentencia .)
    IDENTIFICADOR   reduce using rule 4 (sentencias -> sentencias sentencia .)
    $end            reduce using rule 4 (sentencias -> sentencias sentencia .)
    LLAVE_DER       reduce using rule 4 (sentencias -> sentencias sentencia .)


state 26

    (31) asignacion -> VARIABLE ASIGNAR . expresion PUNTO_COMA
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 42

state 27

    (32) asignacion_array -> VARIABLE CORCHETE_IZQ . CORCHETE_DER ASIGNAR expresion PUNTO_COMA

    CORCHETE_DER    shift and go to state 43


state 28

    (28) sentencia_incremento -> VARIABLE MAS . MAS PUNTO_COMA

    MAS             shift and go to state 44


state 29

    (33) declaracion_define -> DEFINE PAREN_IZQ . CADENA COMA expresion PAREN_DER PUNTO_COMA

    CADENA          shift and go to state 45


state 30

    (34) sentencia_echo -> ECHO expresion . PUNTO_COMA
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PUNTO_COMA      shift and go to state 46
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 31

    (27) expresion -> VARIABLE . CORCHETE_IZQ CADENA CORCHETE_DER
    (49) expresion -> VARIABLE .
    (55) expresion -> VARIABLE . CORCHETE_IZQ expresion CORCHETE_DER

    CORCHETE_IZQ    shift and go to state 52
    PUNTO_COMA      reduce using rule 49 (expresion -> VARIABLE .)
    PUNTO           reduce using rule 49 (expresion -> VARIABLE .)
    MAS             reduce using rule 49 (expresion -> VARIABLE .)
    MENOS           reduce using rule 49 (expresion -> VARIABLE .)
    MULTIPLICAR     reduce using rule 49 (expresion -> VARIABLE .)
    DIVIDIR         reduce using rule 49 (expresion -> VARIABLE .)
    CORCHETE_DER    reduce using rule 49 (expresion -> VARIABLE .)
    COMA            reduce using rule 49 (expresion -> VARIABLE .)
    PAREN_DER       reduce using rule 49 (expresion -> VARIABLE .)
    IGUAL           reduce using rule 49 (expresion -> VARIABLE .)
    NO_IGUAL        reduce using rule 49 (expresion -> VARIABLE .)
    MAYOR           reduce using rule 49 (expresion -> VARIABLE .)
    MENOR           reduce using rule 49 (expresion -> VARIABLE .)
    MAYOR_IGUAL     reduce using rule 49 (expresion -> VARIABLE .)
    MENOR_IGUAL     reduce using rule 49 (expresion -> VARIABLE .)


state 32

    (51) expresion -> CORCHETE_IZQ . CORCHETE_DER
    (52) expresion -> CORCHETE_IZQ . lista_elementos CORCHETE_DER
    (53) lista_elementos -> . expresion
    (54) lista_elementos -> . lista_elementos COMA expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    CORCHETE_DER    shift and go to state 53
    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    lista_elementos                shift and go to state 54
    expresion                      shift and go to state 55

state 33

    (48) expresion -> CADENA .

    PUNTO_COMA      reduce using rule 48 (expresion -> CADENA .)
    PUNTO           reduce using rule 48 (expresion -> CADENA .)
    MAS             reduce using rule 48 (expresion -> CADENA .)
    MENOS           reduce using rule 48 (expresion -> CADENA .)
    MULTIPLICAR     reduce using rule 48 (expresion -> CADENA .)
    DIVIDIR         reduce using rule 48 (expresion -> CADENA .)
    CORCHETE_DER    reduce using rule 48 (expresion -> CADENA .)
    COMA            reduce using rule 48 (expresion -> CADENA .)
    PAREN_DER       reduce using rule 48 (expresion -> CADENA .)
    IGUAL           reduce using rule 48 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 48 (expresion -> CADENA .)
    MAYOR           reduce using rule 48 (expresion -> CADENA .)
    MENOR           reduce using rule 48 (expresion -> CADENA .)
    MAYOR_IGUAL     reduce using rule 48 (expresion -> CADENA .)
    MENOR_IGUAL     reduce using rule 48 (expresion -> CADENA .)


state 34

    (46) expresion -> PAREN_IZQ . expresion PAREN_DER
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 56

state 35

    (47) expresion -> NUMERO .

    PUNTO_COMA      reduce using rule 47 (expresion -> NUMERO .)
    PUNTO           reduce using rule 47 (expresion -> NUMERO .)
    MAS             reduce using rule 47 (expresion -> NUMERO .)
    MENOS           reduce using rule 47 (expresion -> NUMERO .)
    MULTIPLICAR     reduce using rule 47 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 47 (expresion -> NUMERO .)
    CORCHETE_DER    reduce using rule 47 (expresion -> NUMERO .)
    COMA            reduce using rule 47 (expresion -> NUMERO .)
    PAREN_DER       reduce using rule 47 (expresion -> NUMERO .)
    IGUAL           reduce using rule 47 (expresion -> NUMERO .)
    NO_IGUAL        reduce using rule 47 (expresion -> NUMERO .)
    MAYOR           reduce using rule 47 (expresion -> NUMERO .)
    MENOR           reduce using rule 47 (expresion -> NUMERO .)
    MAYOR_IGUAL     reduce using rule 47 (expresion -> NUMERO .)
    MENOR_IGUAL     reduce using rule 47 (expresion -> NUMERO .)


state 36

    (50) expresion -> IDENTIFICADOR .

    PUNTO_COMA      reduce using rule 50 (expresion -> IDENTIFICADOR .)
    PUNTO           reduce using rule 50 (expresion -> IDENTIFICADOR .)
    MAS             reduce using rule 50 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 50 (expresion -> IDENTIFICADOR .)
    MULTIPLICAR     reduce using rule 50 (expresion -> IDENTIFICADOR .)
    DIVIDIR         reduce using rule 50 (expresion -> IDENTIFICADOR .)
    CORCHETE_DER    reduce using rule 50 (expresion -> IDENTIFICADOR .)
    COMA            reduce using rule 50 (expresion -> IDENTIFICADOR .)
    PAREN_DER       reduce using rule 50 (expresion -> IDENTIFICADOR .)
    IGUAL           reduce using rule 50 (expresion -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 50 (expresion -> IDENTIFICADOR .)
    MAYOR           reduce using rule 50 (expresion -> IDENTIFICADOR .)
    MENOR           reduce using rule 50 (expresion -> IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 50 (expresion -> IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 50 (expresion -> IDENTIFICADOR .)


state 37

    (35) sentencia_if -> IF PAREN_IZQ . condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (36) condicion -> . expresion IGUAL expresion
    (37) condicion -> . expresion NO_IGUAL expresion
    (38) condicion -> . expresion MAYOR expresion
    (39) condicion -> . expresion MENOR expresion
    (40) condicion -> . expresion MAYOR_IGUAL expresion
    (41) condicion -> . expresion MENOR_IGUAL expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    condicion                      shift and go to state 57
    expresion                      shift and go to state 58

state 38

    (16) sentencia_foreach -> FOREACH PAREN_IZQ . VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> FOREACH PAREN_IZQ . VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    VARIABLE        shift and go to state 59


state 39

    (18) sentencia_funcion -> FUNCTION IDENTIFICADOR . PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 60


state 40

    (23) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER PUNTO_COMA
    (24) lista_argumentos -> . expresion
    (25) lista_argumentos -> . lista_argumentos COMA expresion
    (26) lista_argumentos -> .
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    PAREN_DER       reduce using rule 26 (lista_argumentos -> .)
    COMA            reduce using rule 26 (lista_argumentos -> .)
    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    lista_argumentos               shift and go to state 61
    expresion                      shift and go to state 62

state 41

    (22) sentencia_return -> RETURN expresion . PUNTO_COMA
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PUNTO_COMA      shift and go to state 63
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 42

    (31) asignacion -> VARIABLE ASIGNAR expresion . PUNTO_COMA
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PUNTO_COMA      shift and go to state 64
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 43

    (32) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER . ASIGNAR expresion PUNTO_COMA

    ASIGNAR         shift and go to state 65


state 44

    (28) sentencia_incremento -> VARIABLE MAS MAS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 66


state 45

    (33) declaracion_define -> DEFINE PAREN_IZQ CADENA . COMA expresion PAREN_DER PUNTO_COMA

    COMA            shift and go to state 67


state 46

    (34) sentencia_echo -> ECHO expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    DEFINE          reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    ECHO            reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    IF              reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    FOREACH         reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    RETURN          reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    $end            reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 34 (sentencia_echo -> ECHO expresion PUNTO_COMA .)


state 47

    (29) expresion -> expresion PUNTO . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 68

state 48

    (42) expresion -> expresion MAS . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 69

state 49

    (43) expresion -> expresion MENOS . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 70

state 50

    (44) expresion -> expresion MULTIPLICAR . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 71

state 51

    (45) expresion -> expresion DIVIDIR . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 72

state 52

    (27) expresion -> VARIABLE CORCHETE_IZQ . CADENA CORCHETE_DER
    (55) expresion -> VARIABLE CORCHETE_IZQ . expresion CORCHETE_DER
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    CADENA          shift and go to state 73
    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 74

state 53

    (51) expresion -> CORCHETE_IZQ CORCHETE_DER .

    PUNTO_COMA      reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    PUNTO           reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    MAS             reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    MENOS           reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    MULTIPLICAR     reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    DIVIDIR         reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    COMA            reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    PAREN_DER       reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    IGUAL           reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    NO_IGUAL        reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    MAYOR           reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    MENOR           reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    MAYOR_IGUAL     reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)
    MENOR_IGUAL     reduce using rule 51 (expresion -> CORCHETE_IZQ CORCHETE_DER .)


state 54

    (52) expresion -> CORCHETE_IZQ lista_elementos . CORCHETE_DER
    (54) lista_elementos -> lista_elementos . COMA expresion

    CORCHETE_DER    shift and go to state 75
    COMA            shift and go to state 76


state 55

    (53) lista_elementos -> expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    CORCHETE_DER    reduce using rule 53 (lista_elementos -> expresion .)
    COMA            reduce using rule 53 (lista_elementos -> expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 56

    (46) expresion -> PAREN_IZQ expresion . PAREN_DER
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       shift and go to state 77
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 57

    (35) sentencia_if -> IF PAREN_IZQ condicion . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_DER       shift and go to state 78


state 58

    (36) condicion -> expresion . IGUAL expresion
    (37) condicion -> expresion . NO_IGUAL expresion
    (38) condicion -> expresion . MAYOR expresion
    (39) condicion -> expresion . MENOR expresion
    (40) condicion -> expresion . MAYOR_IGUAL expresion
    (41) condicion -> expresion . MENOR_IGUAL expresion
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    IGUAL           shift and go to state 79
    NO_IGUAL        shift and go to state 80
    MAYOR           shift and go to state 81
    MENOR           shift and go to state 82
    MAYOR_IGUAL     shift and go to state 83
    MENOR_IGUAL     shift and go to state 84
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 59

    (16) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE . AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE . AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    AS              shift and go to state 85


state 60

    (18) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ . parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (19) parametros_funcion -> . VARIABLE
    (20) parametros_funcion -> . parametros_funcion COMA VARIABLE
    (21) parametros_funcion -> .

    VARIABLE        shift and go to state 87
    PAREN_DER       reduce using rule 21 (parametros_funcion -> .)
    COMA            reduce using rule 21 (parametros_funcion -> .)

    parametros_funcion             shift and go to state 86

state 61

    (23) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER PUNTO_COMA
    (25) lista_argumentos -> lista_argumentos . COMA expresion

    PAREN_DER       shift and go to state 88
    COMA            shift and go to state 89


state 62

    (24) lista_argumentos -> expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       reduce using rule 24 (lista_argumentos -> expresion .)
    COMA            reduce using rule 24 (lista_argumentos -> expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 63

    (22) sentencia_return -> RETURN expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    DEFINE          reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    ECHO            reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    IF              reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    FOREACH         reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    RETURN          reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    $end            reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 22 (sentencia_return -> RETURN expresion PUNTO_COMA .)


state 64

    (31) asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    DEFINE          reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    ECHO            reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    IF              reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    FOREACH         reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    RETURN          reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    $end            reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 31 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)


state 65

    (32) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR . expresion PUNTO_COMA
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 90

state 66

    (28) sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .

    TAG_FIN         reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    VARIABLE        reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    DEFINE          reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    ECHO            reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    IF              reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    FOREACH         reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    FUNCTION        reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    RETURN          reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    $end            reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    LLAVE_DER       reduce using rule 28 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)


state 67

    (33) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA . expresion PAREN_DER PUNTO_COMA
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 91

state 68

    (29) expresion -> expresion PUNTO expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    PUNTO_COMA      reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    CORCHETE_DER    reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    COMA            reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    PAREN_DER       reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    IGUAL           reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    NO_IGUAL        reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    MAYOR           reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    MENOR           reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    MAYOR_IGUAL     reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    MENOR_IGUAL     reduce using rule 29 (expresion -> expresion PUNTO expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51

  ! PUNTO           [ reduce using rule 29 (expresion -> expresion PUNTO expresion .) ]
  ! MAS             [ reduce using rule 29 (expresion -> expresion PUNTO expresion .) ]
  ! MENOS           [ reduce using rule 29 (expresion -> expresion PUNTO expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 29 (expresion -> expresion PUNTO expresion .) ]
  ! DIVIDIR         [ reduce using rule 29 (expresion -> expresion PUNTO expresion .) ]


state 69

    (42) expresion -> expresion MAS expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    PUNTO_COMA      reduce using rule 42 (expresion -> expresion MAS expresion .)
    CORCHETE_DER    reduce using rule 42 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 42 (expresion -> expresion MAS expresion .)
    PAREN_DER       reduce using rule 42 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 42 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 42 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 42 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 42 (expresion -> expresion MAS expresion .)
    MAYOR_IGUAL     reduce using rule 42 (expresion -> expresion MAS expresion .)
    MENOR_IGUAL     reduce using rule 42 (expresion -> expresion MAS expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51

  ! PUNTO           [ reduce using rule 42 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ reduce using rule 42 (expresion -> expresion MAS expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> expresion MAS expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 42 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIR         [ reduce using rule 42 (expresion -> expresion MAS expresion .) ]


state 70

    (43) expresion -> expresion MENOS expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    PUNTO_COMA      reduce using rule 43 (expresion -> expresion MENOS expresion .)
    CORCHETE_DER    reduce using rule 43 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 43 (expresion -> expresion MENOS expresion .)
    PAREN_DER       reduce using rule 43 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 43 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 43 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 43 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 43 (expresion -> expresion MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 43 (expresion -> expresion MENOS expresion .)
    MENOR_IGUAL     reduce using rule 43 (expresion -> expresion MENOS expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51

  ! PUNTO           [ reduce using rule 43 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ reduce using rule 43 (expresion -> expresion MENOS expresion .) ]
  ! MENOS           [ reduce using rule 43 (expresion -> expresion MENOS expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 43 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIR         [ reduce using rule 43 (expresion -> expresion MENOS expresion .) ]


state 71

    (44) expresion -> expresion MULTIPLICAR expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    PUNTO_COMA      reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    CORCHETE_DER    reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    COMA            reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    PAREN_DER       reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    IGUAL           reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    NO_IGUAL        reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    MAYOR           reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    MENOR           reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    MAYOR_IGUAL     reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    MENOR_IGUAL     reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51

  ! PUNTO           [ reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! MAS             [ reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! MENOS           [ reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! DIVIDIR         [ reduce using rule 44 (expresion -> expresion MULTIPLICAR expresion .) ]


state 72

    (45) expresion -> expresion DIVIDIR expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
    PUNTO_COMA      reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    CORCHETE_DER    reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    COMA            reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    PAREN_DER       reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    IGUAL           reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    NO_IGUAL        reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    MAYOR           reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    MENOR           reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    MAYOR_IGUAL     reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    MENOR_IGUAL     reduce using rule 45 (expresion -> expresion DIVIDIR expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51

  ! PUNTO           [ reduce using rule 45 (expresion -> expresion DIVIDIR expresion .) ]
  ! MAS             [ reduce using rule 45 (expresion -> expresion DIVIDIR expresion .) ]
  ! MENOS           [ reduce using rule 45 (expresion -> expresion DIVIDIR expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 45 (expresion -> expresion DIVIDIR expresion .) ]
  ! DIVIDIR         [ reduce using rule 45 (expresion -> expresion DIVIDIR expresion .) ]


state 73

    (27) expresion -> VARIABLE CORCHETE_IZQ CADENA . CORCHETE_DER
    (48) expresion -> CADENA .

  ! shift/reduce conflict for CORCHETE_DER resolved as shift
    CORCHETE_DER    shift and go to state 92
    PUNTO           reduce using rule 48 (expresion -> CADENA .)
    MAS             reduce using rule 48 (expresion -> CADENA .)
    MENOS           reduce using rule 48 (expresion -> CADENA .)
    MULTIPLICAR     reduce using rule 48 (expresion -> CADENA .)
    DIVIDIR         reduce using rule 48 (expresion -> CADENA .)

  ! CORCHETE_DER    [ reduce using rule 48 (expresion -> CADENA .) ]


state 74

    (55) expresion -> VARIABLE CORCHETE_IZQ expresion . CORCHETE_DER
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    CORCHETE_DER    shift and go to state 93
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 75

    (52) expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .

    PUNTO_COMA      reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    PUNTO           reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    MAS             reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    MENOS           reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    MULTIPLICAR     reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    DIVIDIR         reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    COMA            reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    PAREN_DER       reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    IGUAL           reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    NO_IGUAL        reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    MAYOR           reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    MENOR           reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    MAYOR_IGUAL     reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)
    MENOR_IGUAL     reduce using rule 52 (expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER .)


state 76

    (54) lista_elementos -> lista_elementos COMA . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 94

state 77

    (46) expresion -> PAREN_IZQ expresion PAREN_DER .

    PUNTO_COMA      reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    PUNTO           reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAS             reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOS           reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MULTIPLICAR     reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    DIVIDIR         reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    CORCHETE_DER    reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    COMA            reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    PAREN_DER       reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    IGUAL           reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    NO_IGUAL        reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAYOR           reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOR           reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAYOR_IGUAL     reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOR_IGUAL     reduce using rule 46 (expresion -> PAREN_IZQ expresion PAREN_DER .)


state 78

    (35) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 95


state 79

    (36) condicion -> expresion IGUAL . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 96

state 80

    (37) condicion -> expresion NO_IGUAL . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 97

state 81

    (38) condicion -> expresion MAYOR . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 98

state 82

    (39) condicion -> expresion MENOR . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 99

state 83

    (40) condicion -> expresion MAYOR_IGUAL . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 100

state 84

    (41) condicion -> expresion MENOR_IGUAL . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 101

state 85

    (16) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS . ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS . VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    ASIGNAR         shift and go to state 103
    VARIABLE        shift and go to state 102


state 86

    (18) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (20) parametros_funcion -> parametros_funcion . COMA VARIABLE

    PAREN_DER       shift and go to state 104
    COMA            shift and go to state 105


state 87

    (19) parametros_funcion -> VARIABLE .

    PAREN_DER       reduce using rule 19 (parametros_funcion -> VARIABLE .)
    COMA            reduce using rule 19 (parametros_funcion -> VARIABLE .)


state 88

    (23) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 106


state 89

    (25) lista_argumentos -> lista_argumentos COMA . expresion
    (27) expresion -> . VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER
    (29) expresion -> . expresion PUNTO expresion
    (42) expresion -> . expresion MAS expresion
    (43) expresion -> . expresion MENOS expresion
    (44) expresion -> . expresion MULTIPLICAR expresion
    (45) expresion -> . expresion DIVIDIR expresion
    (46) expresion -> . PAREN_IZQ expresion PAREN_DER
    (47) expresion -> . NUMERO
    (48) expresion -> . CADENA
    (49) expresion -> . VARIABLE
    (50) expresion -> . IDENTIFICADOR
    (51) expresion -> . CORCHETE_IZQ CORCHETE_DER
    (52) expresion -> . CORCHETE_IZQ lista_elementos CORCHETE_DER
    (55) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER

    VARIABLE        shift and go to state 31
    PAREN_IZQ       shift and go to state 34
    NUMERO          shift and go to state 35
    CADENA          shift and go to state 33
    IDENTIFICADOR   shift and go to state 36
    CORCHETE_IZQ    shift and go to state 32

    expresion                      shift and go to state 107

state 90

    (32) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion . PUNTO_COMA
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PUNTO_COMA      shift and go to state 108
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 91

    (33) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion . PAREN_DER PUNTO_COMA
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       shift and go to state 109
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 92

    (27) expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .

    PUNTO_COMA      reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    PUNTO           reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    MAS             reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    MENOS           reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    MULTIPLICAR     reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    DIVIDIR         reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    COMA            reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    PAREN_DER       reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    IGUAL           reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    NO_IGUAL        reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    MAYOR           reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    MENOR           reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    MAYOR_IGUAL     reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)
    MENOR_IGUAL     reduce using rule 27 (expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER .)


state 93

    (55) expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .

    PUNTO_COMA      reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    PUNTO           reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAS             reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOS           reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MULTIPLICAR     reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    DIVIDIR         reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    COMA            reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    PAREN_DER       reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    IGUAL           reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    NO_IGUAL        reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAYOR           reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOR           reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAYOR_IGUAL     reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOR_IGUAL     reduce using rule 55 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)


state 94

    (54) lista_elementos -> lista_elementos COMA expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    CORCHETE_DER    reduce using rule 54 (lista_elementos -> lista_elementos COMA expresion .)
    COMA            reduce using rule 54 (lista_elementos -> lista_elementos COMA expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 95

    (35) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    LLAVE_DER       reduce using rule 30 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 110
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 96

    (36) condicion -> expresion IGUAL expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       reduce using rule 36 (condicion -> expresion IGUAL expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 97

    (37) condicion -> expresion NO_IGUAL expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       reduce using rule 37 (condicion -> expresion NO_IGUAL expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 98

    (38) condicion -> expresion MAYOR expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       reduce using rule 38 (condicion -> expresion MAYOR expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 99

    (39) condicion -> expresion MENOR expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       reduce using rule 39 (condicion -> expresion MENOR expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 100

    (40) condicion -> expresion MAYOR_IGUAL expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       reduce using rule 40 (condicion -> expresion MAYOR_IGUAL expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 101

    (41) condicion -> expresion MENOR_IGUAL expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       reduce using rule 41 (condicion -> expresion MENOR_IGUAL expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 102

    (17) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_DER       shift and go to state 111


state 103

    (16) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR . VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    VARIABLE        shift and go to state 112


state 104

    (18) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 113


state 105

    (20) parametros_funcion -> parametros_funcion COMA . VARIABLE

    VARIABLE        shift and go to state 114


state 106

    (23) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 23 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)


state 107

    (25) lista_argumentos -> lista_argumentos COMA expresion .
    (29) expresion -> expresion . PUNTO expresion
    (42) expresion -> expresion . MAS expresion
    (43) expresion -> expresion . MENOS expresion
    (44) expresion -> expresion . MULTIPLICAR expresion
    (45) expresion -> expresion . DIVIDIR expresion

    PAREN_DER       reduce using rule 25 (lista_argumentos -> lista_argumentos COMA expresion .)
    COMA            reduce using rule 25 (lista_argumentos -> lista_argumentos COMA expresion .)
    PUNTO           shift and go to state 47
    MAS             shift and go to state 48
    MENOS           shift and go to state 49
    MULTIPLICAR     shift and go to state 50
    DIVIDIR         shift and go to state 51


state 108

    (32) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    DEFINE          reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    ECHO            reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    IF              reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    FOREACH         reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    RETURN          reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    $end            reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 32 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)


state 109

    (33) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 115


state 110

    (35) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    LLAVE_DER       shift and go to state 116
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! LLAVE_DER       [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 111

    (17) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 117


state 112

    (16) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_DER       shift and go to state 118


state 113

    (18) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    LLAVE_DER       reduce using rule 30 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 119
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 114

    (20) parametros_funcion -> parametros_funcion COMA VARIABLE .

    PAREN_DER       reduce using rule 20 (parametros_funcion -> parametros_funcion COMA VARIABLE .)
    COMA            reduce using rule 20 (parametros_funcion -> parametros_funcion COMA VARIABLE .)


state 115

    (33) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 33 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)


state 116

    (35) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 35 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)


state 117

    (17) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    LLAVE_DER       reduce using rule 30 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 120
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 118

    (16) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 121


state 119

    (18) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    LLAVE_DER       shift and go to state 122
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! LLAVE_DER       [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 120

    (17) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    LLAVE_DER       shift and go to state 123
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! LLAVE_DER       [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 121

    (16) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    LLAVE_DER       reduce using rule 30 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 124
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 122

    (18) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 18 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)


state 123

    (17) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 17 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)


state 124

    (16) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (31) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (33) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (34) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (32) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (35) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (16) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (17) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (18) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (22) sentencia_return -> . RETURN expresion PUNTO_COMA
    (23) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (28) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (30) sentencia_comentario -> .

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    LLAVE_DER       shift and go to state 125
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! LLAVE_DER       [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 30 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 30 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 125

    (16) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 16 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 2 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 2 resolved as shift
WARNING: shift/reduce conflict for TAG_FIN in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 3 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 3 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 68 resolved as shift
WARNING: shift/reduce conflict for MAS in state 68 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 68 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 68 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 69 resolved as shift
WARNING: shift/reduce conflict for MAS in state 69 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 69 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 69 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 70 resolved as shift
WARNING: shift/reduce conflict for MAS in state 70 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 70 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 70 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 71 resolved as shift
WARNING: shift/reduce conflict for MAS in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 71 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 71 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 72 resolved as shift
WARNING: shift/reduce conflict for MAS in state 72 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 72 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 72 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_DER in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 95 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 95 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 95 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 95 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 95 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 95 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 110 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 110 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 110 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 110 resolved as shift
WARNING: shift/reduce conflict for IF in state 110 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 110 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 110 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 110 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 110 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 113 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 113 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 113 resolved as shift
WARNING: shift/reduce conflict for IF in state 113 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 113 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 113 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 113 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 113 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 117 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 117 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 117 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 117 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 117 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 117 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 119 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 119 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 119 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 119 resolved as shift
WARNING: shift/reduce conflict for IF in state 119 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 119 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 119 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 119 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 119 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 120 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 120 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 120 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 120 resolved as shift
WARNING: shift/reduce conflict for IF in state 120 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 120 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 120 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 120 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 120 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 121 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 121 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 121 resolved as shift
WARNING: shift/reduce conflict for IF in state 121 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 121 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 121 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 121 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 121 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 124 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 124 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 124 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 124 resolved as shift
WARNING: shift/reduce conflict for IF in state 124 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 124 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 124 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 124 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 124 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> TAG_INICIO sentencias)
WARNING: rejected rule (sentencia_comentario -> <empty>) in state 3
