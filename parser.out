Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DOBLE_DOS_PUNTOS
    ELSEIF
    FLECHA
    FOR
    NEW
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    READLINE
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> TAG_INICIO sentencias TAG_FIN
Rule 2     programa -> TAG_INICIO sentencias
Rule 3     sentencias -> sentencia
Rule 4     sentencias -> sentencias sentencia
Rule 5     sentencia -> asignacion
Rule 6     sentencia -> declaracion_define
Rule 7     sentencia -> sentencia_echo
Rule 8     sentencia -> asignacion_array
Rule 9     sentencia -> sentencia_if
Rule 10    sentencia -> sentencia_foreach
Rule 11    sentencia -> sentencia_funcion
Rule 12    sentencia -> sentencia_return
Rule 13    sentencia -> sentencia_llamada_funcion
Rule 14    sentencia -> sentencia_incremento
Rule 15    sentencia -> sentencia_comentario
Rule 16    sentencia -> operacion_pila
Rule 17    asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA
Rule 18    asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
Rule 19    asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
Rule 20    asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
Rule 21    asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
Rule 22    declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
Rule 23    sentencia_echo -> ECHO expresion PUNTO_COMA
Rule 24    sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 25    sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
Rule 26    condicion -> expresion IGUAL expresion
Rule 27    condicion -> expresion NO_IGUAL expresion
Rule 28    condicion -> expresion MAYOR expresion
Rule 29    condicion -> expresion MENOR expresion
Rule 30    condicion -> expresion MAYOR_IGUAL expresion
Rule 31    condicion -> expresion MENOR_IGUAL expresion
Rule 32    condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
Rule 33    expresion -> expresion MAS expresion
Rule 34    expresion -> expresion MENOS expresion
Rule 35    expresion -> expresion MULTIPLICAR expresion
Rule 36    expresion -> expresion DIVIDIR expresion
Rule 37    expresion -> PAREN_IZQ expresion PAREN_DER
Rule 38    expresion -> NUMERO
Rule 39    expresion -> CADENA
Rule 40    expresion -> VARIABLE
Rule 41    expresion -> IDENTIFICADOR
Rule 42    expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
Rule 43    expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
Rule 44    elementos_array_coma_opt -> elementos_array
Rule 45    elementos_array_coma_opt -> elementos_array COMA
Rule 46    elementos_array_coma_opt -> <empty>
Rule 47    elementos_array -> elemento_array
Rule 48    elementos_array -> elementos_array COMA elemento_array
Rule 49    elemento_array -> expresion
Rule 50    elemento_array -> CADENA ARRAY_ASOCIATIVO expresion
Rule 51    expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
Rule 52    expresion -> expresion PUNTO expresion
Rule 53    sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA
Rule 54    sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 55    sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 56    parametros_funcion -> VARIABLE
Rule 57    parametros_funcion -> parametros_funcion COMA VARIABLE
Rule 58    parametros_funcion -> <empty>
Rule 59    sentencia_return -> RETURN expresion PUNTO_COMA
Rule 60    sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
Rule 61    lista_argumentos -> expresion
Rule 62    lista_argumentos -> lista_argumentos COMA expresion
Rule 63    lista_argumentos -> <empty>
Rule 64    sentencia_comentario -> <empty>
Rule 65    operacion_pila -> operacion_push
Rule 66    operacion_pila -> operacion_pop
Rule 67    operacion_pila -> operacion_peek
Rule 68    operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
Rule 69    operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
Rule 70    operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
Rule 71    operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
Rule 72    operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER
Rule 73    operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER
Rule 74    expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER

Terminals, with rules where they appear

ARRAY_ASOCIATIVO     : 50
ARRAY_POP            : 19 70
ARRAY_PUSH           : 20 68
AS                   : 54
ASIGNAR              : 17 18 19 20 21
CADENA               : 22 39 50
CLASS                : 
COMA                 : 20 22 45 48 57 62 68 69
CORCHETE_DER         : 21 43 51 73
CORCHETE_IZQ         : 21 43 51 73
COUNT                : 73 74
DEFINE               : 22
DIVIDIR              : 36
DOBLE_DOS_PUNTOS     : 
ECHO                 : 23
ELSE                 : 25
ELSEIF               : 
FLECHA               : 
FOR                  : 
FOREACH              : 54
FUNCTION             : 55
IDENTIFICADOR        : 18 32 41 42 55 60
IF                   : 24 25
IGUAL                : 26
LLAVE_DER            : 24 25 25 54 55
LLAVE_IZQ            : 24 25 25 54 55
MAS                  : 33 53 53
MAYOR                : 28
MAYOR_IGUAL          : 30
MENOR                : 29
MENOR_IGUAL          : 31
MENOS                : 34 73
MULTIPLICAR          : 35
NEW                  : 
NO_IGUAL             : 27
NUMERO               : 38 73
PAREN_DER            : 18 19 20 22 24 25 32 37 42 54 55 60 68 69 70 71 72 73 74
PAREN_IZQ            : 18 19 20 22 24 25 32 37 42 54 55 60 68 69 70 71 72 73 74
PEEK                 : 72
POP                  : 71
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 52
PUNTO_COMA           : 17 18 19 20 21 22 23 53 59 60 68 69 70 71
PUSH                 : 69
READLINE             : 
RETURN               : 59
TAG_FIN              : 1
TAG_INICIO           : 1 2
VARIABLE             : 17 18 19 19 20 20 21 40 51 53 54 54 56 57 68 69 70 71 72 73 73 74
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
asignacion_array     : 8
condicion            : 24 25
declaracion_define   : 6
elemento_array       : 47 48
elementos_array      : 44 45 48
elementos_array_coma_opt : 43
expresion            : 17 20 21 22 23 26 26 27 27 28 28 29 29 30 30 31 31 33 33 34 34 35 35 36 36 37 49 50 51 52 52 59 61 62 68 69
lista_argumentos     : 18 32 42 60 62
operacion_peek       : 67
operacion_pila       : 16
operacion_pop        : 66
operacion_push       : 65
parametros_funcion   : 55 57
programa             : 0
sentencia            : 3 4
sentencia_comentario : 15
sentencia_echo       : 7
sentencia_foreach    : 10
sentencia_funcion    : 11
sentencia_if         : 9
sentencia_incremento : 14
sentencia_llamada_funcion : 13
sentencia_return     : 12
sentencias           : 1 2 4 24 25 25 54 55

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . TAG_INICIO sentencias TAG_FIN
    (2) programa -> . TAG_INICIO sentencias

    TAG_INICIO      shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> TAG_INICIO . sentencias TAG_FIN
    (2) programa -> TAG_INICIO . sentencias
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    TAG_FIN         reduce using rule 64 (sentencia_comentario -> .)
    $end            reduce using rule 64 (sentencia_comentario -> .)
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 3

    (1) programa -> TAG_INICIO sentencias . TAG_FIN
    (2) programa -> TAG_INICIO sentencias .
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for TAG_FIN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> TAG_INICIO sentencias .)
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    TAG_FIN         shift and go to state 33
    $end            reduce using rule 2 (programa -> TAG_INICIO sentencias .)
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! TAG_FIN         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! $end            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 34
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 4

    (3) sentencias -> sentencia .

    TAG_FIN         reduce using rule 3 (sentencias -> sentencia .)
    VARIABLE        reduce using rule 3 (sentencias -> sentencia .)
    DEFINE          reduce using rule 3 (sentencias -> sentencia .)
    ECHO            reduce using rule 3 (sentencias -> sentencia .)
    IF              reduce using rule 3 (sentencias -> sentencia .)
    FOREACH         reduce using rule 3 (sentencias -> sentencia .)
    FUNCTION        reduce using rule 3 (sentencias -> sentencia .)
    RETURN          reduce using rule 3 (sentencias -> sentencia .)
    IDENTIFICADOR   reduce using rule 3 (sentencias -> sentencia .)
    ARRAY_PUSH      reduce using rule 3 (sentencias -> sentencia .)
    PUSH            reduce using rule 3 (sentencias -> sentencia .)
    ARRAY_POP       reduce using rule 3 (sentencias -> sentencia .)
    POP             reduce using rule 3 (sentencias -> sentencia .)
    PEEK            reduce using rule 3 (sentencias -> sentencia .)
    $end            reduce using rule 3 (sentencias -> sentencia .)
    LLAVE_DER       reduce using rule 3 (sentencias -> sentencia .)


state 5

    (5) sentencia -> asignacion .

    TAG_FIN         reduce using rule 5 (sentencia -> asignacion .)
    VARIABLE        reduce using rule 5 (sentencia -> asignacion .)
    DEFINE          reduce using rule 5 (sentencia -> asignacion .)
    ECHO            reduce using rule 5 (sentencia -> asignacion .)
    IF              reduce using rule 5 (sentencia -> asignacion .)
    FOREACH         reduce using rule 5 (sentencia -> asignacion .)
    FUNCTION        reduce using rule 5 (sentencia -> asignacion .)
    RETURN          reduce using rule 5 (sentencia -> asignacion .)
    IDENTIFICADOR   reduce using rule 5 (sentencia -> asignacion .)
    ARRAY_PUSH      reduce using rule 5 (sentencia -> asignacion .)
    PUSH            reduce using rule 5 (sentencia -> asignacion .)
    ARRAY_POP       reduce using rule 5 (sentencia -> asignacion .)
    POP             reduce using rule 5 (sentencia -> asignacion .)
    PEEK            reduce using rule 5 (sentencia -> asignacion .)
    $end            reduce using rule 5 (sentencia -> asignacion .)
    LLAVE_DER       reduce using rule 5 (sentencia -> asignacion .)


state 6

    (6) sentencia -> declaracion_define .

    TAG_FIN         reduce using rule 6 (sentencia -> declaracion_define .)
    VARIABLE        reduce using rule 6 (sentencia -> declaracion_define .)
    DEFINE          reduce using rule 6 (sentencia -> declaracion_define .)
    ECHO            reduce using rule 6 (sentencia -> declaracion_define .)
    IF              reduce using rule 6 (sentencia -> declaracion_define .)
    FOREACH         reduce using rule 6 (sentencia -> declaracion_define .)
    FUNCTION        reduce using rule 6 (sentencia -> declaracion_define .)
    RETURN          reduce using rule 6 (sentencia -> declaracion_define .)
    IDENTIFICADOR   reduce using rule 6 (sentencia -> declaracion_define .)
    ARRAY_PUSH      reduce using rule 6 (sentencia -> declaracion_define .)
    PUSH            reduce using rule 6 (sentencia -> declaracion_define .)
    ARRAY_POP       reduce using rule 6 (sentencia -> declaracion_define .)
    POP             reduce using rule 6 (sentencia -> declaracion_define .)
    PEEK            reduce using rule 6 (sentencia -> declaracion_define .)
    $end            reduce using rule 6 (sentencia -> declaracion_define .)
    LLAVE_DER       reduce using rule 6 (sentencia -> declaracion_define .)


state 7

    (7) sentencia -> sentencia_echo .

    TAG_FIN         reduce using rule 7 (sentencia -> sentencia_echo .)
    VARIABLE        reduce using rule 7 (sentencia -> sentencia_echo .)
    DEFINE          reduce using rule 7 (sentencia -> sentencia_echo .)
    ECHO            reduce using rule 7 (sentencia -> sentencia_echo .)
    IF              reduce using rule 7 (sentencia -> sentencia_echo .)
    FOREACH         reduce using rule 7 (sentencia -> sentencia_echo .)
    FUNCTION        reduce using rule 7 (sentencia -> sentencia_echo .)
    RETURN          reduce using rule 7 (sentencia -> sentencia_echo .)
    IDENTIFICADOR   reduce using rule 7 (sentencia -> sentencia_echo .)
    ARRAY_PUSH      reduce using rule 7 (sentencia -> sentencia_echo .)
    PUSH            reduce using rule 7 (sentencia -> sentencia_echo .)
    ARRAY_POP       reduce using rule 7 (sentencia -> sentencia_echo .)
    POP             reduce using rule 7 (sentencia -> sentencia_echo .)
    PEEK            reduce using rule 7 (sentencia -> sentencia_echo .)
    $end            reduce using rule 7 (sentencia -> sentencia_echo .)
    LLAVE_DER       reduce using rule 7 (sentencia -> sentencia_echo .)


state 8

    (8) sentencia -> asignacion_array .

    TAG_FIN         reduce using rule 8 (sentencia -> asignacion_array .)
    VARIABLE        reduce using rule 8 (sentencia -> asignacion_array .)
    DEFINE          reduce using rule 8 (sentencia -> asignacion_array .)
    ECHO            reduce using rule 8 (sentencia -> asignacion_array .)
    IF              reduce using rule 8 (sentencia -> asignacion_array .)
    FOREACH         reduce using rule 8 (sentencia -> asignacion_array .)
    FUNCTION        reduce using rule 8 (sentencia -> asignacion_array .)
    RETURN          reduce using rule 8 (sentencia -> asignacion_array .)
    IDENTIFICADOR   reduce using rule 8 (sentencia -> asignacion_array .)
    ARRAY_PUSH      reduce using rule 8 (sentencia -> asignacion_array .)
    PUSH            reduce using rule 8 (sentencia -> asignacion_array .)
    ARRAY_POP       reduce using rule 8 (sentencia -> asignacion_array .)
    POP             reduce using rule 8 (sentencia -> asignacion_array .)
    PEEK            reduce using rule 8 (sentencia -> asignacion_array .)
    $end            reduce using rule 8 (sentencia -> asignacion_array .)
    LLAVE_DER       reduce using rule 8 (sentencia -> asignacion_array .)


state 9

    (9) sentencia -> sentencia_if .

    TAG_FIN         reduce using rule 9 (sentencia -> sentencia_if .)
    VARIABLE        reduce using rule 9 (sentencia -> sentencia_if .)
    DEFINE          reduce using rule 9 (sentencia -> sentencia_if .)
    ECHO            reduce using rule 9 (sentencia -> sentencia_if .)
    IF              reduce using rule 9 (sentencia -> sentencia_if .)
    FOREACH         reduce using rule 9 (sentencia -> sentencia_if .)
    FUNCTION        reduce using rule 9 (sentencia -> sentencia_if .)
    RETURN          reduce using rule 9 (sentencia -> sentencia_if .)
    IDENTIFICADOR   reduce using rule 9 (sentencia -> sentencia_if .)
    ARRAY_PUSH      reduce using rule 9 (sentencia -> sentencia_if .)
    PUSH            reduce using rule 9 (sentencia -> sentencia_if .)
    ARRAY_POP       reduce using rule 9 (sentencia -> sentencia_if .)
    POP             reduce using rule 9 (sentencia -> sentencia_if .)
    PEEK            reduce using rule 9 (sentencia -> sentencia_if .)
    $end            reduce using rule 9 (sentencia -> sentencia_if .)
    LLAVE_DER       reduce using rule 9 (sentencia -> sentencia_if .)


state 10

    (10) sentencia -> sentencia_foreach .

    TAG_FIN         reduce using rule 10 (sentencia -> sentencia_foreach .)
    VARIABLE        reduce using rule 10 (sentencia -> sentencia_foreach .)
    DEFINE          reduce using rule 10 (sentencia -> sentencia_foreach .)
    ECHO            reduce using rule 10 (sentencia -> sentencia_foreach .)
    IF              reduce using rule 10 (sentencia -> sentencia_foreach .)
    FOREACH         reduce using rule 10 (sentencia -> sentencia_foreach .)
    FUNCTION        reduce using rule 10 (sentencia -> sentencia_foreach .)
    RETURN          reduce using rule 10 (sentencia -> sentencia_foreach .)
    IDENTIFICADOR   reduce using rule 10 (sentencia -> sentencia_foreach .)
    ARRAY_PUSH      reduce using rule 10 (sentencia -> sentencia_foreach .)
    PUSH            reduce using rule 10 (sentencia -> sentencia_foreach .)
    ARRAY_POP       reduce using rule 10 (sentencia -> sentencia_foreach .)
    POP             reduce using rule 10 (sentencia -> sentencia_foreach .)
    PEEK            reduce using rule 10 (sentencia -> sentencia_foreach .)
    $end            reduce using rule 10 (sentencia -> sentencia_foreach .)
    LLAVE_DER       reduce using rule 10 (sentencia -> sentencia_foreach .)


state 11

    (11) sentencia -> sentencia_funcion .

    TAG_FIN         reduce using rule 11 (sentencia -> sentencia_funcion .)
    VARIABLE        reduce using rule 11 (sentencia -> sentencia_funcion .)
    DEFINE          reduce using rule 11 (sentencia -> sentencia_funcion .)
    ECHO            reduce using rule 11 (sentencia -> sentencia_funcion .)
    IF              reduce using rule 11 (sentencia -> sentencia_funcion .)
    FOREACH         reduce using rule 11 (sentencia -> sentencia_funcion .)
    FUNCTION        reduce using rule 11 (sentencia -> sentencia_funcion .)
    RETURN          reduce using rule 11 (sentencia -> sentencia_funcion .)
    IDENTIFICADOR   reduce using rule 11 (sentencia -> sentencia_funcion .)
    ARRAY_PUSH      reduce using rule 11 (sentencia -> sentencia_funcion .)
    PUSH            reduce using rule 11 (sentencia -> sentencia_funcion .)
    ARRAY_POP       reduce using rule 11 (sentencia -> sentencia_funcion .)
    POP             reduce using rule 11 (sentencia -> sentencia_funcion .)
    PEEK            reduce using rule 11 (sentencia -> sentencia_funcion .)
    $end            reduce using rule 11 (sentencia -> sentencia_funcion .)
    LLAVE_DER       reduce using rule 11 (sentencia -> sentencia_funcion .)


state 12

    (12) sentencia -> sentencia_return .

    TAG_FIN         reduce using rule 12 (sentencia -> sentencia_return .)
    VARIABLE        reduce using rule 12 (sentencia -> sentencia_return .)
    DEFINE          reduce using rule 12 (sentencia -> sentencia_return .)
    ECHO            reduce using rule 12 (sentencia -> sentencia_return .)
    IF              reduce using rule 12 (sentencia -> sentencia_return .)
    FOREACH         reduce using rule 12 (sentencia -> sentencia_return .)
    FUNCTION        reduce using rule 12 (sentencia -> sentencia_return .)
    RETURN          reduce using rule 12 (sentencia -> sentencia_return .)
    IDENTIFICADOR   reduce using rule 12 (sentencia -> sentencia_return .)
    ARRAY_PUSH      reduce using rule 12 (sentencia -> sentencia_return .)
    PUSH            reduce using rule 12 (sentencia -> sentencia_return .)
    ARRAY_POP       reduce using rule 12 (sentencia -> sentencia_return .)
    POP             reduce using rule 12 (sentencia -> sentencia_return .)
    PEEK            reduce using rule 12 (sentencia -> sentencia_return .)
    $end            reduce using rule 12 (sentencia -> sentencia_return .)
    LLAVE_DER       reduce using rule 12 (sentencia -> sentencia_return .)


state 13

    (13) sentencia -> sentencia_llamada_funcion .

    TAG_FIN         reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    VARIABLE        reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    DEFINE          reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    ECHO            reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    IF              reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    FOREACH         reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    FUNCTION        reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    RETURN          reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    IDENTIFICADOR   reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    ARRAY_PUSH      reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    PUSH            reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    ARRAY_POP       reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    POP             reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    PEEK            reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    $end            reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    LLAVE_DER       reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)


state 14

    (14) sentencia -> sentencia_incremento .

    TAG_FIN         reduce using rule 14 (sentencia -> sentencia_incremento .)
    VARIABLE        reduce using rule 14 (sentencia -> sentencia_incremento .)
    DEFINE          reduce using rule 14 (sentencia -> sentencia_incremento .)
    ECHO            reduce using rule 14 (sentencia -> sentencia_incremento .)
    IF              reduce using rule 14 (sentencia -> sentencia_incremento .)
    FOREACH         reduce using rule 14 (sentencia -> sentencia_incremento .)
    FUNCTION        reduce using rule 14 (sentencia -> sentencia_incremento .)
    RETURN          reduce using rule 14 (sentencia -> sentencia_incremento .)
    IDENTIFICADOR   reduce using rule 14 (sentencia -> sentencia_incremento .)
    ARRAY_PUSH      reduce using rule 14 (sentencia -> sentencia_incremento .)
    PUSH            reduce using rule 14 (sentencia -> sentencia_incremento .)
    ARRAY_POP       reduce using rule 14 (sentencia -> sentencia_incremento .)
    POP             reduce using rule 14 (sentencia -> sentencia_incremento .)
    PEEK            reduce using rule 14 (sentencia -> sentencia_incremento .)
    $end            reduce using rule 14 (sentencia -> sentencia_incremento .)
    LLAVE_DER       reduce using rule 14 (sentencia -> sentencia_incremento .)


state 15

    (15) sentencia -> sentencia_comentario .

    TAG_FIN         reduce using rule 15 (sentencia -> sentencia_comentario .)
    VARIABLE        reduce using rule 15 (sentencia -> sentencia_comentario .)
    DEFINE          reduce using rule 15 (sentencia -> sentencia_comentario .)
    ECHO            reduce using rule 15 (sentencia -> sentencia_comentario .)
    IF              reduce using rule 15 (sentencia -> sentencia_comentario .)
    FOREACH         reduce using rule 15 (sentencia -> sentencia_comentario .)
    FUNCTION        reduce using rule 15 (sentencia -> sentencia_comentario .)
    RETURN          reduce using rule 15 (sentencia -> sentencia_comentario .)
    IDENTIFICADOR   reduce using rule 15 (sentencia -> sentencia_comentario .)
    ARRAY_PUSH      reduce using rule 15 (sentencia -> sentencia_comentario .)
    PUSH            reduce using rule 15 (sentencia -> sentencia_comentario .)
    ARRAY_POP       reduce using rule 15 (sentencia -> sentencia_comentario .)
    POP             reduce using rule 15 (sentencia -> sentencia_comentario .)
    PEEK            reduce using rule 15 (sentencia -> sentencia_comentario .)
    $end            reduce using rule 15 (sentencia -> sentencia_comentario .)
    LLAVE_DER       reduce using rule 15 (sentencia -> sentencia_comentario .)


state 16

    (16) sentencia -> operacion_pila .

    TAG_FIN         reduce using rule 16 (sentencia -> operacion_pila .)
    VARIABLE        reduce using rule 16 (sentencia -> operacion_pila .)
    DEFINE          reduce using rule 16 (sentencia -> operacion_pila .)
    ECHO            reduce using rule 16 (sentencia -> operacion_pila .)
    IF              reduce using rule 16 (sentencia -> operacion_pila .)
    FOREACH         reduce using rule 16 (sentencia -> operacion_pila .)
    FUNCTION        reduce using rule 16 (sentencia -> operacion_pila .)
    RETURN          reduce using rule 16 (sentencia -> operacion_pila .)
    IDENTIFICADOR   reduce using rule 16 (sentencia -> operacion_pila .)
    ARRAY_PUSH      reduce using rule 16 (sentencia -> operacion_pila .)
    PUSH            reduce using rule 16 (sentencia -> operacion_pila .)
    ARRAY_POP       reduce using rule 16 (sentencia -> operacion_pila .)
    POP             reduce using rule 16 (sentencia -> operacion_pila .)
    PEEK            reduce using rule 16 (sentencia -> operacion_pila .)
    $end            reduce using rule 16 (sentencia -> operacion_pila .)
    LLAVE_DER       reduce using rule 16 (sentencia -> operacion_pila .)


state 17

    (17) asignacion -> VARIABLE . ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> VARIABLE . ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> VARIABLE . ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> VARIABLE . ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (21) asignacion_array -> VARIABLE . CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (53) sentencia_incremento -> VARIABLE . MAS MAS PUNTO_COMA
    (73) operacion_peek -> VARIABLE . CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

    ASIGNAR         shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36
    MAS             shift and go to state 37


state 18

    (60) sentencia_llamada_funcion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 38


state 19

    (70) operacion_pop -> ARRAY_POP . PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 39


state 20

    (68) operacion_push -> ARRAY_PUSH . PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 40


state 21

    (22) declaracion_define -> DEFINE . PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 41


state 22

    (23) sentencia_echo -> ECHO . expresion PUNTO_COMA
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 42

state 23

    (24) sentencia_if -> IF . PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> IF . PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 50


state 24

    (54) sentencia_foreach -> FOREACH . PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 51


state 25

    (55) sentencia_funcion -> FUNCTION . IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    IDENTIFICADOR   shift and go to state 52


state 26

    (59) sentencia_return -> RETURN . expresion PUNTO_COMA
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 53

state 27

    (65) operacion_pila -> operacion_push .

    TAG_FIN         reduce using rule 65 (operacion_pila -> operacion_push .)
    VARIABLE        reduce using rule 65 (operacion_pila -> operacion_push .)
    DEFINE          reduce using rule 65 (operacion_pila -> operacion_push .)
    ECHO            reduce using rule 65 (operacion_pila -> operacion_push .)
    IF              reduce using rule 65 (operacion_pila -> operacion_push .)
    FOREACH         reduce using rule 65 (operacion_pila -> operacion_push .)
    FUNCTION        reduce using rule 65 (operacion_pila -> operacion_push .)
    RETURN          reduce using rule 65 (operacion_pila -> operacion_push .)
    IDENTIFICADOR   reduce using rule 65 (operacion_pila -> operacion_push .)
    ARRAY_PUSH      reduce using rule 65 (operacion_pila -> operacion_push .)
    PUSH            reduce using rule 65 (operacion_pila -> operacion_push .)
    ARRAY_POP       reduce using rule 65 (operacion_pila -> operacion_push .)
    POP             reduce using rule 65 (operacion_pila -> operacion_push .)
    PEEK            reduce using rule 65 (operacion_pila -> operacion_push .)
    $end            reduce using rule 65 (operacion_pila -> operacion_push .)
    LLAVE_DER       reduce using rule 65 (operacion_pila -> operacion_push .)


state 28

    (66) operacion_pila -> operacion_pop .

    TAG_FIN         reduce using rule 66 (operacion_pila -> operacion_pop .)
    VARIABLE        reduce using rule 66 (operacion_pila -> operacion_pop .)
    DEFINE          reduce using rule 66 (operacion_pila -> operacion_pop .)
    ECHO            reduce using rule 66 (operacion_pila -> operacion_pop .)
    IF              reduce using rule 66 (operacion_pila -> operacion_pop .)
    FOREACH         reduce using rule 66 (operacion_pila -> operacion_pop .)
    FUNCTION        reduce using rule 66 (operacion_pila -> operacion_pop .)
    RETURN          reduce using rule 66 (operacion_pila -> operacion_pop .)
    IDENTIFICADOR   reduce using rule 66 (operacion_pila -> operacion_pop .)
    ARRAY_PUSH      reduce using rule 66 (operacion_pila -> operacion_pop .)
    PUSH            reduce using rule 66 (operacion_pila -> operacion_pop .)
    ARRAY_POP       reduce using rule 66 (operacion_pila -> operacion_pop .)
    POP             reduce using rule 66 (operacion_pila -> operacion_pop .)
    PEEK            reduce using rule 66 (operacion_pila -> operacion_pop .)
    $end            reduce using rule 66 (operacion_pila -> operacion_pop .)
    LLAVE_DER       reduce using rule 66 (operacion_pila -> operacion_pop .)


state 29

    (67) operacion_pila -> operacion_peek .

    TAG_FIN         reduce using rule 67 (operacion_pila -> operacion_peek .)
    VARIABLE        reduce using rule 67 (operacion_pila -> operacion_peek .)
    DEFINE          reduce using rule 67 (operacion_pila -> operacion_peek .)
    ECHO            reduce using rule 67 (operacion_pila -> operacion_peek .)
    IF              reduce using rule 67 (operacion_pila -> operacion_peek .)
    FOREACH         reduce using rule 67 (operacion_pila -> operacion_peek .)
    FUNCTION        reduce using rule 67 (operacion_pila -> operacion_peek .)
    RETURN          reduce using rule 67 (operacion_pila -> operacion_peek .)
    IDENTIFICADOR   reduce using rule 67 (operacion_pila -> operacion_peek .)
    ARRAY_PUSH      reduce using rule 67 (operacion_pila -> operacion_peek .)
    PUSH            reduce using rule 67 (operacion_pila -> operacion_peek .)
    ARRAY_POP       reduce using rule 67 (operacion_pila -> operacion_peek .)
    POP             reduce using rule 67 (operacion_pila -> operacion_peek .)
    PEEK            reduce using rule 67 (operacion_pila -> operacion_peek .)
    $end            reduce using rule 67 (operacion_pila -> operacion_peek .)
    LLAVE_DER       reduce using rule 67 (operacion_pila -> operacion_peek .)


state 30

    (69) operacion_push -> PUSH . PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 54


state 31

    (71) operacion_pop -> POP . PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 55


state 32

    (72) operacion_peek -> PEEK . PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 56


state 33

    (1) programa -> TAG_INICIO sentencias TAG_FIN .

    $end            reduce using rule 1 (programa -> TAG_INICIO sentencias TAG_FIN .)


state 34

    (4) sentencias -> sentencias sentencia .

    TAG_FIN         reduce using rule 4 (sentencias -> sentencias sentencia .)
    VARIABLE        reduce using rule 4 (sentencias -> sentencias sentencia .)
    DEFINE          reduce using rule 4 (sentencias -> sentencias sentencia .)
    ECHO            reduce using rule 4 (sentencias -> sentencias sentencia .)
    IF              reduce using rule 4 (sentencias -> sentencias sentencia .)
    FOREACH         reduce using rule 4 (sentencias -> sentencias sentencia .)
    FUNCTION        reduce using rule 4 (sentencias -> sentencias sentencia .)
    RETURN          reduce using rule 4 (sentencias -> sentencias sentencia .)
    IDENTIFICADOR   reduce using rule 4 (sentencias -> sentencias sentencia .)
    ARRAY_PUSH      reduce using rule 4 (sentencias -> sentencias sentencia .)
    PUSH            reduce using rule 4 (sentencias -> sentencias sentencia .)
    ARRAY_POP       reduce using rule 4 (sentencias -> sentencias sentencia .)
    POP             reduce using rule 4 (sentencias -> sentencias sentencia .)
    PEEK            reduce using rule 4 (sentencias -> sentencias sentencia .)
    $end            reduce using rule 4 (sentencias -> sentencias sentencia .)
    LLAVE_DER       reduce using rule 4 (sentencias -> sentencias sentencia .)


state 35

    (17) asignacion -> VARIABLE ASIGNAR . expresion PUNTO_COMA
    (18) asignacion -> VARIABLE ASIGNAR . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> VARIABLE ASIGNAR . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> VARIABLE ASIGNAR . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    IDENTIFICADOR   shift and go to state 58
    ARRAY_POP       shift and go to state 59
    ARRAY_PUSH      shift and go to state 60
    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 57

state 36

    (21) asignacion_array -> VARIABLE CORCHETE_IZQ . CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (73) operacion_peek -> VARIABLE CORCHETE_IZQ . COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

    CORCHETE_DER    shift and go to state 61
    COUNT           shift and go to state 62


state 37

    (53) sentencia_incremento -> VARIABLE MAS . MAS PUNTO_COMA

    MAS             shift and go to state 63


state 38

    (60) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER PUNTO_COMA
    (61) lista_argumentos -> . expresion
    (62) lista_argumentos -> . lista_argumentos COMA expresion
    (63) lista_argumentos -> .
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_DER       reduce using rule 63 (lista_argumentos -> .)
    COMA            reduce using rule 63 (lista_argumentos -> .)
    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    lista_argumentos               shift and go to state 64
    expresion                      shift and go to state 65

state 39

    (70) operacion_pop -> ARRAY_POP PAREN_IZQ . VARIABLE PAREN_DER PUNTO_COMA

    VARIABLE        shift and go to state 66


state 40

    (68) operacion_push -> ARRAY_PUSH PAREN_IZQ . VARIABLE COMA expresion PAREN_DER PUNTO_COMA

    VARIABLE        shift and go to state 67


state 41

    (22) declaracion_define -> DEFINE PAREN_IZQ . CADENA COMA expresion PAREN_DER PUNTO_COMA

    CADENA          shift and go to state 68


state 42

    (23) sentencia_echo -> ECHO expresion . PUNTO_COMA
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PUNTO_COMA      shift and go to state 69
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 43

    (37) expresion -> PAREN_IZQ . expresion PAREN_DER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 75

state 44

    (38) expresion -> NUMERO .

    PUNTO_COMA      reduce using rule 38 (expresion -> NUMERO .)
    MAS             reduce using rule 38 (expresion -> NUMERO .)
    MENOS           reduce using rule 38 (expresion -> NUMERO .)
    MULTIPLICAR     reduce using rule 38 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 38 (expresion -> NUMERO .)
    PUNTO           reduce using rule 38 (expresion -> NUMERO .)
    PAREN_DER       reduce using rule 38 (expresion -> NUMERO .)
    COMA            reduce using rule 38 (expresion -> NUMERO .)
    CORCHETE_DER    reduce using rule 38 (expresion -> NUMERO .)
    IGUAL           reduce using rule 38 (expresion -> NUMERO .)
    NO_IGUAL        reduce using rule 38 (expresion -> NUMERO .)
    MAYOR           reduce using rule 38 (expresion -> NUMERO .)
    MENOR           reduce using rule 38 (expresion -> NUMERO .)
    MAYOR_IGUAL     reduce using rule 38 (expresion -> NUMERO .)
    MENOR_IGUAL     reduce using rule 38 (expresion -> NUMERO .)


state 45

    (39) expresion -> CADENA .

    PUNTO_COMA      reduce using rule 39 (expresion -> CADENA .)
    MAS             reduce using rule 39 (expresion -> CADENA .)
    MENOS           reduce using rule 39 (expresion -> CADENA .)
    MULTIPLICAR     reduce using rule 39 (expresion -> CADENA .)
    DIVIDIR         reduce using rule 39 (expresion -> CADENA .)
    PUNTO           reduce using rule 39 (expresion -> CADENA .)
    PAREN_DER       reduce using rule 39 (expresion -> CADENA .)
    COMA            reduce using rule 39 (expresion -> CADENA .)
    IGUAL           reduce using rule 39 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 39 (expresion -> CADENA .)
    MAYOR           reduce using rule 39 (expresion -> CADENA .)
    MENOR           reduce using rule 39 (expresion -> CADENA .)
    MAYOR_IGUAL     reduce using rule 39 (expresion -> CADENA .)
    MENOR_IGUAL     reduce using rule 39 (expresion -> CADENA .)
    CORCHETE_DER    reduce using rule 39 (expresion -> CADENA .)


state 46

    (40) expresion -> VARIABLE .
    (51) expresion -> VARIABLE . CORCHETE_IZQ expresion CORCHETE_DER

    PUNTO_COMA      reduce using rule 40 (expresion -> VARIABLE .)
    MAS             reduce using rule 40 (expresion -> VARIABLE .)
    MENOS           reduce using rule 40 (expresion -> VARIABLE .)
    MULTIPLICAR     reduce using rule 40 (expresion -> VARIABLE .)
    DIVIDIR         reduce using rule 40 (expresion -> VARIABLE .)
    PUNTO           reduce using rule 40 (expresion -> VARIABLE .)
    PAREN_DER       reduce using rule 40 (expresion -> VARIABLE .)
    COMA            reduce using rule 40 (expresion -> VARIABLE .)
    CORCHETE_DER    reduce using rule 40 (expresion -> VARIABLE .)
    IGUAL           reduce using rule 40 (expresion -> VARIABLE .)
    NO_IGUAL        reduce using rule 40 (expresion -> VARIABLE .)
    MAYOR           reduce using rule 40 (expresion -> VARIABLE .)
    MENOR           reduce using rule 40 (expresion -> VARIABLE .)
    MAYOR_IGUAL     reduce using rule 40 (expresion -> VARIABLE .)
    MENOR_IGUAL     reduce using rule 40 (expresion -> VARIABLE .)
    CORCHETE_IZQ    shift and go to state 76


state 47

    (41) expresion -> IDENTIFICADOR .
    (42) expresion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER

    PUNTO_COMA      reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MAS             reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MULTIPLICAR     reduce using rule 41 (expresion -> IDENTIFICADOR .)
    DIVIDIR         reduce using rule 41 (expresion -> IDENTIFICADOR .)
    PUNTO           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    PAREN_DER       reduce using rule 41 (expresion -> IDENTIFICADOR .)
    COMA            reduce using rule 41 (expresion -> IDENTIFICADOR .)
    CORCHETE_DER    reduce using rule 41 (expresion -> IDENTIFICADOR .)
    IGUAL           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MAYOR           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MENOR           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 41 (expresion -> IDENTIFICADOR .)
    PAREN_IZQ       shift and go to state 77


state 48

    (43) expresion -> CORCHETE_IZQ . elementos_array_coma_opt CORCHETE_DER
    (44) elementos_array_coma_opt -> . elementos_array
    (45) elementos_array_coma_opt -> . elementos_array COMA
    (46) elementos_array_coma_opt -> .
    (47) elementos_array -> . elemento_array
    (48) elementos_array -> . elementos_array COMA elemento_array
    (49) elemento_array -> . expresion
    (50) elemento_array -> . CADENA ARRAY_ASOCIATIVO expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    CORCHETE_DER    reduce using rule 46 (elementos_array_coma_opt -> .)
    CADENA          shift and go to state 82
    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    elementos_array_coma_opt       shift and go to state 78
    elementos_array                shift and go to state 79
    elemento_array                 shift and go to state 80
    expresion                      shift and go to state 81

state 49

    (74) expresion -> COUNT . PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 83


state 50

    (24) sentencia_if -> IF PAREN_IZQ . condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> IF PAREN_IZQ . condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (26) condicion -> . expresion IGUAL expresion
    (27) condicion -> . expresion NO_IGUAL expresion
    (28) condicion -> . expresion MAYOR expresion
    (29) condicion -> . expresion MENOR expresion
    (30) condicion -> . expresion MAYOR_IGUAL expresion
    (31) condicion -> . expresion MENOR_IGUAL expresion
    (32) condicion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    IDENTIFICADOR   shift and go to state 86
    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    condicion                      shift and go to state 84
    expresion                      shift and go to state 85

state 51

    (54) sentencia_foreach -> FOREACH PAREN_IZQ . VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    VARIABLE        shift and go to state 87


state 52

    (55) sentencia_funcion -> FUNCTION IDENTIFICADOR . PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 88


state 53

    (59) sentencia_return -> RETURN expresion . PUNTO_COMA
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PUNTO_COMA      shift and go to state 89
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 54

    (69) operacion_push -> PUSH PAREN_IZQ . VARIABLE COMA expresion PAREN_DER PUNTO_COMA

    VARIABLE        shift and go to state 90


state 55

    (71) operacion_pop -> POP PAREN_IZQ . VARIABLE PAREN_DER PUNTO_COMA

    VARIABLE        shift and go to state 91


state 56

    (72) operacion_peek -> PEEK PAREN_IZQ . VARIABLE PAREN_DER

    VARIABLE        shift and go to state 92


state 57

    (17) asignacion -> VARIABLE ASIGNAR expresion . PUNTO_COMA
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PUNTO_COMA      shift and go to state 93
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 58

    (18) asignacion -> VARIABLE ASIGNAR IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (41) expresion -> IDENTIFICADOR .
    (42) expresion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER

    PAREN_IZQ       shift and go to state 94
    PUNTO_COMA      reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MAS             reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MULTIPLICAR     reduce using rule 41 (expresion -> IDENTIFICADOR .)
    DIVIDIR         reduce using rule 41 (expresion -> IDENTIFICADOR .)
    PUNTO           reduce using rule 41 (expresion -> IDENTIFICADOR .)


state 59

    (19) asignacion -> VARIABLE ASIGNAR ARRAY_POP . PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 95


state 60

    (20) asignacion -> VARIABLE ASIGNAR ARRAY_PUSH . PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 96


state 61

    (21) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER . ASIGNAR expresion PUNTO_COMA

    ASIGNAR         shift and go to state 97


state 62

    (73) operacion_peek -> VARIABLE CORCHETE_IZQ COUNT . PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

    PAREN_IZQ       shift and go to state 98


state 63

    (53) sentencia_incremento -> VARIABLE MAS MAS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 99


state 64

    (60) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER PUNTO_COMA
    (62) lista_argumentos -> lista_argumentos . COMA expresion

    PAREN_DER       shift and go to state 100
    COMA            shift and go to state 101


state 65

    (61) lista_argumentos -> expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 61 (lista_argumentos -> expresion .)
    COMA            reduce using rule 61 (lista_argumentos -> expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 66

    (70) operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE . PAREN_DER PUNTO_COMA

    PAREN_DER       shift and go to state 102


state 67

    (68) operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE . COMA expresion PAREN_DER PUNTO_COMA

    COMA            shift and go to state 103


state 68

    (22) declaracion_define -> DEFINE PAREN_IZQ CADENA . COMA expresion PAREN_DER PUNTO_COMA

    COMA            shift and go to state 104


state 69

    (23) sentencia_echo -> ECHO expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    DEFINE          reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    ECHO            reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    IF              reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    FOREACH         reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    RETURN          reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    PUSH            reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    ARRAY_POP       reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    POP             reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    PEEK            reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    $end            reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 23 (sentencia_echo -> ECHO expresion PUNTO_COMA .)


state 70

    (33) expresion -> expresion MAS . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 105

state 71

    (34) expresion -> expresion MENOS . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 106

state 72

    (35) expresion -> expresion MULTIPLICAR . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 107

state 73

    (36) expresion -> expresion DIVIDIR . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 108

state 74

    (52) expresion -> expresion PUNTO . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 109

state 75

    (37) expresion -> PAREN_IZQ expresion . PAREN_DER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       shift and go to state 110
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 76

    (51) expresion -> VARIABLE CORCHETE_IZQ . expresion CORCHETE_DER
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 111

state 77

    (42) expresion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER
    (61) lista_argumentos -> . expresion
    (62) lista_argumentos -> . lista_argumentos COMA expresion
    (63) lista_argumentos -> .
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_DER       reduce using rule 63 (lista_argumentos -> .)
    COMA            reduce using rule 63 (lista_argumentos -> .)
    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    lista_argumentos               shift and go to state 112
    expresion                      shift and go to state 65

state 78

    (43) expresion -> CORCHETE_IZQ elementos_array_coma_opt . CORCHETE_DER

    CORCHETE_DER    shift and go to state 113


state 79

    (44) elementos_array_coma_opt -> elementos_array .
    (45) elementos_array_coma_opt -> elementos_array . COMA
    (48) elementos_array -> elementos_array . COMA elemento_array

    CORCHETE_DER    reduce using rule 44 (elementos_array_coma_opt -> elementos_array .)
    COMA            shift and go to state 114


state 80

    (47) elementos_array -> elemento_array .

    COMA            reduce using rule 47 (elementos_array -> elemento_array .)
    CORCHETE_DER    reduce using rule 47 (elementos_array -> elemento_array .)


state 81

    (49) elemento_array -> expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    COMA            reduce using rule 49 (elemento_array -> expresion .)
    CORCHETE_DER    reduce using rule 49 (elemento_array -> expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 82

    (50) elemento_array -> CADENA . ARRAY_ASOCIATIVO expresion
    (39) expresion -> CADENA .

    ARRAY_ASOCIATIVO shift and go to state 115
    MAS             reduce using rule 39 (expresion -> CADENA .)
    MENOS           reduce using rule 39 (expresion -> CADENA .)
    MULTIPLICAR     reduce using rule 39 (expresion -> CADENA .)
    DIVIDIR         reduce using rule 39 (expresion -> CADENA .)
    PUNTO           reduce using rule 39 (expresion -> CADENA .)
    COMA            reduce using rule 39 (expresion -> CADENA .)
    CORCHETE_DER    reduce using rule 39 (expresion -> CADENA .)


state 83

    (74) expresion -> COUNT PAREN_IZQ . VARIABLE PAREN_DER

    VARIABLE        shift and go to state 116


state 84

    (24) sentencia_if -> IF PAREN_IZQ condicion . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> IF PAREN_IZQ condicion . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER

    PAREN_DER       shift and go to state 117


state 85

    (26) condicion -> expresion . IGUAL expresion
    (27) condicion -> expresion . NO_IGUAL expresion
    (28) condicion -> expresion . MAYOR expresion
    (29) condicion -> expresion . MENOR expresion
    (30) condicion -> expresion . MAYOR_IGUAL expresion
    (31) condicion -> expresion . MENOR_IGUAL expresion
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    IGUAL           shift and go to state 118
    NO_IGUAL        shift and go to state 119
    MAYOR           shift and go to state 120
    MENOR           shift and go to state 121
    MAYOR_IGUAL     shift and go to state 122
    MENOR_IGUAL     shift and go to state 123
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 86

    (32) condicion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER
    (41) expresion -> IDENTIFICADOR .
    (42) expresion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER

    PAREN_IZQ       shift and go to state 124
    IGUAL           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MAYOR           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MENOR           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MAS             reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 41 (expresion -> IDENTIFICADOR .)
    MULTIPLICAR     reduce using rule 41 (expresion -> IDENTIFICADOR .)
    DIVIDIR         reduce using rule 41 (expresion -> IDENTIFICADOR .)
    PUNTO           reduce using rule 41 (expresion -> IDENTIFICADOR .)


state 87

    (54) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE . AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    AS              shift and go to state 125


state 88

    (55) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ . parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (56) parametros_funcion -> . VARIABLE
    (57) parametros_funcion -> . parametros_funcion COMA VARIABLE
    (58) parametros_funcion -> .

    VARIABLE        shift and go to state 127
    PAREN_DER       reduce using rule 58 (parametros_funcion -> .)
    COMA            reduce using rule 58 (parametros_funcion -> .)

    parametros_funcion             shift and go to state 126

state 89

    (59) sentencia_return -> RETURN expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    DEFINE          reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    ECHO            reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    IF              reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    FOREACH         reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    RETURN          reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    PUSH            reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    ARRAY_POP       reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    POP             reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    PEEK            reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    $end            reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 59 (sentencia_return -> RETURN expresion PUNTO_COMA .)


state 90

    (69) operacion_push -> PUSH PAREN_IZQ VARIABLE . COMA expresion PAREN_DER PUNTO_COMA

    COMA            shift and go to state 128


state 91

    (71) operacion_pop -> POP PAREN_IZQ VARIABLE . PAREN_DER PUNTO_COMA

    PAREN_DER       shift and go to state 129


state 92

    (72) operacion_peek -> PEEK PAREN_IZQ VARIABLE . PAREN_DER

    PAREN_DER       shift and go to state 130


state 93

    (17) asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    DEFINE          reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    ECHO            reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    IF              reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    FOREACH         reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    RETURN          reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    PUSH            reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    ARRAY_POP       reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    POP             reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    PEEK            reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    $end            reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 17 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)


state 94

    (18) asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER PUNTO_COMA
    (42) expresion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER
    (61) lista_argumentos -> . expresion
    (62) lista_argumentos -> . lista_argumentos COMA expresion
    (63) lista_argumentos -> .
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_DER       reduce using rule 63 (lista_argumentos -> .)
    COMA            reduce using rule 63 (lista_argumentos -> .)
    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    lista_argumentos               shift and go to state 131
    expresion                      shift and go to state 65

state 95

    (19) asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ . VARIABLE PAREN_DER PUNTO_COMA

    VARIABLE        shift and go to state 132


state 96

    (20) asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ . VARIABLE COMA expresion PAREN_DER PUNTO_COMA

    VARIABLE        shift and go to state 133


state 97

    (21) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR . expresion PUNTO_COMA
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 134

state 98

    (73) operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ . VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

    VARIABLE        shift and go to state 135


state 99

    (53) sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .

    TAG_FIN         reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    VARIABLE        reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    DEFINE          reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    ECHO            reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    IF              reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    FOREACH         reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    FUNCTION        reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    RETURN          reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    PUSH            reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    ARRAY_POP       reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    POP             reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    PEEK            reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    $end            reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    LLAVE_DER       reduce using rule 53 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)


state 100

    (60) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 136


state 101

    (62) lista_argumentos -> lista_argumentos COMA . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 137

state 102

    (70) operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 138


state 103

    (68) operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA . expresion PAREN_DER PUNTO_COMA
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 139

state 104

    (22) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA . expresion PAREN_DER PUNTO_COMA
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 140

state 105

    (33) expresion -> expresion MAS expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 33 (expresion -> expresion MAS expresion .)
    PAREN_DER       reduce using rule 33 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 33 (expresion -> expresion MAS expresion .)
    CORCHETE_DER    reduce using rule 33 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 33 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 33 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 33 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 33 (expresion -> expresion MAS expresion .)
    MAYOR_IGUAL     reduce using rule 33 (expresion -> expresion MAS expresion .)
    MENOR_IGUAL     reduce using rule 33 (expresion -> expresion MAS expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74

  ! MAS             [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]
  ! MENOS           [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIR         [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]
  ! PUNTO           [ reduce using rule 33 (expresion -> expresion MAS expresion .) ]


state 106

    (34) expresion -> expresion MENOS expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 34 (expresion -> expresion MENOS expresion .)
    PAREN_DER       reduce using rule 34 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 34 (expresion -> expresion MENOS expresion .)
    CORCHETE_DER    reduce using rule 34 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MENOR_IGUAL     reduce using rule 34 (expresion -> expresion MENOS expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74

  ! MAS             [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]
  ! MENOS           [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIR         [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]
  ! PUNTO           [ reduce using rule 34 (expresion -> expresion MENOS expresion .) ]


state 107

    (35) expresion -> expresion MULTIPLICAR expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    PAREN_DER       reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    COMA            reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    CORCHETE_DER    reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    IGUAL           reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    NO_IGUAL        reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    MAYOR           reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    MENOR           reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    MAYOR_IGUAL     reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    MENOR_IGUAL     reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74

  ! MAS             [ reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! MENOS           [ reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! DIVIDIR         [ reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! PUNTO           [ reduce using rule 35 (expresion -> expresion MULTIPLICAR expresion .) ]


state 108

    (36) expresion -> expresion DIVIDIR expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    PAREN_DER       reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    COMA            reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    CORCHETE_DER    reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    IGUAL           reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    NO_IGUAL        reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    MAYOR           reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    MENOR           reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    MAYOR_IGUAL     reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    MENOR_IGUAL     reduce using rule 36 (expresion -> expresion DIVIDIR expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74

  ! MAS             [ reduce using rule 36 (expresion -> expresion DIVIDIR expresion .) ]
  ! MENOS           [ reduce using rule 36 (expresion -> expresion DIVIDIR expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 36 (expresion -> expresion DIVIDIR expresion .) ]
  ! DIVIDIR         [ reduce using rule 36 (expresion -> expresion DIVIDIR expresion .) ]
  ! PUNTO           [ reduce using rule 36 (expresion -> expresion DIVIDIR expresion .) ]


state 109

    (52) expresion -> expresion PUNTO expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    PAREN_DER       reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    COMA            reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    CORCHETE_DER    reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    IGUAL           reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    NO_IGUAL        reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    MAYOR           reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    MENOR           reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    MAYOR_IGUAL     reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    MENOR_IGUAL     reduce using rule 52 (expresion -> expresion PUNTO expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74

  ! MAS             [ reduce using rule 52 (expresion -> expresion PUNTO expresion .) ]
  ! MENOS           [ reduce using rule 52 (expresion -> expresion PUNTO expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 52 (expresion -> expresion PUNTO expresion .) ]
  ! DIVIDIR         [ reduce using rule 52 (expresion -> expresion PUNTO expresion .) ]
  ! PUNTO           [ reduce using rule 52 (expresion -> expresion PUNTO expresion .) ]


state 110

    (37) expresion -> PAREN_IZQ expresion PAREN_DER .

    PUNTO_COMA      reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAS             reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOS           reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MULTIPLICAR     reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    DIVIDIR         reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    PUNTO           reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    PAREN_DER       reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    COMA            reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    CORCHETE_DER    reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    IGUAL           reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    NO_IGUAL        reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAYOR           reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOR           reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAYOR_IGUAL     reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOR_IGUAL     reduce using rule 37 (expresion -> PAREN_IZQ expresion PAREN_DER .)


state 111

    (51) expresion -> VARIABLE CORCHETE_IZQ expresion . CORCHETE_DER
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    CORCHETE_DER    shift and go to state 141
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 112

    (42) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER
    (62) lista_argumentos -> lista_argumentos . COMA expresion

    PAREN_DER       shift and go to state 142
    COMA            shift and go to state 101


state 113

    (43) expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .

    PUNTO_COMA      reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MAS             reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MENOS           reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MULTIPLICAR     reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    DIVIDIR         reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    PUNTO           reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    PAREN_DER       reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    COMA            reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    IGUAL           reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    NO_IGUAL        reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MAYOR           reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MENOR           reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MAYOR_IGUAL     reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MENOR_IGUAL     reduce using rule 43 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)


state 114

    (45) elementos_array_coma_opt -> elementos_array COMA .
    (48) elementos_array -> elementos_array COMA . elemento_array
    (49) elemento_array -> . expresion
    (50) elemento_array -> . CADENA ARRAY_ASOCIATIVO expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    CORCHETE_DER    reduce using rule 45 (elementos_array_coma_opt -> elementos_array COMA .)
    CADENA          shift and go to state 82
    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    elemento_array                 shift and go to state 143
    expresion                      shift and go to state 81

state 115

    (50) elemento_array -> CADENA ARRAY_ASOCIATIVO . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 144

state 116

    (74) expresion -> COUNT PAREN_IZQ VARIABLE . PAREN_DER

    PAREN_DER       shift and go to state 145


state 117

    (24) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 146


state 118

    (26) condicion -> expresion IGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 147

state 119

    (27) condicion -> expresion NO_IGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 148

state 120

    (28) condicion -> expresion MAYOR . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 149

state 121

    (29) condicion -> expresion MENOR . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 150

state 122

    (30) condicion -> expresion MAYOR_IGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 151

state 123

    (31) condicion -> expresion MENOR_IGUAL . expresion
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 152

state 124

    (32) condicion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER
    (42) expresion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER
    (61) lista_argumentos -> . expresion
    (62) lista_argumentos -> . lista_argumentos COMA expresion
    (63) lista_argumentos -> .
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_DER       reduce using rule 63 (lista_argumentos -> .)
    COMA            reduce using rule 63 (lista_argumentos -> .)
    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    lista_argumentos               shift and go to state 153
    expresion                      shift and go to state 65

state 125

    (54) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS . VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    VARIABLE        shift and go to state 154


state 126

    (55) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (57) parametros_funcion -> parametros_funcion . COMA VARIABLE

    PAREN_DER       shift and go to state 155
    COMA            shift and go to state 156


state 127

    (56) parametros_funcion -> VARIABLE .

    PAREN_DER       reduce using rule 56 (parametros_funcion -> VARIABLE .)
    COMA            reduce using rule 56 (parametros_funcion -> VARIABLE .)


state 128

    (69) operacion_push -> PUSH PAREN_IZQ VARIABLE COMA . expresion PAREN_DER PUNTO_COMA
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 157

state 129

    (71) operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 158


state 130

    (72) operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .

    TAG_FIN         reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    VARIABLE        reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    DEFINE          reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    ECHO            reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    IF              reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    FOREACH         reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    FUNCTION        reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    RETURN          reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    IDENTIFICADOR   reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    ARRAY_PUSH      reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    PUSH            reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    ARRAY_POP       reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    POP             reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    PEEK            reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    $end            reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)
    LLAVE_DER       reduce using rule 72 (operacion_peek -> PEEK PAREN_IZQ VARIABLE PAREN_DER .)


state 131

    (18) asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER PUNTO_COMA
    (42) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER
    (62) lista_argumentos -> lista_argumentos . COMA expresion

    PAREN_DER       shift and go to state 159
    COMA            shift and go to state 101


state 132

    (19) asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE . PAREN_DER PUNTO_COMA

    PAREN_DER       shift and go to state 160


state 133

    (20) asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE . COMA expresion PAREN_DER PUNTO_COMA

    COMA            shift and go to state 161


state 134

    (21) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion . PUNTO_COMA
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PUNTO_COMA      shift and go to state 162
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 135

    (73) operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE . PAREN_DER MENOS NUMERO CORCHETE_DER

    PAREN_DER       shift and go to state 163


state 136

    (60) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 60 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)


state 137

    (62) lista_argumentos -> lista_argumentos COMA expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 62 (lista_argumentos -> lista_argumentos COMA expresion .)
    COMA            reduce using rule 62 (lista_argumentos -> lista_argumentos COMA expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 138

    (70) operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 70 (operacion_pop -> ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)


state 139

    (68) operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion . PAREN_DER PUNTO_COMA
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       shift and go to state 164
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 140

    (22) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion . PAREN_DER PUNTO_COMA
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       shift and go to state 165
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 141

    (51) expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .

    PUNTO_COMA      reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAS             reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOS           reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MULTIPLICAR     reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    DIVIDIR         reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    PUNTO           reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    PAREN_DER       reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    COMA            reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    IGUAL           reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    NO_IGUAL        reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAYOR           reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOR           reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAYOR_IGUAL     reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOR_IGUAL     reduce using rule 51 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)


state 142

    (42) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .

    PUNTO_COMA      reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAS             reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOS           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MULTIPLICAR     reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    DIVIDIR         reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    PUNTO           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    PAREN_DER       reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    COMA            reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    CORCHETE_DER    reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    IGUAL           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    NO_IGUAL        reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAYOR           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOR           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAYOR_IGUAL     reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOR_IGUAL     reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)


state 143

    (48) elementos_array -> elementos_array COMA elemento_array .

    COMA            reduce using rule 48 (elementos_array -> elementos_array COMA elemento_array .)
    CORCHETE_DER    reduce using rule 48 (elementos_array -> elementos_array COMA elemento_array .)


state 144

    (50) elemento_array -> CADENA ARRAY_ASOCIATIVO expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    COMA            reduce using rule 50 (elemento_array -> CADENA ARRAY_ASOCIATIVO expresion .)
    CORCHETE_DER    reduce using rule 50 (elemento_array -> CADENA ARRAY_ASOCIATIVO expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 145

    (74) expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .

    PUNTO_COMA      reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    MAS             reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    MENOS           reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    MULTIPLICAR     reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    DIVIDIR         reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    PUNTO           reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    PAREN_DER       reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    COMA            reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    CORCHETE_DER    reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    IGUAL           reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    NO_IGUAL        reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    MAYOR           reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    MENOR           reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    MAYOR_IGUAL     reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)
    MENOR_IGUAL     reduce using rule 74 (expresion -> COUNT PAREN_IZQ VARIABLE PAREN_DER .)


state 146

    (24) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (25) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    LLAVE_DER       reduce using rule 64 (sentencia_comentario -> .)
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 166
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 147

    (26) condicion -> expresion IGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 26 (condicion -> expresion IGUAL expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 148

    (27) condicion -> expresion NO_IGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 27 (condicion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 149

    (28) condicion -> expresion MAYOR expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 28 (condicion -> expresion MAYOR expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 150

    (29) condicion -> expresion MENOR expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 29 (condicion -> expresion MENOR expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 151

    (30) condicion -> expresion MAYOR_IGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 30 (condicion -> expresion MAYOR_IGUAL expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 152

    (31) condicion -> expresion MENOR_IGUAL expresion .
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 31 (condicion -> expresion MENOR_IGUAL expresion .)
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 153

    (32) condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER
    (42) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER
    (62) lista_argumentos -> lista_argumentos . COMA expresion

    PAREN_DER       shift and go to state 167
    COMA            shift and go to state 101


state 154

    (54) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_DER       shift and go to state 168


state 155

    (55) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 169


state 156

    (57) parametros_funcion -> parametros_funcion COMA . VARIABLE

    VARIABLE        shift and go to state 170


state 157

    (69) operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion . PAREN_DER PUNTO_COMA
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       shift and go to state 171
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 158

    (71) operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 71 (operacion_pop -> POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)


state 159

    (18) asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER . PUNTO_COMA
    (42) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .

  ! shift/reduce conflict for PUNTO_COMA resolved as shift
    PUNTO_COMA      shift and go to state 172
    MAS             reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOS           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MULTIPLICAR     reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    DIVIDIR         reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    PUNTO           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)

  ! PUNTO_COMA      [ reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .) ]


state 160

    (19) asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 173


state 161

    (20) asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA . expresion PAREN_DER PUNTO_COMA
    (33) expresion -> . expresion MAS expresion
    (34) expresion -> . expresion MENOS expresion
    (35) expresion -> . expresion MULTIPLICAR expresion
    (36) expresion -> . expresion DIVIDIR expresion
    (37) expresion -> . PAREN_IZQ expresion PAREN_DER
    (38) expresion -> . NUMERO
    (39) expresion -> . CADENA
    (40) expresion -> . VARIABLE
    (41) expresion -> . IDENTIFICADOR
    (42) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (43) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (51) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (52) expresion -> . expresion PUNTO expresion
    (74) expresion -> . COUNT PAREN_IZQ VARIABLE PAREN_DER

    PAREN_IZQ       shift and go to state 43
    NUMERO          shift and go to state 44
    CADENA          shift and go to state 45
    VARIABLE        shift and go to state 46
    IDENTIFICADOR   shift and go to state 47
    CORCHETE_IZQ    shift and go to state 48
    COUNT           shift and go to state 49

    expresion                      shift and go to state 174

state 162

    (21) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    DEFINE          reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    ECHO            reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    IF              reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    FOREACH         reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    RETURN          reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    PUSH            reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    ARRAY_POP       reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    POP             reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    PEEK            reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    $end            reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 21 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)


state 163

    (73) operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER . MENOS NUMERO CORCHETE_DER

    MENOS           shift and go to state 175


state 164

    (68) operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 176


state 165

    (22) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 177


state 166

    (24) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (25) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    LLAVE_DER       shift and go to state 178
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! LLAVE_DER       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 34
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 167

    (32) condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .
    (42) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .

    PAREN_DER       reduce using rule 32 (condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    IGUAL           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    NO_IGUAL        reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAYOR           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOR           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAYOR_IGUAL     reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOR_IGUAL     reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAS             reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOS           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MULTIPLICAR     reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    DIVIDIR         reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    PUNTO           reduce using rule 42 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)


state 168

    (54) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 179


state 169

    (55) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    LLAVE_DER       reduce using rule 64 (sentencia_comentario -> .)
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 180
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 170

    (57) parametros_funcion -> parametros_funcion COMA VARIABLE .

    PAREN_DER       reduce using rule 57 (parametros_funcion -> parametros_funcion COMA VARIABLE .)
    COMA            reduce using rule 57 (parametros_funcion -> parametros_funcion COMA VARIABLE .)


state 171

    (69) operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 181


state 172

    (18) asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 18 (asignacion -> VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)


state 173

    (19) asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 19 (asignacion -> VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA .)


state 174

    (20) asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion . PAREN_DER PUNTO_COMA
    (33) expresion -> expresion . MAS expresion
    (34) expresion -> expresion . MENOS expresion
    (35) expresion -> expresion . MULTIPLICAR expresion
    (36) expresion -> expresion . DIVIDIR expresion
    (52) expresion -> expresion . PUNTO expresion

    PAREN_DER       shift and go to state 182
    MAS             shift and go to state 70
    MENOS           shift and go to state 71
    MULTIPLICAR     shift and go to state 72
    DIVIDIR         shift and go to state 73
    PUNTO           shift and go to state 74


state 175

    (73) operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS . NUMERO CORCHETE_DER

    NUMERO          shift and go to state 183


state 176

    (68) operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 68 (operacion_push -> ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)


state 177

    (22) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 22 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)


state 178

    (24) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .
    (25) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER . ELSE LLAVE_IZQ sentencias LLAVE_DER

    TAG_FIN         reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ARRAY_PUSH      reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    PUSH            reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ARRAY_POP       reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    POP             reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    PEEK            reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 24 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ELSE            shift and go to state 184


state 179

    (54) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    LLAVE_DER       reduce using rule 64 (sentencia_comentario -> .)
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 185
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 180

    (55) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    LLAVE_DER       shift and go to state 186
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! LLAVE_DER       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 34
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 181

    (69) operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 69 (operacion_push -> PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)


state 182

    (20) asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 187


state 183

    (73) operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO . CORCHETE_DER

    CORCHETE_DER    shift and go to state 188


state 184

    (25) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 189


state 185

    (54) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    LLAVE_DER       shift and go to state 190
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! LLAVE_DER       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 34
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 186

    (55) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ARRAY_PUSH      reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    PUSH            reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ARRAY_POP       reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    POP             reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    PEEK            reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 55 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)


state 187

    (20) asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ARRAY_PUSH      reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    PUSH            reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    ARRAY_POP       reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    POP             reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    PEEK            reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 20 (asignacion -> VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA .)


state 188

    (73) operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .

    TAG_FIN         reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    VARIABLE        reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    DEFINE          reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    ECHO            reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    IF              reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    FOREACH         reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    FUNCTION        reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    RETURN          reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    IDENTIFICADOR   reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    ARRAY_PUSH      reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    PUSH            reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    ARRAY_POP       reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    POP             reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    PEEK            reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    $end            reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)
    LLAVE_DER       reduce using rule 73 (operacion_peek -> VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER .)


state 189

    (25) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    LLAVE_DER       reduce using rule 64 (sentencia_comentario -> .)
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 191
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 190

    (54) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ARRAY_PUSH      reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    PUSH            reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ARRAY_POP       reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    POP             reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    PEEK            reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 54 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)


state 191

    (25) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) sentencia -> . operacion_pila
    (17) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) asignacion -> . VARIABLE ASIGNAR IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (19) asignacion -> . VARIABLE ASIGNAR ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (20) asignacion -> . VARIABLE ASIGNAR ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (22) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (23) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (21) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (24) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (25) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (54) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (59) sentencia_return -> . RETURN expresion PUNTO_COMA
    (60) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (53) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (64) sentencia_comentario -> .
    (65) operacion_pila -> . operacion_push
    (66) operacion_pila -> . operacion_pop
    (67) operacion_pila -> . operacion_peek
    (68) operacion_push -> . ARRAY_PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (69) operacion_push -> . PUSH PAREN_IZQ VARIABLE COMA expresion PAREN_DER PUNTO_COMA
    (70) operacion_pop -> . ARRAY_POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (71) operacion_pop -> . POP PAREN_IZQ VARIABLE PAREN_DER PUNTO_COMA
    (72) operacion_peek -> . PEEK PAREN_IZQ VARIABLE PAREN_DER
    (73) operacion_peek -> . VARIABLE CORCHETE_IZQ COUNT PAREN_IZQ VARIABLE PAREN_DER MENOS NUMERO CORCHETE_DER

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for ARRAY_PUSH resolved as shift
  ! shift/reduce conflict for PUSH resolved as shift
  ! shift/reduce conflict for ARRAY_POP resolved as shift
  ! shift/reduce conflict for POP resolved as shift
  ! shift/reduce conflict for PEEK resolved as shift
    LLAVE_DER       shift and go to state 192
    VARIABLE        shift and go to state 17
    DEFINE          shift and go to state 21
    ECHO            shift and go to state 22
    IF              shift and go to state 23
    FOREACH         shift and go to state 24
    FUNCTION        shift and go to state 25
    RETURN          shift and go to state 26
    IDENTIFICADOR   shift and go to state 18
    ARRAY_PUSH      shift and go to state 20
    PUSH            shift and go to state 30
    ARRAY_POP       shift and go to state 19
    POP             shift and go to state 31
    PEEK            shift and go to state 32

  ! LLAVE_DER       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_PUSH      [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PUSH            [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! ARRAY_POP       [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! POP             [ reduce using rule 64 (sentencia_comentario -> .) ]
  ! PEEK            [ reduce using rule 64 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 34
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15
    operacion_pila                 shift and go to state 16
    operacion_push                 shift and go to state 27
    operacion_pop                  shift and go to state 28
    operacion_peek                 shift and go to state 29

state 192

    (25) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    ARRAY_PUSH      reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    PUSH            reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    ARRAY_POP       reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    POP             reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    PEEK            reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 25 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 2 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 2 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 2 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 2 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 2 resolved as shift
WARNING: shift/reduce conflict for POP in state 2 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 2 resolved as shift
WARNING: shift/reduce conflict for TAG_FIN in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 3 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 3 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 3 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 3 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 3 resolved as shift
WARNING: shift/reduce conflict for POP in state 3 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 3 resolved as shift
WARNING: shift/reduce conflict for MAS in state 105 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 105 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 105 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 105 resolved as shift
WARNING: shift/reduce conflict for MAS in state 106 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 106 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 106 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 106 resolved as shift
WARNING: shift/reduce conflict for MAS in state 107 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 107 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 107 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 107 resolved as shift
WARNING: shift/reduce conflict for MAS in state 108 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 108 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 108 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 108 resolved as shift
WARNING: shift/reduce conflict for MAS in state 109 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 109 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 109 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 109 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 146 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 146 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 146 resolved as shift
WARNING: shift/reduce conflict for IF in state 146 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 146 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 146 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 146 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 146 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 146 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 146 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 146 resolved as shift
WARNING: shift/reduce conflict for POP in state 146 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 146 resolved as shift
WARNING: shift/reduce conflict for PUNTO_COMA in state 159 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 166 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 166 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 166 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 166 resolved as shift
WARNING: shift/reduce conflict for IF in state 166 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 166 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 166 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 166 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 166 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 166 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 166 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 166 resolved as shift
WARNING: shift/reduce conflict for POP in state 166 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 166 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 169 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 169 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 169 resolved as shift
WARNING: shift/reduce conflict for IF in state 169 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 169 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 169 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 169 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 169 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 169 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 169 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 169 resolved as shift
WARNING: shift/reduce conflict for POP in state 169 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 169 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 179 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 179 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 179 resolved as shift
WARNING: shift/reduce conflict for IF in state 179 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 179 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 179 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 179 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 179 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 179 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 179 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 179 resolved as shift
WARNING: shift/reduce conflict for POP in state 179 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 179 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 180 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 180 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 180 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 180 resolved as shift
WARNING: shift/reduce conflict for IF in state 180 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 180 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 180 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 180 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 180 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 180 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 180 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 180 resolved as shift
WARNING: shift/reduce conflict for POP in state 180 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 180 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 185 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 185 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 185 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 185 resolved as shift
WARNING: shift/reduce conflict for IF in state 185 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 185 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 185 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 185 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 185 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 185 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 185 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 185 resolved as shift
WARNING: shift/reduce conflict for POP in state 185 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 185 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 189 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 189 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 189 resolved as shift
WARNING: shift/reduce conflict for IF in state 189 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 189 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 189 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 189 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 189 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 189 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 189 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 189 resolved as shift
WARNING: shift/reduce conflict for POP in state 189 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 189 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 191 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 191 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 191 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 191 resolved as shift
WARNING: shift/reduce conflict for IF in state 191 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 191 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 191 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 191 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 191 resolved as shift
WARNING: shift/reduce conflict for ARRAY_PUSH in state 191 resolved as shift
WARNING: shift/reduce conflict for PUSH in state 191 resolved as shift
WARNING: shift/reduce conflict for ARRAY_POP in state 191 resolved as shift
WARNING: shift/reduce conflict for POP in state 191 resolved as shift
WARNING: shift/reduce conflict for PEEK in state 191 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> TAG_INICIO sentencias)
WARNING: rejected rule (sentencia_comentario -> <empty>) in state 3
