Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASS
    DOBLE_DOS_PUNTOS
    ELSEIF
    FLECHA
    FOR
    NEW
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    READLINE
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> TAG_INICIO sentencias TAG_FIN
Rule 2     programa -> TAG_INICIO sentencias
Rule 3     sentencias -> sentencia
Rule 4     sentencias -> sentencias sentencia
Rule 5     sentencia -> asignacion
Rule 6     sentencia -> declaracion_define
Rule 7     sentencia -> sentencia_echo
Rule 8     sentencia -> asignacion_array
Rule 9     sentencia -> sentencia_if
Rule 10    sentencia -> sentencia_foreach
Rule 11    sentencia -> sentencia_funcion
Rule 12    sentencia -> sentencia_return
Rule 13    sentencia -> sentencia_llamada_funcion
Rule 14    sentencia -> sentencia_incremento
Rule 15    sentencia -> sentencia_comentario
Rule 16    asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA
Rule 17    asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
Rule 18    declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
Rule 19    sentencia_echo -> ECHO expresion PUNTO_COMA
Rule 20    sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 21    sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
Rule 22    condicion -> expresion IGUAL expresion
Rule 23    condicion -> expresion NO_IGUAL expresion
Rule 24    condicion -> expresion MAYOR expresion
Rule 25    condicion -> expresion MENOR expresion
Rule 26    condicion -> expresion MAYOR_IGUAL expresion
Rule 27    condicion -> expresion MENOR_IGUAL expresion
Rule 28    condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
Rule 29    expresion -> expresion MAS expresion
Rule 30    expresion -> expresion MENOS expresion
Rule 31    expresion -> expresion MULTIPLICAR expresion
Rule 32    expresion -> expresion DIVIDIR expresion
Rule 33    expresion -> PAREN_IZQ expresion PAREN_DER
Rule 34    expresion -> NUMERO
Rule 35    expresion -> CADENA
Rule 36    expresion -> VARIABLE
Rule 37    expresion -> IDENTIFICADOR
Rule 38    expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
Rule 39    expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
Rule 40    elementos_array_coma_opt -> elementos_array
Rule 41    elementos_array_coma_opt -> elementos_array COMA
Rule 42    elementos_array_coma_opt -> <empty>
Rule 43    elementos_array -> elemento_array
Rule 44    elementos_array -> elementos_array COMA elemento_array
Rule 45    elemento_array -> expresion
Rule 46    elemento_array -> CADENA ARRAY_ASOCIATIVO expresion
Rule 47    expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
Rule 48    expresion -> expresion PUNTO expresion
Rule 49    sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA
Rule 50    sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 51    sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
Rule 52    parametros_funcion -> VARIABLE
Rule 53    parametros_funcion -> parametros_funcion COMA VARIABLE
Rule 54    parametros_funcion -> <empty>
Rule 55    sentencia_return -> RETURN expresion PUNTO_COMA
Rule 56    sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
Rule 57    lista_argumentos -> expresion
Rule 58    lista_argumentos -> lista_argumentos COMA expresion
Rule 59    lista_argumentos -> <empty>
Rule 60    sentencia_comentario -> <empty>

Terminals, with rules where they appear

ARRAY_ASOCIATIVO     : 46
AS                   : 50
ASIGNAR              : 16 17
CADENA               : 18 35 46
CLASS                : 
COMA                 : 18 41 44 53 58
CORCHETE_DER         : 17 39 47
CORCHETE_IZQ         : 17 39 47
DEFINE               : 18
DIVIDIR              : 32
DOBLE_DOS_PUNTOS     : 
ECHO                 : 19
ELSE                 : 21
ELSEIF               : 
FLECHA               : 
FOR                  : 
FOREACH              : 50
FUNCTION             : 51
IDENTIFICADOR        : 28 37 38 51 56
IF                   : 20 21
IGUAL                : 22
LLAVE_DER            : 20 21 21 50 51
LLAVE_IZQ            : 20 21 21 50 51
MAS                  : 29 49 49
MAYOR                : 24
MAYOR_IGUAL          : 26
MENOR                : 25
MENOR_IGUAL          : 27
MENOS                : 30
MULTIPLICAR          : 31
NEW                  : 
NO_IGUAL             : 23
NUMERO               : 34
PAREN_DER            : 18 20 21 28 33 38 50 51 56
PAREN_IZQ            : 18 20 21 28 33 38 50 51 56
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 48
PUNTO_COMA           : 16 17 18 19 49 55 56
READLINE             : 
RETURN               : 55
TAG_FIN              : 1
TAG_INICIO           : 1 2
VARIABLE             : 16 17 36 47 49 50 50 52 53
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 5
asignacion_array     : 8
condicion            : 20 21
declaracion_define   : 6
elemento_array       : 43 44
elementos_array      : 40 41 44
elementos_array_coma_opt : 39
expresion            : 16 17 18 19 22 22 23 23 24 24 25 25 26 26 27 27 29 29 30 30 31 31 32 32 33 45 46 47 48 48 55 57 58
lista_argumentos     : 28 38 56 58
parametros_funcion   : 51 53
programa             : 0
sentencia            : 3 4
sentencia_comentario : 15
sentencia_echo       : 7
sentencia_foreach    : 10
sentencia_funcion    : 11
sentencia_if         : 9
sentencia_incremento : 14
sentencia_llamada_funcion : 13
sentencia_return     : 12
sentencias           : 1 2 4 20 21 21 50 51

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . TAG_INICIO sentencias TAG_FIN
    (2) programa -> . TAG_INICIO sentencias

    TAG_INICIO      shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> TAG_INICIO . sentencias TAG_FIN
    (2) programa -> TAG_INICIO . sentencias
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    TAG_FIN         reduce using rule 60 (sentencia_comentario -> .)
    $end            reduce using rule 60 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 3

    (1) programa -> TAG_INICIO sentencias . TAG_FIN
    (2) programa -> TAG_INICIO sentencias .
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for TAG_FIN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> TAG_INICIO sentencias .)
    TAG_FIN         shift and go to state 24
    $end            reduce using rule 2 (programa -> TAG_INICIO sentencias .)
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! TAG_FIN         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! $end            [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 4

    (3) sentencias -> sentencia .

    TAG_FIN         reduce using rule 3 (sentencias -> sentencia .)
    VARIABLE        reduce using rule 3 (sentencias -> sentencia .)
    DEFINE          reduce using rule 3 (sentencias -> sentencia .)
    ECHO            reduce using rule 3 (sentencias -> sentencia .)
    IF              reduce using rule 3 (sentencias -> sentencia .)
    FOREACH         reduce using rule 3 (sentencias -> sentencia .)
    FUNCTION        reduce using rule 3 (sentencias -> sentencia .)
    RETURN          reduce using rule 3 (sentencias -> sentencia .)
    IDENTIFICADOR   reduce using rule 3 (sentencias -> sentencia .)
    $end            reduce using rule 3 (sentencias -> sentencia .)
    LLAVE_DER       reduce using rule 3 (sentencias -> sentencia .)


state 5

    (5) sentencia -> asignacion .

    TAG_FIN         reduce using rule 5 (sentencia -> asignacion .)
    VARIABLE        reduce using rule 5 (sentencia -> asignacion .)
    DEFINE          reduce using rule 5 (sentencia -> asignacion .)
    ECHO            reduce using rule 5 (sentencia -> asignacion .)
    IF              reduce using rule 5 (sentencia -> asignacion .)
    FOREACH         reduce using rule 5 (sentencia -> asignacion .)
    FUNCTION        reduce using rule 5 (sentencia -> asignacion .)
    RETURN          reduce using rule 5 (sentencia -> asignacion .)
    IDENTIFICADOR   reduce using rule 5 (sentencia -> asignacion .)
    $end            reduce using rule 5 (sentencia -> asignacion .)
    LLAVE_DER       reduce using rule 5 (sentencia -> asignacion .)


state 6

    (6) sentencia -> declaracion_define .

    TAG_FIN         reduce using rule 6 (sentencia -> declaracion_define .)
    VARIABLE        reduce using rule 6 (sentencia -> declaracion_define .)
    DEFINE          reduce using rule 6 (sentencia -> declaracion_define .)
    ECHO            reduce using rule 6 (sentencia -> declaracion_define .)
    IF              reduce using rule 6 (sentencia -> declaracion_define .)
    FOREACH         reduce using rule 6 (sentencia -> declaracion_define .)
    FUNCTION        reduce using rule 6 (sentencia -> declaracion_define .)
    RETURN          reduce using rule 6 (sentencia -> declaracion_define .)
    IDENTIFICADOR   reduce using rule 6 (sentencia -> declaracion_define .)
    $end            reduce using rule 6 (sentencia -> declaracion_define .)
    LLAVE_DER       reduce using rule 6 (sentencia -> declaracion_define .)


state 7

    (7) sentencia -> sentencia_echo .

    TAG_FIN         reduce using rule 7 (sentencia -> sentencia_echo .)
    VARIABLE        reduce using rule 7 (sentencia -> sentencia_echo .)
    DEFINE          reduce using rule 7 (sentencia -> sentencia_echo .)
    ECHO            reduce using rule 7 (sentencia -> sentencia_echo .)
    IF              reduce using rule 7 (sentencia -> sentencia_echo .)
    FOREACH         reduce using rule 7 (sentencia -> sentencia_echo .)
    FUNCTION        reduce using rule 7 (sentencia -> sentencia_echo .)
    RETURN          reduce using rule 7 (sentencia -> sentencia_echo .)
    IDENTIFICADOR   reduce using rule 7 (sentencia -> sentencia_echo .)
    $end            reduce using rule 7 (sentencia -> sentencia_echo .)
    LLAVE_DER       reduce using rule 7 (sentencia -> sentencia_echo .)


state 8

    (8) sentencia -> asignacion_array .

    TAG_FIN         reduce using rule 8 (sentencia -> asignacion_array .)
    VARIABLE        reduce using rule 8 (sentencia -> asignacion_array .)
    DEFINE          reduce using rule 8 (sentencia -> asignacion_array .)
    ECHO            reduce using rule 8 (sentencia -> asignacion_array .)
    IF              reduce using rule 8 (sentencia -> asignacion_array .)
    FOREACH         reduce using rule 8 (sentencia -> asignacion_array .)
    FUNCTION        reduce using rule 8 (sentencia -> asignacion_array .)
    RETURN          reduce using rule 8 (sentencia -> asignacion_array .)
    IDENTIFICADOR   reduce using rule 8 (sentencia -> asignacion_array .)
    $end            reduce using rule 8 (sentencia -> asignacion_array .)
    LLAVE_DER       reduce using rule 8 (sentencia -> asignacion_array .)


state 9

    (9) sentencia -> sentencia_if .

    TAG_FIN         reduce using rule 9 (sentencia -> sentencia_if .)
    VARIABLE        reduce using rule 9 (sentencia -> sentencia_if .)
    DEFINE          reduce using rule 9 (sentencia -> sentencia_if .)
    ECHO            reduce using rule 9 (sentencia -> sentencia_if .)
    IF              reduce using rule 9 (sentencia -> sentencia_if .)
    FOREACH         reduce using rule 9 (sentencia -> sentencia_if .)
    FUNCTION        reduce using rule 9 (sentencia -> sentencia_if .)
    RETURN          reduce using rule 9 (sentencia -> sentencia_if .)
    IDENTIFICADOR   reduce using rule 9 (sentencia -> sentencia_if .)
    $end            reduce using rule 9 (sentencia -> sentencia_if .)
    LLAVE_DER       reduce using rule 9 (sentencia -> sentencia_if .)


state 10

    (10) sentencia -> sentencia_foreach .

    TAG_FIN         reduce using rule 10 (sentencia -> sentencia_foreach .)
    VARIABLE        reduce using rule 10 (sentencia -> sentencia_foreach .)
    DEFINE          reduce using rule 10 (sentencia -> sentencia_foreach .)
    ECHO            reduce using rule 10 (sentencia -> sentencia_foreach .)
    IF              reduce using rule 10 (sentencia -> sentencia_foreach .)
    FOREACH         reduce using rule 10 (sentencia -> sentencia_foreach .)
    FUNCTION        reduce using rule 10 (sentencia -> sentencia_foreach .)
    RETURN          reduce using rule 10 (sentencia -> sentencia_foreach .)
    IDENTIFICADOR   reduce using rule 10 (sentencia -> sentencia_foreach .)
    $end            reduce using rule 10 (sentencia -> sentencia_foreach .)
    LLAVE_DER       reduce using rule 10 (sentencia -> sentencia_foreach .)


state 11

    (11) sentencia -> sentencia_funcion .

    TAG_FIN         reduce using rule 11 (sentencia -> sentencia_funcion .)
    VARIABLE        reduce using rule 11 (sentencia -> sentencia_funcion .)
    DEFINE          reduce using rule 11 (sentencia -> sentencia_funcion .)
    ECHO            reduce using rule 11 (sentencia -> sentencia_funcion .)
    IF              reduce using rule 11 (sentencia -> sentencia_funcion .)
    FOREACH         reduce using rule 11 (sentencia -> sentencia_funcion .)
    FUNCTION        reduce using rule 11 (sentencia -> sentencia_funcion .)
    RETURN          reduce using rule 11 (sentencia -> sentencia_funcion .)
    IDENTIFICADOR   reduce using rule 11 (sentencia -> sentencia_funcion .)
    $end            reduce using rule 11 (sentencia -> sentencia_funcion .)
    LLAVE_DER       reduce using rule 11 (sentencia -> sentencia_funcion .)


state 12

    (12) sentencia -> sentencia_return .

    TAG_FIN         reduce using rule 12 (sentencia -> sentencia_return .)
    VARIABLE        reduce using rule 12 (sentencia -> sentencia_return .)
    DEFINE          reduce using rule 12 (sentencia -> sentencia_return .)
    ECHO            reduce using rule 12 (sentencia -> sentencia_return .)
    IF              reduce using rule 12 (sentencia -> sentencia_return .)
    FOREACH         reduce using rule 12 (sentencia -> sentencia_return .)
    FUNCTION        reduce using rule 12 (sentencia -> sentencia_return .)
    RETURN          reduce using rule 12 (sentencia -> sentencia_return .)
    IDENTIFICADOR   reduce using rule 12 (sentencia -> sentencia_return .)
    $end            reduce using rule 12 (sentencia -> sentencia_return .)
    LLAVE_DER       reduce using rule 12 (sentencia -> sentencia_return .)


state 13

    (13) sentencia -> sentencia_llamada_funcion .

    TAG_FIN         reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    VARIABLE        reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    DEFINE          reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    ECHO            reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    IF              reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    FOREACH         reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    FUNCTION        reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    RETURN          reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    IDENTIFICADOR   reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    $end            reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)
    LLAVE_DER       reduce using rule 13 (sentencia -> sentencia_llamada_funcion .)


state 14

    (14) sentencia -> sentencia_incremento .

    TAG_FIN         reduce using rule 14 (sentencia -> sentencia_incremento .)
    VARIABLE        reduce using rule 14 (sentencia -> sentencia_incremento .)
    DEFINE          reduce using rule 14 (sentencia -> sentencia_incremento .)
    ECHO            reduce using rule 14 (sentencia -> sentencia_incremento .)
    IF              reduce using rule 14 (sentencia -> sentencia_incremento .)
    FOREACH         reduce using rule 14 (sentencia -> sentencia_incremento .)
    FUNCTION        reduce using rule 14 (sentencia -> sentencia_incremento .)
    RETURN          reduce using rule 14 (sentencia -> sentencia_incremento .)
    IDENTIFICADOR   reduce using rule 14 (sentencia -> sentencia_incremento .)
    $end            reduce using rule 14 (sentencia -> sentencia_incremento .)
    LLAVE_DER       reduce using rule 14 (sentencia -> sentencia_incremento .)


state 15

    (15) sentencia -> sentencia_comentario .

    TAG_FIN         reduce using rule 15 (sentencia -> sentencia_comentario .)
    VARIABLE        reduce using rule 15 (sentencia -> sentencia_comentario .)
    DEFINE          reduce using rule 15 (sentencia -> sentencia_comentario .)
    ECHO            reduce using rule 15 (sentencia -> sentencia_comentario .)
    IF              reduce using rule 15 (sentencia -> sentencia_comentario .)
    FOREACH         reduce using rule 15 (sentencia -> sentencia_comentario .)
    FUNCTION        reduce using rule 15 (sentencia -> sentencia_comentario .)
    RETURN          reduce using rule 15 (sentencia -> sentencia_comentario .)
    IDENTIFICADOR   reduce using rule 15 (sentencia -> sentencia_comentario .)
    $end            reduce using rule 15 (sentencia -> sentencia_comentario .)
    LLAVE_DER       reduce using rule 15 (sentencia -> sentencia_comentario .)


state 16

    (16) asignacion -> VARIABLE . ASIGNAR expresion PUNTO_COMA
    (17) asignacion_array -> VARIABLE . CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (49) sentencia_incremento -> VARIABLE . MAS MAS PUNTO_COMA

    ASIGNAR         shift and go to state 26
    CORCHETE_IZQ    shift and go to state 27
    MAS             shift and go to state 28


state 17

    (18) declaracion_define -> DEFINE . PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 29


state 18

    (19) sentencia_echo -> ECHO . expresion PUNTO_COMA
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 30

state 19

    (20) sentencia_if -> IF . PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> IF . PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 37


state 20

    (50) sentencia_foreach -> FOREACH . PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 38


state 21

    (51) sentencia_funcion -> FUNCTION . IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    IDENTIFICADOR   shift and go to state 39


state 22

    (56) sentencia_llamada_funcion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA

    PAREN_IZQ       shift and go to state 40


state 23

    (55) sentencia_return -> RETURN . expresion PUNTO_COMA
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 41

state 24

    (1) programa -> TAG_INICIO sentencias TAG_FIN .

    $end            reduce using rule 1 (programa -> TAG_INICIO sentencias TAG_FIN .)


state 25

    (4) sentencias -> sentencias sentencia .

    TAG_FIN         reduce using rule 4 (sentencias -> sentencias sentencia .)
    VARIABLE        reduce using rule 4 (sentencias -> sentencias sentencia .)
    DEFINE          reduce using rule 4 (sentencias -> sentencias sentencia .)
    ECHO            reduce using rule 4 (sentencias -> sentencias sentencia .)
    IF              reduce using rule 4 (sentencias -> sentencias sentencia .)
    FOREACH         reduce using rule 4 (sentencias -> sentencias sentencia .)
    FUNCTION        reduce using rule 4 (sentencias -> sentencias sentencia .)
    RETURN          reduce using rule 4 (sentencias -> sentencias sentencia .)
    IDENTIFICADOR   reduce using rule 4 (sentencias -> sentencias sentencia .)
    $end            reduce using rule 4 (sentencias -> sentencias sentencia .)
    LLAVE_DER       reduce using rule 4 (sentencias -> sentencias sentencia .)


state 26

    (16) asignacion -> VARIABLE ASIGNAR . expresion PUNTO_COMA
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 42

state 27

    (17) asignacion_array -> VARIABLE CORCHETE_IZQ . CORCHETE_DER ASIGNAR expresion PUNTO_COMA

    CORCHETE_DER    shift and go to state 43


state 28

    (49) sentencia_incremento -> VARIABLE MAS . MAS PUNTO_COMA

    MAS             shift and go to state 44


state 29

    (18) declaracion_define -> DEFINE PAREN_IZQ . CADENA COMA expresion PAREN_DER PUNTO_COMA

    CADENA          shift and go to state 45


state 30

    (19) sentencia_echo -> ECHO expresion . PUNTO_COMA
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PUNTO_COMA      shift and go to state 46
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 31

    (33) expresion -> PAREN_IZQ . expresion PAREN_DER
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 52

state 32

    (34) expresion -> NUMERO .

    PUNTO_COMA      reduce using rule 34 (expresion -> NUMERO .)
    MAS             reduce using rule 34 (expresion -> NUMERO .)
    MENOS           reduce using rule 34 (expresion -> NUMERO .)
    MULTIPLICAR     reduce using rule 34 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 34 (expresion -> NUMERO .)
    PUNTO           reduce using rule 34 (expresion -> NUMERO .)
    PAREN_DER       reduce using rule 34 (expresion -> NUMERO .)
    COMA            reduce using rule 34 (expresion -> NUMERO .)
    CORCHETE_DER    reduce using rule 34 (expresion -> NUMERO .)
    IGUAL           reduce using rule 34 (expresion -> NUMERO .)
    NO_IGUAL        reduce using rule 34 (expresion -> NUMERO .)
    MAYOR           reduce using rule 34 (expresion -> NUMERO .)
    MENOR           reduce using rule 34 (expresion -> NUMERO .)
    MAYOR_IGUAL     reduce using rule 34 (expresion -> NUMERO .)
    MENOR_IGUAL     reduce using rule 34 (expresion -> NUMERO .)


state 33

    (35) expresion -> CADENA .

    PUNTO_COMA      reduce using rule 35 (expresion -> CADENA .)
    MAS             reduce using rule 35 (expresion -> CADENA .)
    MENOS           reduce using rule 35 (expresion -> CADENA .)
    MULTIPLICAR     reduce using rule 35 (expresion -> CADENA .)
    DIVIDIR         reduce using rule 35 (expresion -> CADENA .)
    PUNTO           reduce using rule 35 (expresion -> CADENA .)
    PAREN_DER       reduce using rule 35 (expresion -> CADENA .)
    IGUAL           reduce using rule 35 (expresion -> CADENA .)
    NO_IGUAL        reduce using rule 35 (expresion -> CADENA .)
    MAYOR           reduce using rule 35 (expresion -> CADENA .)
    MENOR           reduce using rule 35 (expresion -> CADENA .)
    MAYOR_IGUAL     reduce using rule 35 (expresion -> CADENA .)
    MENOR_IGUAL     reduce using rule 35 (expresion -> CADENA .)
    COMA            reduce using rule 35 (expresion -> CADENA .)
    CORCHETE_DER    reduce using rule 35 (expresion -> CADENA .)


state 34

    (36) expresion -> VARIABLE .
    (47) expresion -> VARIABLE . CORCHETE_IZQ expresion CORCHETE_DER

    PUNTO_COMA      reduce using rule 36 (expresion -> VARIABLE .)
    MAS             reduce using rule 36 (expresion -> VARIABLE .)
    MENOS           reduce using rule 36 (expresion -> VARIABLE .)
    MULTIPLICAR     reduce using rule 36 (expresion -> VARIABLE .)
    DIVIDIR         reduce using rule 36 (expresion -> VARIABLE .)
    PUNTO           reduce using rule 36 (expresion -> VARIABLE .)
    PAREN_DER       reduce using rule 36 (expresion -> VARIABLE .)
    COMA            reduce using rule 36 (expresion -> VARIABLE .)
    CORCHETE_DER    reduce using rule 36 (expresion -> VARIABLE .)
    IGUAL           reduce using rule 36 (expresion -> VARIABLE .)
    NO_IGUAL        reduce using rule 36 (expresion -> VARIABLE .)
    MAYOR           reduce using rule 36 (expresion -> VARIABLE .)
    MENOR           reduce using rule 36 (expresion -> VARIABLE .)
    MAYOR_IGUAL     reduce using rule 36 (expresion -> VARIABLE .)
    MENOR_IGUAL     reduce using rule 36 (expresion -> VARIABLE .)
    CORCHETE_IZQ    shift and go to state 53


state 35

    (37) expresion -> IDENTIFICADOR .
    (38) expresion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER

    PUNTO_COMA      reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MAS             reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MULTIPLICAR     reduce using rule 37 (expresion -> IDENTIFICADOR .)
    DIVIDIR         reduce using rule 37 (expresion -> IDENTIFICADOR .)
    PUNTO           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    PAREN_DER       reduce using rule 37 (expresion -> IDENTIFICADOR .)
    COMA            reduce using rule 37 (expresion -> IDENTIFICADOR .)
    CORCHETE_DER    reduce using rule 37 (expresion -> IDENTIFICADOR .)
    IGUAL           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MAYOR           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MENOR           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 37 (expresion -> IDENTIFICADOR .)
    PAREN_IZQ       shift and go to state 54


state 36

    (39) expresion -> CORCHETE_IZQ . elementos_array_coma_opt CORCHETE_DER
    (40) elementos_array_coma_opt -> . elementos_array
    (41) elementos_array_coma_opt -> . elementos_array COMA
    (42) elementos_array_coma_opt -> .
    (43) elementos_array -> . elemento_array
    (44) elementos_array -> . elementos_array COMA elemento_array
    (45) elemento_array -> . expresion
    (46) elemento_array -> . CADENA ARRAY_ASOCIATIVO expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    CORCHETE_DER    reduce using rule 42 (elementos_array_coma_opt -> .)
    CADENA          shift and go to state 59
    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    elementos_array_coma_opt       shift and go to state 55
    elementos_array                shift and go to state 56
    elemento_array                 shift and go to state 57
    expresion                      shift and go to state 58

state 37

    (20) sentencia_if -> IF PAREN_IZQ . condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> IF PAREN_IZQ . condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (22) condicion -> . expresion IGUAL expresion
    (23) condicion -> . expresion NO_IGUAL expresion
    (24) condicion -> . expresion MAYOR expresion
    (25) condicion -> . expresion MENOR expresion
    (26) condicion -> . expresion MAYOR_IGUAL expresion
    (27) condicion -> . expresion MENOR_IGUAL expresion
    (28) condicion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    IDENTIFICADOR   shift and go to state 62
    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    CORCHETE_IZQ    shift and go to state 36

    condicion                      shift and go to state 60
    expresion                      shift and go to state 61

state 38

    (50) sentencia_foreach -> FOREACH PAREN_IZQ . VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    VARIABLE        shift and go to state 63


state 39

    (51) sentencia_funcion -> FUNCTION IDENTIFICADOR . PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_IZQ       shift and go to state 64


state 40

    (56) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER PUNTO_COMA
    (57) lista_argumentos -> . expresion
    (58) lista_argumentos -> . lista_argumentos COMA expresion
    (59) lista_argumentos -> .
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_DER       reduce using rule 59 (lista_argumentos -> .)
    COMA            reduce using rule 59 (lista_argumentos -> .)
    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    lista_argumentos               shift and go to state 65
    expresion                      shift and go to state 66

state 41

    (55) sentencia_return -> RETURN expresion . PUNTO_COMA
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PUNTO_COMA      shift and go to state 67
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 42

    (16) asignacion -> VARIABLE ASIGNAR expresion . PUNTO_COMA
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PUNTO_COMA      shift and go to state 68
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 43

    (17) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER . ASIGNAR expresion PUNTO_COMA

    ASIGNAR         shift and go to state 69


state 44

    (49) sentencia_incremento -> VARIABLE MAS MAS . PUNTO_COMA

    PUNTO_COMA      shift and go to state 70


state 45

    (18) declaracion_define -> DEFINE PAREN_IZQ CADENA . COMA expresion PAREN_DER PUNTO_COMA

    COMA            shift and go to state 71


state 46

    (19) sentencia_echo -> ECHO expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    DEFINE          reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    ECHO            reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    IF              reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    FOREACH         reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    RETURN          reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    $end            reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 19 (sentencia_echo -> ECHO expresion PUNTO_COMA .)


state 47

    (29) expresion -> expresion MAS . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 72

state 48

    (30) expresion -> expresion MENOS . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 73

state 49

    (31) expresion -> expresion MULTIPLICAR . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 74

state 50

    (32) expresion -> expresion DIVIDIR . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 75

state 51

    (48) expresion -> expresion PUNTO . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 76

state 52

    (33) expresion -> PAREN_IZQ expresion . PAREN_DER
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       shift and go to state 77
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 53

    (47) expresion -> VARIABLE CORCHETE_IZQ . expresion CORCHETE_DER
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 78

state 54

    (38) expresion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER
    (57) lista_argumentos -> . expresion
    (58) lista_argumentos -> . lista_argumentos COMA expresion
    (59) lista_argumentos -> .
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_DER       reduce using rule 59 (lista_argumentos -> .)
    COMA            reduce using rule 59 (lista_argumentos -> .)
    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    lista_argumentos               shift and go to state 79
    expresion                      shift and go to state 66

state 55

    (39) expresion -> CORCHETE_IZQ elementos_array_coma_opt . CORCHETE_DER

    CORCHETE_DER    shift and go to state 80


state 56

    (40) elementos_array_coma_opt -> elementos_array .
    (41) elementos_array_coma_opt -> elementos_array . COMA
    (44) elementos_array -> elementos_array . COMA elemento_array

    CORCHETE_DER    reduce using rule 40 (elementos_array_coma_opt -> elementos_array .)
    COMA            shift and go to state 81


state 57

    (43) elementos_array -> elemento_array .

    COMA            reduce using rule 43 (elementos_array -> elemento_array .)
    CORCHETE_DER    reduce using rule 43 (elementos_array -> elemento_array .)


state 58

    (45) elemento_array -> expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    COMA            reduce using rule 45 (elemento_array -> expresion .)
    CORCHETE_DER    reduce using rule 45 (elemento_array -> expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 59

    (46) elemento_array -> CADENA . ARRAY_ASOCIATIVO expresion
    (35) expresion -> CADENA .

    ARRAY_ASOCIATIVO shift and go to state 82
    MAS             reduce using rule 35 (expresion -> CADENA .)
    MENOS           reduce using rule 35 (expresion -> CADENA .)
    MULTIPLICAR     reduce using rule 35 (expresion -> CADENA .)
    DIVIDIR         reduce using rule 35 (expresion -> CADENA .)
    PUNTO           reduce using rule 35 (expresion -> CADENA .)
    COMA            reduce using rule 35 (expresion -> CADENA .)
    CORCHETE_DER    reduce using rule 35 (expresion -> CADENA .)


state 60

    (20) sentencia_if -> IF PAREN_IZQ condicion . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> IF PAREN_IZQ condicion . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER

    PAREN_DER       shift and go to state 83


state 61

    (22) condicion -> expresion . IGUAL expresion
    (23) condicion -> expresion . NO_IGUAL expresion
    (24) condicion -> expresion . MAYOR expresion
    (25) condicion -> expresion . MENOR expresion
    (26) condicion -> expresion . MAYOR_IGUAL expresion
    (27) condicion -> expresion . MENOR_IGUAL expresion
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    IGUAL           shift and go to state 84
    NO_IGUAL        shift and go to state 85
    MAYOR           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR_IGUAL     shift and go to state 88
    MENOR_IGUAL     shift and go to state 89
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 62

    (28) condicion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER
    (37) expresion -> IDENTIFICADOR .
    (38) expresion -> IDENTIFICADOR . PAREN_IZQ lista_argumentos PAREN_DER

    PAREN_IZQ       shift and go to state 90
    IGUAL           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    NO_IGUAL        reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MAYOR           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MENOR           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MAYOR_IGUAL     reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MENOR_IGUAL     reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MAS             reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 37 (expresion -> IDENTIFICADOR .)
    MULTIPLICAR     reduce using rule 37 (expresion -> IDENTIFICADOR .)
    DIVIDIR         reduce using rule 37 (expresion -> IDENTIFICADOR .)
    PUNTO           reduce using rule 37 (expresion -> IDENTIFICADOR .)


state 63

    (50) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE . AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    AS              shift and go to state 91


state 64

    (51) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ . parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (52) parametros_funcion -> . VARIABLE
    (53) parametros_funcion -> . parametros_funcion COMA VARIABLE
    (54) parametros_funcion -> .

    VARIABLE        shift and go to state 93
    PAREN_DER       reduce using rule 54 (parametros_funcion -> .)
    COMA            reduce using rule 54 (parametros_funcion -> .)

    parametros_funcion             shift and go to state 92

state 65

    (56) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER PUNTO_COMA
    (58) lista_argumentos -> lista_argumentos . COMA expresion

    PAREN_DER       shift and go to state 94
    COMA            shift and go to state 95


state 66

    (57) lista_argumentos -> expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 57 (lista_argumentos -> expresion .)
    COMA            reduce using rule 57 (lista_argumentos -> expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 67

    (55) sentencia_return -> RETURN expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    DEFINE          reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    ECHO            reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    IF              reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    FOREACH         reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    RETURN          reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    $end            reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 55 (sentencia_return -> RETURN expresion PUNTO_COMA .)


state 68

    (16) asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    DEFINE          reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    ECHO            reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    IF              reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    FOREACH         reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    RETURN          reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    $end            reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 16 (asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA .)


state 69

    (17) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR . expresion PUNTO_COMA
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 96

state 70

    (49) sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .

    TAG_FIN         reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    VARIABLE        reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    DEFINE          reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    ECHO            reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    IF              reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    FOREACH         reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    FUNCTION        reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    RETURN          reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    $end            reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)
    LLAVE_DER       reduce using rule 49 (sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA .)


state 71

    (18) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA . expresion PAREN_DER PUNTO_COMA
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 97

state 72

    (29) expresion -> expresion MAS expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 29 (expresion -> expresion MAS expresion .)
    PAREN_DER       reduce using rule 29 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 29 (expresion -> expresion MAS expresion .)
    CORCHETE_DER    reduce using rule 29 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 29 (expresion -> expresion MAS expresion .)
    NO_IGUAL        reduce using rule 29 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 29 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 29 (expresion -> expresion MAS expresion .)
    MAYOR_IGUAL     reduce using rule 29 (expresion -> expresion MAS expresion .)
    MENOR_IGUAL     reduce using rule 29 (expresion -> expresion MAS expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51

  ! MAS             [ reduce using rule 29 (expresion -> expresion MAS expresion .) ]
  ! MENOS           [ reduce using rule 29 (expresion -> expresion MAS expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 29 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIR         [ reduce using rule 29 (expresion -> expresion MAS expresion .) ]
  ! PUNTO           [ reduce using rule 29 (expresion -> expresion MAS expresion .) ]


state 73

    (30) expresion -> expresion MENOS expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 30 (expresion -> expresion MENOS expresion .)
    PAREN_DER       reduce using rule 30 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 30 (expresion -> expresion MENOS expresion .)
    CORCHETE_DER    reduce using rule 30 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 30 (expresion -> expresion MENOS expresion .)
    NO_IGUAL        reduce using rule 30 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 30 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 30 (expresion -> expresion MENOS expresion .)
    MAYOR_IGUAL     reduce using rule 30 (expresion -> expresion MENOS expresion .)
    MENOR_IGUAL     reduce using rule 30 (expresion -> expresion MENOS expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51

  ! MAS             [ reduce using rule 30 (expresion -> expresion MENOS expresion .) ]
  ! MENOS           [ reduce using rule 30 (expresion -> expresion MENOS expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 30 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIR         [ reduce using rule 30 (expresion -> expresion MENOS expresion .) ]
  ! PUNTO           [ reduce using rule 30 (expresion -> expresion MENOS expresion .) ]


state 74

    (31) expresion -> expresion MULTIPLICAR expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    PAREN_DER       reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    COMA            reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    CORCHETE_DER    reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    IGUAL           reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    NO_IGUAL        reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    MAYOR           reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    MENOR           reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    MAYOR_IGUAL     reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    MENOR_IGUAL     reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51

  ! MAS             [ reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! MENOS           [ reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! DIVIDIR         [ reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .) ]
  ! PUNTO           [ reduce using rule 31 (expresion -> expresion MULTIPLICAR expresion .) ]


state 75

    (32) expresion -> expresion DIVIDIR expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    PAREN_DER       reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    COMA            reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    CORCHETE_DER    reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    IGUAL           reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    NO_IGUAL        reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    MAYOR           reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    MENOR           reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    MAYOR_IGUAL     reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    MENOR_IGUAL     reduce using rule 32 (expresion -> expresion DIVIDIR expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51

  ! MAS             [ reduce using rule 32 (expresion -> expresion DIVIDIR expresion .) ]
  ! MENOS           [ reduce using rule 32 (expresion -> expresion DIVIDIR expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 32 (expresion -> expresion DIVIDIR expresion .) ]
  ! DIVIDIR         [ reduce using rule 32 (expresion -> expresion DIVIDIR expresion .) ]
  ! PUNTO           [ reduce using rule 32 (expresion -> expresion DIVIDIR expresion .) ]


state 76

    (48) expresion -> expresion PUNTO expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICAR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO_COMA      reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    PAREN_DER       reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    COMA            reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    CORCHETE_DER    reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    IGUAL           reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    NO_IGUAL        reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    MAYOR           reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    MENOR           reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    MAYOR_IGUAL     reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    MENOR_IGUAL     reduce using rule 48 (expresion -> expresion PUNTO expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51

  ! MAS             [ reduce using rule 48 (expresion -> expresion PUNTO expresion .) ]
  ! MENOS           [ reduce using rule 48 (expresion -> expresion PUNTO expresion .) ]
  ! MULTIPLICAR     [ reduce using rule 48 (expresion -> expresion PUNTO expresion .) ]
  ! DIVIDIR         [ reduce using rule 48 (expresion -> expresion PUNTO expresion .) ]
  ! PUNTO           [ reduce using rule 48 (expresion -> expresion PUNTO expresion .) ]


state 77

    (33) expresion -> PAREN_IZQ expresion PAREN_DER .

    PUNTO_COMA      reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAS             reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOS           reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MULTIPLICAR     reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    DIVIDIR         reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    PUNTO           reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    PAREN_DER       reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    COMA            reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    CORCHETE_DER    reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    IGUAL           reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    NO_IGUAL        reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAYOR           reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOR           reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MAYOR_IGUAL     reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)
    MENOR_IGUAL     reduce using rule 33 (expresion -> PAREN_IZQ expresion PAREN_DER .)


state 78

    (47) expresion -> VARIABLE CORCHETE_IZQ expresion . CORCHETE_DER
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    CORCHETE_DER    shift and go to state 98
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 79

    (38) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER
    (58) lista_argumentos -> lista_argumentos . COMA expresion

    PAREN_DER       shift and go to state 99
    COMA            shift and go to state 95


state 80

    (39) expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .

    PUNTO_COMA      reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MAS             reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MENOS           reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MULTIPLICAR     reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    DIVIDIR         reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    PUNTO           reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    PAREN_DER       reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    COMA            reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    IGUAL           reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    NO_IGUAL        reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MAYOR           reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MENOR           reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MAYOR_IGUAL     reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)
    MENOR_IGUAL     reduce using rule 39 (expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER .)


state 81

    (41) elementos_array_coma_opt -> elementos_array COMA .
    (44) elementos_array -> elementos_array COMA . elemento_array
    (45) elemento_array -> . expresion
    (46) elemento_array -> . CADENA ARRAY_ASOCIATIVO expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    CORCHETE_DER    reduce using rule 41 (elementos_array_coma_opt -> elementos_array COMA .)
    CADENA          shift and go to state 59
    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    elemento_array                 shift and go to state 100
    expresion                      shift and go to state 58

state 82

    (46) elemento_array -> CADENA ARRAY_ASOCIATIVO . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 101

state 83

    (20) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 102


state 84

    (22) condicion -> expresion IGUAL . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 103

state 85

    (23) condicion -> expresion NO_IGUAL . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 104

state 86

    (24) condicion -> expresion MAYOR . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 105

state 87

    (25) condicion -> expresion MENOR . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 106

state 88

    (26) condicion -> expresion MAYOR_IGUAL . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 107

state 89

    (27) condicion -> expresion MENOR_IGUAL . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 108

state 90

    (28) condicion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER
    (38) expresion -> IDENTIFICADOR PAREN_IZQ . lista_argumentos PAREN_DER
    (57) lista_argumentos -> . expresion
    (58) lista_argumentos -> . lista_argumentos COMA expresion
    (59) lista_argumentos -> .
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_DER       reduce using rule 59 (lista_argumentos -> .)
    COMA            reduce using rule 59 (lista_argumentos -> .)
    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    lista_argumentos               shift and go to state 109
    expresion                      shift and go to state 66

state 91

    (50) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS . VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    VARIABLE        shift and go to state 110


state 92

    (51) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (53) parametros_funcion -> parametros_funcion . COMA VARIABLE

    PAREN_DER       shift and go to state 111
    COMA            shift and go to state 112


state 93

    (52) parametros_funcion -> VARIABLE .

    PAREN_DER       reduce using rule 52 (parametros_funcion -> VARIABLE .)
    COMA            reduce using rule 52 (parametros_funcion -> VARIABLE .)


state 94

    (56) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 113


state 95

    (58) lista_argumentos -> lista_argumentos COMA . expresion
    (29) expresion -> . expresion MAS expresion
    (30) expresion -> . expresion MENOS expresion
    (31) expresion -> . expresion MULTIPLICAR expresion
    (32) expresion -> . expresion DIVIDIR expresion
    (33) expresion -> . PAREN_IZQ expresion PAREN_DER
    (34) expresion -> . NUMERO
    (35) expresion -> . CADENA
    (36) expresion -> . VARIABLE
    (37) expresion -> . IDENTIFICADOR
    (38) expresion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER
    (39) expresion -> . CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER
    (47) expresion -> . VARIABLE CORCHETE_IZQ expresion CORCHETE_DER
    (48) expresion -> . expresion PUNTO expresion

    PAREN_IZQ       shift and go to state 31
    NUMERO          shift and go to state 32
    CADENA          shift and go to state 33
    VARIABLE        shift and go to state 34
    IDENTIFICADOR   shift and go to state 35
    CORCHETE_IZQ    shift and go to state 36

    expresion                      shift and go to state 114

state 96

    (17) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion . PUNTO_COMA
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PUNTO_COMA      shift and go to state 115
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 97

    (18) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion . PAREN_DER PUNTO_COMA
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       shift and go to state 116
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 98

    (47) expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .

    PUNTO_COMA      reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAS             reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOS           reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MULTIPLICAR     reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    DIVIDIR         reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    PUNTO           reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    PAREN_DER       reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    COMA            reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    IGUAL           reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    NO_IGUAL        reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAYOR           reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOR           reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MAYOR_IGUAL     reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)
    MENOR_IGUAL     reduce using rule 47 (expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER .)


state 99

    (38) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .

    PUNTO_COMA      reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAS             reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOS           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MULTIPLICAR     reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    DIVIDIR         reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    PUNTO           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    PAREN_DER       reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    COMA            reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    CORCHETE_DER    reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    IGUAL           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    NO_IGUAL        reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAYOR           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOR           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAYOR_IGUAL     reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOR_IGUAL     reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)


state 100

    (44) elementos_array -> elementos_array COMA elemento_array .

    COMA            reduce using rule 44 (elementos_array -> elementos_array COMA elemento_array .)
    CORCHETE_DER    reduce using rule 44 (elementos_array -> elementos_array COMA elemento_array .)


state 101

    (46) elemento_array -> CADENA ARRAY_ASOCIATIVO expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    COMA            reduce using rule 46 (elemento_array -> CADENA ARRAY_ASOCIATIVO expresion .)
    CORCHETE_DER    reduce using rule 46 (elemento_array -> CADENA ARRAY_ASOCIATIVO expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 102

    (20) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (21) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    LLAVE_DER       reduce using rule 60 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 117
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 103

    (22) condicion -> expresion IGUAL expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 22 (condicion -> expresion IGUAL expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 104

    (23) condicion -> expresion NO_IGUAL expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 23 (condicion -> expresion NO_IGUAL expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 105

    (24) condicion -> expresion MAYOR expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 24 (condicion -> expresion MAYOR expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 106

    (25) condicion -> expresion MENOR expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 25 (condicion -> expresion MENOR expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 107

    (26) condicion -> expresion MAYOR_IGUAL expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 26 (condicion -> expresion MAYOR_IGUAL expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 108

    (27) condicion -> expresion MENOR_IGUAL expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 27 (condicion -> expresion MENOR_IGUAL expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 109

    (28) condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER
    (38) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos . PAREN_DER
    (58) lista_argumentos -> lista_argumentos . COMA expresion

    PAREN_DER       shift and go to state 118
    COMA            shift and go to state 95


state 110

    (50) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE . PAREN_DER LLAVE_IZQ sentencias LLAVE_DER

    PAREN_DER       shift and go to state 119


state 111

    (51) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 120


state 112

    (53) parametros_funcion -> parametros_funcion COMA . VARIABLE

    VARIABLE        shift and go to state 121


state 113

    (56) sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 56 (sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA .)


state 114

    (58) lista_argumentos -> lista_argumentos COMA expresion .
    (29) expresion -> expresion . MAS expresion
    (30) expresion -> expresion . MENOS expresion
    (31) expresion -> expresion . MULTIPLICAR expresion
    (32) expresion -> expresion . DIVIDIR expresion
    (48) expresion -> expresion . PUNTO expresion

    PAREN_DER       reduce using rule 58 (lista_argumentos -> lista_argumentos COMA expresion .)
    COMA            reduce using rule 58 (lista_argumentos -> lista_argumentos COMA expresion .)
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    MULTIPLICAR     shift and go to state 49
    DIVIDIR         shift and go to state 50
    PUNTO           shift and go to state 51


state 115

    (17) asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .

    TAG_FIN         reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    VARIABLE        reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    DEFINE          reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    ECHO            reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    IF              reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    FOREACH         reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    FUNCTION        reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    RETURN          reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    $end            reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)
    LLAVE_DER       reduce using rule 17 (asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA .)


state 116

    (18) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER . PUNTO_COMA

    PUNTO_COMA      shift and go to state 122


state 117

    (20) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (21) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    LLAVE_DER       shift and go to state 123
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! LLAVE_DER       [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 118

    (28) condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .
    (38) expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .

    PAREN_DER       reduce using rule 28 (condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    IGUAL           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    NO_IGUAL        reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAYOR           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOR           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAYOR_IGUAL     reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOR_IGUAL     reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MAS             reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MENOS           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    MULTIPLICAR     reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    DIVIDIR         reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)
    PUNTO           reduce using rule 38 (expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER .)


state 119

    (50) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 124


state 120

    (51) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    LLAVE_DER       reduce using rule 60 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 125
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 121

    (53) parametros_funcion -> parametros_funcion COMA VARIABLE .

    PAREN_DER       reduce using rule 53 (parametros_funcion -> parametros_funcion COMA VARIABLE .)
    COMA            reduce using rule 53 (parametros_funcion -> parametros_funcion COMA VARIABLE .)


state 122

    (18) declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .

    TAG_FIN         reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    VARIABLE        reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    DEFINE          reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    ECHO            reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    IF              reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    FOREACH         reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    FUNCTION        reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    RETURN          reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    IDENTIFICADOR   reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    $end            reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)
    LLAVE_DER       reduce using rule 18 (declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA .)


state 123

    (20) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .
    (21) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER . ELSE LLAVE_IZQ sentencias LLAVE_DER

    TAG_FIN         reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 20 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ELSE            shift and go to state 126


state 124

    (50) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    LLAVE_DER       reduce using rule 60 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 127
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 125

    (51) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    LLAVE_DER       shift and go to state 128
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! LLAVE_DER       [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 126

    (21) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE . LLAVE_IZQ sentencias LLAVE_DER

    LLAVE_IZQ       shift and go to state 129


state 127

    (50) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    LLAVE_DER       shift and go to state 130
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! LLAVE_DER       [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 128

    (51) sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 51 (sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)


state 129

    (21) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ . sentencias LLAVE_DER
    (3) sentencias -> . sentencia
    (4) sentencias -> . sentencias sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22
    LLAVE_DER       reduce using rule 60 (sentencia_comentario -> .)

  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencias                     shift and go to state 131
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 130

    (50) sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 50 (sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER .)


state 131

    (21) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias . LLAVE_DER
    (4) sentencias -> sentencias . sentencia
    (5) sentencia -> . asignacion
    (6) sentencia -> . declaracion_define
    (7) sentencia -> . sentencia_echo
    (8) sentencia -> . asignacion_array
    (9) sentencia -> . sentencia_if
    (10) sentencia -> . sentencia_foreach
    (11) sentencia -> . sentencia_funcion
    (12) sentencia -> . sentencia_return
    (13) sentencia -> . sentencia_llamada_funcion
    (14) sentencia -> . sentencia_incremento
    (15) sentencia -> . sentencia_comentario
    (16) asignacion -> . VARIABLE ASIGNAR expresion PUNTO_COMA
    (18) declaracion_define -> . DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA
    (19) sentencia_echo -> . ECHO expresion PUNTO_COMA
    (17) asignacion_array -> . VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA
    (20) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (21) sentencia_if -> . IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER
    (50) sentencia_foreach -> . FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (51) sentencia_funcion -> . FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER
    (55) sentencia_return -> . RETURN expresion PUNTO_COMA
    (56) sentencia_llamada_funcion -> . IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA
    (49) sentencia_incremento -> . VARIABLE MAS MAS PUNTO_COMA
    (60) sentencia_comentario -> .

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for DEFINE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    LLAVE_DER       shift and go to state 132
    VARIABLE        shift and go to state 16
    DEFINE          shift and go to state 17
    ECHO            shift and go to state 18
    IF              shift and go to state 19
    FOREACH         shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 23
    IDENTIFICADOR   shift and go to state 22

  ! LLAVE_DER       [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! VARIABLE        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! DEFINE          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! ECHO            [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IF              [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FOREACH         [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! FUNCTION        [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! RETURN          [ reduce using rule 60 (sentencia_comentario -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 60 (sentencia_comentario -> .) ]

    sentencia                      shift and go to state 25
    asignacion                     shift and go to state 5
    declaracion_define             shift and go to state 6
    sentencia_echo                 shift and go to state 7
    asignacion_array               shift and go to state 8
    sentencia_if                   shift and go to state 9
    sentencia_foreach              shift and go to state 10
    sentencia_funcion              shift and go to state 11
    sentencia_return               shift and go to state 12
    sentencia_llamada_funcion      shift and go to state 13
    sentencia_incremento           shift and go to state 14
    sentencia_comentario           shift and go to state 15

state 132

    (21) sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .

    TAG_FIN         reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    VARIABLE        reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    DEFINE          reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    ECHO            reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    IF              reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    FOREACH         reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    FUNCTION        reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    RETURN          reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    IDENTIFICADOR   reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    $end            reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)
    LLAVE_DER       reduce using rule 21 (sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 2 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 2 resolved as shift
WARNING: shift/reduce conflict for TAG_FIN in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 3 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 3 resolved as shift
WARNING: shift/reduce conflict for MAS in state 72 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 72 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 72 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 72 resolved as shift
WARNING: shift/reduce conflict for MAS in state 73 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 73 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 73 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 73 resolved as shift
WARNING: shift/reduce conflict for MAS in state 74 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 74 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 74 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 74 resolved as shift
WARNING: shift/reduce conflict for MAS in state 75 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 75 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 75 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 75 resolved as shift
WARNING: shift/reduce conflict for MAS in state 76 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 76 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICAR in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 76 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 102 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 102 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 102 resolved as shift
WARNING: shift/reduce conflict for IF in state 102 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 102 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 102 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 102 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 102 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 117 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 117 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 117 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 117 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 117 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 117 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 117 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 120 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 120 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 120 resolved as shift
WARNING: shift/reduce conflict for IF in state 120 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 120 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 120 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 120 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 120 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 124 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 124 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 124 resolved as shift
WARNING: shift/reduce conflict for IF in state 124 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 124 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 124 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 124 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 124 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 125 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 125 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 125 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 125 resolved as shift
WARNING: shift/reduce conflict for IF in state 125 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 125 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 125 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 125 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 125 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 127 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 127 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 127 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 127 resolved as shift
WARNING: shift/reduce conflict for IF in state 127 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 127 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 127 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 127 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 127 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 129 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 129 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 129 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 129 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 129 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 129 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 131 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 131 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 131 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 131 resolved as shift
WARNING: shift/reduce conflict for IF in state 131 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 131 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 131 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 131 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 131 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> TAG_INICIO sentencias)
WARNING: rejected rule (sentencia_comentario -> <empty>) in state 3
