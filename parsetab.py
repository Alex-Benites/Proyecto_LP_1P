
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaARRAY_ASOCIATIVO AS ASIGNAR CADENA CLASS COMA CORCHETE_DER CORCHETE_IZQ DEFINE DIVIDIR DOBLE_DOS_PUNTOS ECHO ELSE ELSEIF FLECHA FOR FOREACH FUNCTION IDENTIFICADOR IF IGUAL LLAVE_DER LLAVE_IZQ MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MULTIPLICAR NEW NO_IGUAL NUMERO PAREN_DER PAREN_IZQ PRINT PRIVATE PROTECTED PUBLIC PUNTO PUNTO_COMA READLINE RETURN TAG_FIN TAG_INICIO VARIABLE WHILEprograma : TAG_INICIO sentencias TAG_FIN\n| TAG_INICIO sentenciassentencias : sentencia\n| sentencias sentenciasentencia : asignacion\n| declaracion_define\n| sentencia_echo\n| asignacion_array\n| sentencia_if\n| sentencia_foreach\n| sentencia_funcion\n| sentencia_return\n| sentencia_llamada_funcion\n| sentencia_incremento\n| sentencia_comentarioasignacion : VARIABLE ASIGNAR expresion PUNTO_COMAasignacion_array : VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMAdeclaracion_define : DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMAsentencia_echo : ECHO expresion PUNTO_COMAsentencia_if : IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER\n| IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DERcondicion : expresion IGUAL expresion\n| expresion NO_IGUAL expresion\n| expresion MAYOR expresion\n| expresion MENOR expresion\n| expresion MAYOR_IGUAL expresion\n| expresion MENOR_IGUAL expresion\n| IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DERexpresion : expresion MAS expresion\n| expresion MENOS expresion\n| expresion MULTIPLICAR expresion\n| expresion DIVIDIR expresionexpresion : PAREN_IZQ expresion PAREN_DERexpresion : NUMERO\n| CADENA\n| VARIABLE\n| IDENTIFICADORexpresion : IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DERexpresion : CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DERelementos_array_coma_opt : elementos_array\n| elementos_array COMA\n| elementos_array : elemento_array\n| elementos_array COMA elemento_arrayelemento_array : expresion\n| CADENA ARRAY_ASOCIATIVO expresionexpresion : VARIABLE CORCHETE_IZQ expresion CORCHETE_DERexpresion : expresion PUNTO expresionsentencia_incremento : VARIABLE MAS MAS PUNTO_COMAsentencia_foreach : FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DERsentencia_funcion : FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DERparametros_funcion : VARIABLE\n| parametros_funcion COMA VARIABLE\n| sentencia_return : RETURN expresion PUNTO_COMAsentencia_llamada_funcion : IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMAlista_argumentos : expresion\n| lista_argumentos COMA expresion\n| sentencia_comentario : '
    
_lr_action_items = {'TAG_INICIO':([0,],[2,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,46,67,68,70,113,115,122,123,128,130,132,],[0,-60,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-1,-4,-19,-55,-16,-49,-56,-17,-18,-20,-51,-50,-21,]),'VARIABLE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,23,25,26,31,36,37,38,40,46,47,48,49,50,51,53,54,64,67,68,69,70,71,81,82,84,85,86,87,88,89,90,91,95,102,112,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[16,16,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,34,34,-4,34,34,34,34,63,34,-19,34,34,34,34,34,34,34,93,-55,-16,34,-49,34,34,34,34,34,34,34,34,34,34,110,34,16,121,-56,-17,16,16,-18,-20,16,16,16,-51,16,-50,16,-21,]),'DEFINE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,67,68,70,102,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-19,-55,-16,-49,17,-56,-17,17,17,-18,-20,17,17,17,-51,17,-50,17,-21,]),'ECHO':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,67,68,70,102,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-19,-55,-16,-49,18,-56,-17,18,18,-18,-20,18,18,18,-51,18,-50,18,-21,]),'IF':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,67,68,70,102,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-19,-55,-16,-49,19,-56,-17,19,19,-18,-20,19,19,19,-51,19,-50,19,-21,]),'FOREACH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,67,68,70,102,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-19,-55,-16,-49,20,-56,-17,20,20,-18,-20,20,20,20,-51,20,-50,20,-21,]),'FUNCTION':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,67,68,70,102,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-19,-55,-16,-49,21,-56,-17,21,21,-18,-20,21,21,21,-51,21,-50,21,-21,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,67,68,70,102,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[23,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-19,-55,-16,-49,23,-56,-17,23,23,-18,-20,23,23,23,-51,23,-50,23,-21,]),'IDENTIFICADOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,21,23,25,26,31,36,37,40,46,47,48,49,50,51,53,54,67,68,69,70,71,81,82,84,85,86,87,88,89,90,95,102,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,35,39,35,-4,35,35,35,62,35,-19,35,35,35,35,35,35,35,-55,-16,35,-49,35,35,35,35,35,35,35,35,35,35,35,22,-56,-17,22,22,-18,-20,22,22,22,-51,22,-50,22,-21,]),'TAG_FIN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,67,68,70,113,115,122,123,128,130,132,],[-60,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-19,-55,-16,-49,-56,-17,-18,-20,-51,-50,-21,]),'LLAVE_DER':([4,5,6,7,8,9,10,11,12,13,14,15,25,46,67,68,70,102,113,115,117,120,122,123,124,125,127,128,129,130,131,132,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-19,-55,-16,-49,-60,-56,-17,123,-60,-18,-20,-60,128,130,-51,-60,-50,132,-21,]),'ASIGNAR':([16,43,],[26,69,]),'CORCHETE_IZQ':([16,18,23,26,31,34,36,37,40,47,48,49,50,51,53,54,69,71,81,82,84,85,86,87,88,89,90,95,],[27,36,36,36,36,53,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'MAS':([16,28,30,32,33,34,35,41,42,52,58,59,61,62,66,72,73,74,75,76,77,78,80,96,97,98,99,101,103,104,105,106,107,108,114,118,],[28,44,47,-34,-35,-36,-37,47,47,47,47,-35,47,-37,47,47,47,47,47,47,-33,47,-39,47,47,-47,-38,47,47,47,47,47,47,47,47,-38,]),'PAREN_IZQ':([17,18,19,20,22,23,26,31,35,36,37,39,40,47,48,49,50,51,53,54,62,69,71,81,82,84,85,86,87,88,89,90,95,],[29,31,37,38,40,31,31,31,54,31,31,64,31,31,31,31,31,31,31,31,90,31,31,31,31,31,31,31,31,31,31,31,31,]),'NUMERO':([18,23,26,31,36,37,40,47,48,49,50,51,53,54,69,71,81,82,84,85,86,87,88,89,90,95,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CADENA':([18,23,26,29,31,36,37,40,47,48,49,50,51,53,54,69,71,81,82,84,85,86,87,88,89,90,95,],[33,33,33,45,33,59,33,33,33,33,33,33,33,33,33,33,33,59,33,33,33,33,33,33,33,33,33,]),'CORCHETE_DER':([27,32,33,34,35,36,55,56,57,58,59,72,73,74,75,76,77,78,80,81,98,99,100,101,],[43,-34,-35,-36,-37,-42,80,-40,-43,-45,-35,-29,-30,-31,-32,-48,-33,98,-39,-41,-47,-38,-44,-46,]),'PUNTO_COMA':([30,32,33,34,35,41,42,44,72,73,74,75,76,77,80,94,96,98,99,116,],[46,-34,-35,-36,-37,67,68,70,-29,-30,-31,-32,-48,-33,-39,113,115,-47,-38,122,]),'MENOS':([30,32,33,34,35,41,42,52,58,59,61,62,66,72,73,74,75,76,77,78,80,96,97,98,99,101,103,104,105,106,107,108,114,118,],[48,-34,-35,-36,-37,48,48,48,48,-35,48,-37,48,48,48,48,48,48,-33,48,-39,48,48,-47,-38,48,48,48,48,48,48,48,48,-38,]),'MULTIPLICAR':([30,32,33,34,35,41,42,52,58,59,61,62,66,72,73,74,75,76,77,78,80,96,97,98,99,101,103,104,105,106,107,108,114,118,],[49,-34,-35,-36,-37,49,49,49,49,-35,49,-37,49,49,49,49,49,49,-33,49,-39,49,49,-47,-38,49,49,49,49,49,49,49,49,-38,]),'DIVIDIR':([30,32,33,34,35,41,42,52,58,59,61,62,66,72,73,74,75,76,77,78,80,96,97,98,99,101,103,104,105,106,107,108,114,118,],[50,-34,-35,-36,-37,50,50,50,50,-35,50,-37,50,50,50,50,50,50,-33,50,-39,50,50,-47,-38,50,50,50,50,50,50,50,50,-38,]),'PUNTO':([30,32,33,34,35,41,42,52,58,59,61,62,66,72,73,74,75,76,77,78,80,96,97,98,99,101,103,104,105,106,107,108,114,118,],[51,-34,-35,-36,-37,51,51,51,51,-35,51,-37,51,51,51,51,51,51,-33,51,-39,51,51,-47,-38,51,51,51,51,51,51,51,51,-38,]),'PAREN_DER':([32,33,34,35,40,52,54,60,64,65,66,72,73,74,75,76,77,79,80,90,92,93,97,98,99,103,104,105,106,107,108,109,110,114,118,121,],[-34,-35,-36,-37,-59,77,-59,83,-54,94,-57,-29,-30,-31,-32,-48,-33,99,-39,-59,111,-52,116,-47,-38,-22,-23,-24,-25,-26,-27,118,119,-58,-28,-53,]),'COMA':([32,33,34,35,40,45,54,56,57,58,59,64,65,66,72,73,74,75,76,77,79,80,90,92,93,98,99,100,101,109,114,121,],[-34,-35,-36,-37,-59,71,-59,81,-43,-45,-35,-54,95,-57,-29,-30,-31,-32,-48,-33,95,-39,-59,112,-52,-47,-38,-44,-46,95,-58,-53,]),'IGUAL':([32,33,34,35,61,62,72,73,74,75,76,77,80,98,99,118,],[-34,-35,-36,-37,84,-37,-29,-30,-31,-32,-48,-33,-39,-47,-38,-38,]),'NO_IGUAL':([32,33,34,35,61,62,72,73,74,75,76,77,80,98,99,118,],[-34,-35,-36,-37,85,-37,-29,-30,-31,-32,-48,-33,-39,-47,-38,-38,]),'MAYOR':([32,33,34,35,61,62,72,73,74,75,76,77,80,98,99,118,],[-34,-35,-36,-37,86,-37,-29,-30,-31,-32,-48,-33,-39,-47,-38,-38,]),'MENOR':([32,33,34,35,61,62,72,73,74,75,76,77,80,98,99,118,],[-34,-35,-36,-37,87,-37,-29,-30,-31,-32,-48,-33,-39,-47,-38,-38,]),'MAYOR_IGUAL':([32,33,34,35,61,62,72,73,74,75,76,77,80,98,99,118,],[-34,-35,-36,-37,88,-37,-29,-30,-31,-32,-48,-33,-39,-47,-38,-38,]),'MENOR_IGUAL':([32,33,34,35,61,62,72,73,74,75,76,77,80,98,99,118,],[-34,-35,-36,-37,89,-37,-29,-30,-31,-32,-48,-33,-39,-47,-38,-38,]),'ARRAY_ASOCIATIVO':([59,],[82,]),'AS':([63,],[91,]),'LLAVE_IZQ':([83,111,119,126,],[102,120,124,129,]),'ELSE':([123,],[126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,102,120,124,129,],[3,117,125,127,131,]),'sentencia':([2,3,102,117,120,124,125,127,129,131,],[4,25,4,25,4,4,25,25,4,25,]),'asignacion':([2,3,102,117,120,124,125,127,129,131,],[5,5,5,5,5,5,5,5,5,5,]),'declaracion_define':([2,3,102,117,120,124,125,127,129,131,],[6,6,6,6,6,6,6,6,6,6,]),'sentencia_echo':([2,3,102,117,120,124,125,127,129,131,],[7,7,7,7,7,7,7,7,7,7,]),'asignacion_array':([2,3,102,117,120,124,125,127,129,131,],[8,8,8,8,8,8,8,8,8,8,]),'sentencia_if':([2,3,102,117,120,124,125,127,129,131,],[9,9,9,9,9,9,9,9,9,9,]),'sentencia_foreach':([2,3,102,117,120,124,125,127,129,131,],[10,10,10,10,10,10,10,10,10,10,]),'sentencia_funcion':([2,3,102,117,120,124,125,127,129,131,],[11,11,11,11,11,11,11,11,11,11,]),'sentencia_return':([2,3,102,117,120,124,125,127,129,131,],[12,12,12,12,12,12,12,12,12,12,]),'sentencia_llamada_funcion':([2,3,102,117,120,124,125,127,129,131,],[13,13,13,13,13,13,13,13,13,13,]),'sentencia_incremento':([2,3,102,117,120,124,125,127,129,131,],[14,14,14,14,14,14,14,14,14,14,]),'sentencia_comentario':([2,3,102,117,120,124,125,127,129,131,],[15,15,15,15,15,15,15,15,15,15,]),'expresion':([18,23,26,31,36,37,40,47,48,49,50,51,53,54,69,71,81,82,84,85,86,87,88,89,90,95,],[30,41,42,52,58,61,66,72,73,74,75,76,78,66,96,97,58,101,103,104,105,106,107,108,66,114,]),'elementos_array_coma_opt':([36,],[55,]),'elementos_array':([36,],[56,]),'elemento_array':([36,81,],[57,100,]),'condicion':([37,],[60,]),'lista_argumentos':([40,54,90,],[65,79,109,]),'parametros_funcion':([64,],[92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> TAG_INICIO sentencias TAG_FIN','programa',3,'p_programa','parser.py',10),
  ('programa -> TAG_INICIO sentencias','programa',2,'p_programa','parser.py',11),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','parser.py',15),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_sentencias','parser.py',16),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','parser.py',24),
  ('sentencia -> declaracion_define','sentencia',1,'p_sentencia','parser.py',25),
  ('sentencia -> sentencia_echo','sentencia',1,'p_sentencia','parser.py',26),
  ('sentencia -> asignacion_array','sentencia',1,'p_sentencia','parser.py',27),
  ('sentencia -> sentencia_if','sentencia',1,'p_sentencia','parser.py',28),
  ('sentencia -> sentencia_foreach','sentencia',1,'p_sentencia','parser.py',29),
  ('sentencia -> sentencia_funcion','sentencia',1,'p_sentencia','parser.py',30),
  ('sentencia -> sentencia_return','sentencia',1,'p_sentencia','parser.py',31),
  ('sentencia -> sentencia_llamada_funcion','sentencia',1,'p_sentencia','parser.py',32),
  ('sentencia -> sentencia_incremento','sentencia',1,'p_sentencia','parser.py',33),
  ('sentencia -> sentencia_comentario','sentencia',1,'p_sentencia','parser.py',34),
  ('asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA','asignacion',4,'p_asignacion','parser.py',38),
  ('asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA','asignacion_array',6,'p_asignacion_array','parser.py',42),
  ('declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA','declaracion_define',7,'p_declaracion_define','parser.py',46),
  ('sentencia_echo -> ECHO expresion PUNTO_COMA','sentencia_echo',3,'p_sentencia_echo','parser.py',50),
  ('sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_if',7,'p_sentencia_if','parser.py',54),
  ('sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER ELSE LLAVE_IZQ sentencias LLAVE_DER','sentencia_if',11,'p_sentencia_if','parser.py',55),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion','parser.py',63),
  ('condicion -> expresion NO_IGUAL expresion','condicion',3,'p_condicion','parser.py',64),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion','parser.py',65),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion','parser.py',66),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion','parser.py',67),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion','parser.py',68),
  ('condicion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER','condicion',4,'p_condicion','parser.py',69),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','parser.py',76),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','parser.py',77),
  ('expresion -> expresion MULTIPLICAR expresion','expresion',3,'p_expresion_binaria','parser.py',78),
  ('expresion -> expresion DIVIDIR expresion','expresion',3,'p_expresion_binaria','parser.py',79),
  ('expresion -> PAREN_IZQ expresion PAREN_DER','expresion',3,'p_expresion_parentesis','parser.py',83),
  ('expresion -> NUMERO','expresion',1,'p_expresion_simple','parser.py',87),
  ('expresion -> CADENA','expresion',1,'p_expresion_simple','parser.py',88),
  ('expresion -> VARIABLE','expresion',1,'p_expresion_simple','parser.py',89),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_simple','parser.py',90),
  ('expresion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER','expresion',4,'p_expresion_llamada_funcion','parser.py',95),
  ('expresion -> CORCHETE_IZQ elementos_array_coma_opt CORCHETE_DER','expresion',3,'p_expresion_array','parser.py',99),
  ('elementos_array_coma_opt -> elementos_array','elementos_array_coma_opt',1,'p_elementos_array_coma_opt','parser.py',103),
  ('elementos_array_coma_opt -> elementos_array COMA','elementos_array_coma_opt',2,'p_elementos_array_coma_opt','parser.py',104),
  ('elementos_array_coma_opt -> <empty>','elementos_array_coma_opt',0,'p_elementos_array_coma_opt','parser.py',105),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','parser.py',114),
  ('elementos_array -> elementos_array COMA elemento_array','elementos_array',3,'p_elementos_array','parser.py',115),
  ('elemento_array -> expresion','elemento_array',1,'p_elemento_array','parser.py',123),
  ('elemento_array -> CADENA ARRAY_ASOCIATIVO expresion','elemento_array',3,'p_elemento_array','parser.py',124),
  ('expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER','expresion',4,'p_expresion_acceso_array','parser.py',131),
  ('expresion -> expresion PUNTO expresion','expresion',3,'p_expresion_concatenacion','parser.py',135),
  ('sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA','sentencia_incremento',4,'p_sentencia_incremento','parser.py',139),
  ('sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_foreach',9,'p_sentencia_foreach','parser.py',143),
  ('sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_funcion',8,'p_sentencia_funcion','parser.py',147),
  ('parametros_funcion -> VARIABLE','parametros_funcion',1,'p_parametros_funcion','parser.py',151),
  ('parametros_funcion -> parametros_funcion COMA VARIABLE','parametros_funcion',3,'p_parametros_funcion','parser.py',152),
  ('parametros_funcion -> <empty>','parametros_funcion',0,'p_parametros_funcion','parser.py',153),
  ('sentencia_return -> RETURN expresion PUNTO_COMA','sentencia_return',3,'p_sentencia_return','parser.py',163),
  ('sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA','sentencia_llamada_funcion',5,'p_sentencia_llamada_funcion','parser.py',167),
  ('lista_argumentos -> expresion','lista_argumentos',1,'p_lista_argumentos','parser.py',171),
  ('lista_argumentos -> lista_argumentos COMA expresion','lista_argumentos',3,'p_lista_argumentos','parser.py',172),
  ('lista_argumentos -> <empty>','lista_argumentos',0,'p_lista_argumentos','parser.py',173),
  ('sentencia_comentario -> <empty>','sentencia_comentario',0,'p_sentencia_comentario','parser.py',183),
]
