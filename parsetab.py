
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaARRAY_ASOCIATIVO AS ASIGNAR CADENA CLASS COMA CORCHETE_DER CORCHETE_IZQ DEFINE DIVIDIR DOBLE_DOS_PUNTOS ECHO ELSE ELSEIF FLECHA FOR FOREACH FUNCION FUNCTION IDENTIFICADOR IF IGUAL LLAVE_DER LLAVE_IZQ MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MULTIPLICAR NEW NO_IGUAL NUMERO PAREN_DER PAREN_IZQ PRINT PRIVATE PROTECTED PUBLIC PUNTO PUNTO_COMA READLINE RETURN TAG_FIN TAG_INICIO VARIABLE WHILEprograma : TAG_INICIO sentencias TAG_FIN\n                | TAG_INICIO sentenciassentencias : sentencia\n                  | sentencias sentenciasentencia : asignacion\n                 | declaracion_define\n                 | sentencia_echo\n                 | asignacion_array\n                 | sentencia_ifasignacion : VARIABLE ASIGNAR expresion PUNTO_COMAasignacion_array : VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMAdeclaracion_define : DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMAsentencia_echo : ECHO expresion PUNTO_COMAsentencia_if : IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DERcondicion : expresion IGUAL expresion\n                 | expresion NO_IGUAL expresion\n                 | expresion MAYOR expresion\n                 | expresion MENOR expresion\n                 | expresion MAYOR_IGUAL expresion\n                 | expresion MENOR_IGUAL expresionexpresion : expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion MULTIPLICAR expresion\n                 | expresion DIVIDIR expresionexpresion : PAREN_IZQ expresion PAREN_DERexpresion : NUMERO\n                 | CADENA\n                 | VARIABLE\n                 | IDENTIFICADORexpresion : CORCHETE_IZQ CORCHETE_DERexpresion : CORCHETE_IZQ lista_elementos CORCHETE_DERlista_elementos : expresion\n                      | lista_elementos COMA expresionexpresion : VARIABLE CORCHETE_IZQ expresion CORCHETE_DER'
    
_lr_action_items = {'TAG_INICIO':([0,],[2,]),'$end':([1,3,4,5,6,7,8,9,14,15,30,42,71,74,75,],[0,-2,-3,-5,-6,-7,-8,-9,-1,-4,-13,-10,-11,-12,-14,]),'VARIABLE':([2,3,4,5,6,7,8,9,12,15,16,20,25,26,30,31,32,33,34,36,42,43,44,52,54,55,56,57,58,59,64,71,73,74,75,],[10,10,-3,-5,-6,-7,-8,-9,23,-4,23,23,23,23,-13,23,23,23,23,23,-10,23,23,23,23,23,23,23,23,23,10,-11,10,-12,-14,]),'DEFINE':([2,3,4,5,6,7,8,9,15,30,42,64,71,73,74,75,],[11,11,-3,-5,-6,-7,-8,-9,-4,-13,-10,11,-11,11,-12,-14,]),'ECHO':([2,3,4,5,6,7,8,9,15,30,42,64,71,73,74,75,],[12,12,-3,-5,-6,-7,-8,-9,-4,-13,-10,12,-11,12,-12,-14,]),'IF':([2,3,4,5,6,7,8,9,15,30,42,64,71,73,74,75,],[13,13,-3,-5,-6,-7,-8,-9,-4,-13,-10,13,-11,13,-12,-14,]),'TAG_FIN':([3,4,5,6,7,8,9,15,30,42,71,74,75,],[14,-3,-5,-6,-7,-8,-9,-4,-13,-10,-11,-12,-14,]),'LLAVE_DER':([4,5,6,7,8,9,15,30,42,71,73,74,75,],[-3,-5,-6,-7,-8,-9,-4,-13,-10,-11,75,-12,-14,]),'ASIGNAR':([10,28,],[16,43,]),'CORCHETE_IZQ':([10,12,16,20,23,25,26,31,32,33,34,36,43,44,52,54,55,56,57,58,59,],[17,25,25,25,36,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'PAREN_IZQ':([11,12,13,16,20,25,26,31,32,33,34,36,43,44,52,54,55,56,57,58,59,],[18,20,26,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'NUMERO':([12,16,20,25,26,31,32,33,34,36,43,44,52,54,55,56,57,58,59,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'CADENA':([12,16,18,20,25,26,31,32,33,34,36,43,44,52,54,55,56,57,58,59,],[22,22,29,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'IDENTIFICADOR':([12,16,20,25,26,31,32,33,34,36,43,44,52,54,55,56,57,58,59,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'CORCHETE_DER':([17,21,22,23,24,25,37,38,39,45,46,47,48,49,50,51,62,63,],[28,-26,-27,-28,-29,37,-30,51,-32,-21,-22,-23,-24,-25,62,-31,-34,-33,]),'PUNTO_COMA':([19,21,22,23,24,27,37,45,46,47,48,49,51,60,62,72,],[30,-26,-27,-28,-29,42,-30,-21,-22,-23,-24,-25,-31,71,-34,74,]),'MAS':([19,21,22,23,24,27,35,37,39,41,45,46,47,48,49,50,51,60,61,62,63,65,66,67,68,69,70,],[31,-26,-27,-28,-29,31,31,-30,31,31,31,31,31,31,-25,31,-31,31,31,-34,31,31,31,31,31,31,31,]),'MENOS':([19,21,22,23,24,27,35,37,39,41,45,46,47,48,49,50,51,60,61,62,63,65,66,67,68,69,70,],[32,-26,-27,-28,-29,32,32,-30,32,32,32,32,32,32,-25,32,-31,32,32,-34,32,32,32,32,32,32,32,]),'MULTIPLICAR':([19,21,22,23,24,27,35,37,39,41,45,46,47,48,49,50,51,60,61,62,63,65,66,67,68,69,70,],[33,-26,-27,-28,-29,33,33,-30,33,33,33,33,33,33,-25,33,-31,33,33,-34,33,33,33,33,33,33,33,]),'DIVIDIR':([19,21,22,23,24,27,35,37,39,41,45,46,47,48,49,50,51,60,61,62,63,65,66,67,68,69,70,],[34,-26,-27,-28,-29,34,34,-30,34,34,34,34,34,34,-25,34,-31,34,34,-34,34,34,34,34,34,34,34,]),'PAREN_DER':([21,22,23,24,35,37,40,45,46,47,48,49,51,61,62,65,66,67,68,69,70,],[-26,-27,-28,-29,49,-30,53,-21,-22,-23,-24,-25,-31,72,-34,-15,-16,-17,-18,-19,-20,]),'COMA':([21,22,23,24,29,37,38,39,45,46,47,48,49,51,62,63,],[-26,-27,-28,-29,44,-30,52,-32,-21,-22,-23,-24,-25,-31,-34,-33,]),'IGUAL':([21,22,23,24,37,41,45,46,47,48,49,51,62,],[-26,-27,-28,-29,-30,54,-21,-22,-23,-24,-25,-31,-34,]),'NO_IGUAL':([21,22,23,24,37,41,45,46,47,48,49,51,62,],[-26,-27,-28,-29,-30,55,-21,-22,-23,-24,-25,-31,-34,]),'MAYOR':([21,22,23,24,37,41,45,46,47,48,49,51,62,],[-26,-27,-28,-29,-30,56,-21,-22,-23,-24,-25,-31,-34,]),'MENOR':([21,22,23,24,37,41,45,46,47,48,49,51,62,],[-26,-27,-28,-29,-30,57,-21,-22,-23,-24,-25,-31,-34,]),'MAYOR_IGUAL':([21,22,23,24,37,41,45,46,47,48,49,51,62,],[-26,-27,-28,-29,-30,58,-21,-22,-23,-24,-25,-31,-34,]),'MENOR_IGUAL':([21,22,23,24,37,41,45,46,47,48,49,51,62,],[-26,-27,-28,-29,-30,59,-21,-22,-23,-24,-25,-31,-34,]),'LLAVE_IZQ':([53,],[64,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,64,],[3,73,]),'sentencia':([2,3,64,73,],[4,15,4,15,]),'asignacion':([2,3,64,73,],[5,5,5,5,]),'declaracion_define':([2,3,64,73,],[6,6,6,6,]),'sentencia_echo':([2,3,64,73,],[7,7,7,7,]),'asignacion_array':([2,3,64,73,],[8,8,8,8,]),'sentencia_if':([2,3,64,73,],[9,9,9,9,]),'expresion':([12,16,20,25,26,31,32,33,34,36,43,44,52,54,55,56,57,58,59,],[19,27,35,39,41,45,46,47,48,50,60,61,63,65,66,67,68,69,70,]),'lista_elementos':([25,],[38,]),'condicion':([26,],[40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> TAG_INICIO sentencias TAG_FIN','programa',3,'p_programa','parser.py',14),
  ('programa -> TAG_INICIO sentencias','programa',2,'p_programa','parser.py',15),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','parser.py',23),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_sentencias','parser.py',24),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','parser.py',33),
  ('sentencia -> declaracion_define','sentencia',1,'p_sentencia','parser.py',34),
  ('sentencia -> sentencia_echo','sentencia',1,'p_sentencia','parser.py',35),
  ('sentencia -> asignacion_array','sentencia',1,'p_sentencia','parser.py',36),
  ('sentencia -> sentencia_if','sentencia',1,'p_sentencia','parser.py',37),
  ('asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA','asignacion',4,'p_asignacion','parser.py',42),
  ('asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA','asignacion_array',6,'p_asignacion_array','parser.py',47),
  ('declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA','declaracion_define',7,'p_declaracion_define','parser.py',52),
  ('sentencia_echo -> ECHO expresion PUNTO_COMA','sentencia_echo',3,'p_sentencia_echo','parser.py',57),
  ('sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_if',7,'p_sentencia_if','parser.py',62),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion','parser.py',67),
  ('condicion -> expresion NO_IGUAL expresion','condicion',3,'p_condicion','parser.py',68),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion','parser.py',69),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion','parser.py',70),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion','parser.py',71),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion','parser.py',72),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','parser.py',77),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','parser.py',78),
  ('expresion -> expresion MULTIPLICAR expresion','expresion',3,'p_expresion_binaria','parser.py',79),
  ('expresion -> expresion DIVIDIR expresion','expresion',3,'p_expresion_binaria','parser.py',80),
  ('expresion -> PAREN_IZQ expresion PAREN_DER','expresion',3,'p_expresion_parentesis','parser.py',84),
  ('expresion -> NUMERO','expresion',1,'p_expresion_simple','parser.py',88),
  ('expresion -> CADENA','expresion',1,'p_expresion_simple','parser.py',89),
  ('expresion -> VARIABLE','expresion',1,'p_expresion_simple','parser.py',90),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_simple','parser.py',91),
  ('expresion -> CORCHETE_IZQ CORCHETE_DER','expresion',2,'p_expresion_array_vacio','parser.py',96),
  ('expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER','expresion',3,'p_expresion_array','parser.py',101),
  ('lista_elementos -> expresion','lista_elementos',1,'p_lista_elementos','parser.py',105),
  ('lista_elementos -> lista_elementos COMA expresion','lista_elementos',3,'p_lista_elementos','parser.py',106),
  ('expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER','expresion',4,'p_expresion_acceso_array','parser.py',115),
]
