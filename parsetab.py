
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaARRAY_ASOCIATIVO AS ASIGNAR CADENA CLASS COMA CORCHETE_DER CORCHETE_IZQ DEFINE DIVIDIR DOBLE_DOS_PUNTOS ECHO ELSE ELSEIF FLECHA FOR FOREACH FUNCION FUNCTION IDENTIFICADOR IF IGUAL LLAVE_DER LLAVE_IZQ MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MULTIPLICAR NEW NO_IGUAL NUMERO PAREN_DER PAREN_IZQ PRINT PRIVATE PROTECTED PUBLIC PUNTO PUNTO_COMA READLINE RETURN TAG_FIN TAG_INICIO VARIABLE WHILEprograma : TAG_INICIO sentencias TAG_FIN\n                | TAG_INICIO sentenciassentencias : sentencia\n                  | sentencias sentenciasentencia : asignacion\n                 | declaracion_define\n                 | sentencia_echo\n                 | asignacion_array\n                 | sentencia_if\n                 | sentencia_foreach\n                 | sentencia_funcion\n                 | sentencia_return\n                 | sentencia_llamada_funcion\n                 | sentencia_incremento\n                 | sentencia_comentariosentencia_foreach : FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER\n                         | FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DERsentencia_funcion : FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DERparametros_funcion : VARIABLE\n                         | parametros_funcion COMA VARIABLE\n                         | sentencia_return : RETURN expresion PUNTO_COMAsentencia_llamada_funcion : IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMAlista_argumentos : expresion\n                       | lista_argumentos COMA expresion\n                       | expresion : VARIABLE CORCHETE_IZQ CADENA CORCHETE_DERsentencia_incremento : VARIABLE MAS MAS PUNTO_COMAexpresion : expresion PUNTO expresionsentencia_comentario : asignacion : VARIABLE ASIGNAR expresion PUNTO_COMAasignacion_array : VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMAdeclaracion_define : DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMAsentencia_echo : ECHO expresion PUNTO_COMAsentencia_if : IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DERcondicion : expresion IGUAL expresion\n                 | expresion NO_IGUAL expresion\n                 | expresion MAYOR expresion\n                 | expresion MENOR expresion\n                 | expresion MAYOR_IGUAL expresion\n                 | expresion MENOR_IGUAL expresionexpresion : expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion MULTIPLICAR expresion\n                 | expresion DIVIDIR expresionexpresion : PAREN_IZQ expresion PAREN_DERexpresion : NUMERO\n                 | CADENA\n                 | VARIABLE\n                 | IDENTIFICADORexpresion : CORCHETE_IZQ CORCHETE_DERexpresion : CORCHETE_IZQ lista_elementos CORCHETE_DERlista_elementos : expresion\n                      | lista_elementos COMA expresionexpresion : VARIABLE CORCHETE_IZQ expresion CORCHETE_DER'
    
_lr_action_items = {'TAG_INICIO':([0,],[2,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,24,25,46,63,64,66,106,108,115,116,122,123,125,],[0,-30,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-1,-4,-34,-22,-31,-28,-23,-32,-33,-35,-18,-17,-16,]),'VARIABLE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,23,25,26,32,34,37,38,40,46,47,48,49,50,51,52,60,63,64,65,66,67,76,79,80,81,82,83,84,85,89,95,103,105,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[16,16,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,31,31,-4,31,31,31,31,59,31,-34,31,31,31,31,31,31,87,-22,-31,31,-28,31,31,31,31,31,31,31,31,102,31,16,112,114,-23,-32,16,16,-33,-35,16,16,16,16,-18,-17,16,-16,]),'DEFINE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,63,64,66,95,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-34,-22,-31,-28,17,-23,-32,17,17,-33,-35,17,17,17,17,-18,-17,17,-16,]),'ECHO':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,63,64,66,95,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-34,-22,-31,-28,18,-23,-32,18,18,-33,-35,18,18,18,18,-18,-17,18,-16,]),'IF':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,63,64,66,95,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-34,-22,-31,-28,19,-23,-32,19,19,-33,-35,19,19,19,19,-18,-17,19,-16,]),'FOREACH':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,63,64,66,95,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-34,-22,-31,-28,20,-23,-32,20,20,-33,-35,20,20,20,20,-18,-17,20,-16,]),'FUNCTION':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,63,64,66,95,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-34,-22,-31,-28,21,-23,-32,21,21,-33,-35,21,21,21,21,-18,-17,21,-16,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,63,64,66,95,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[23,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-34,-22,-31,-28,23,-23,-32,23,23,-33,-35,23,23,23,23,-18,-17,23,-16,]),'IDENTIFICADOR':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,21,23,25,26,32,34,37,40,46,47,48,49,50,51,52,63,64,65,66,67,76,79,80,81,82,83,84,89,95,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,36,39,36,-4,36,36,36,36,36,-34,36,36,36,36,36,36,-22,-31,36,-28,36,36,36,36,36,36,36,36,36,22,-23,-32,22,22,-33,-35,22,22,22,22,-18,-17,22,-16,]),'TAG_FIN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,25,46,63,64,66,106,108,115,116,122,123,125,],[-30,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-34,-22,-31,-28,-23,-32,-33,-35,-18,-17,-16,]),'LLAVE_DER':([4,5,6,7,8,9,10,11,12,13,14,15,25,46,63,64,66,95,106,108,110,113,115,116,117,119,120,121,122,123,124,125,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-4,-34,-22,-31,-28,-30,-23,-32,116,-30,-33,-35,-30,122,123,-30,-18,-17,125,-16,]),'ASIGNAR':([16,43,85,],[26,65,103,]),'CORCHETE_IZQ':([16,18,23,26,31,32,34,37,40,47,48,49,50,51,52,65,67,76,79,80,81,82,83,84,89,],[27,32,32,32,52,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'MAS':([16,28,30,31,33,35,36,41,42,53,55,56,58,62,68,69,70,71,72,73,74,75,77,90,91,92,93,94,96,97,98,99,100,101,107,],[28,44,48,-49,-48,-47,-50,48,48,-51,48,48,48,48,48,48,48,48,48,-48,48,-52,-46,48,48,-27,-55,48,48,48,48,48,48,48,48,]),'PAREN_IZQ':([17,18,19,20,22,23,26,32,34,37,39,40,47,48,49,50,51,52,65,67,76,79,80,81,82,83,84,89,],[29,34,37,38,40,34,34,34,34,34,60,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'NUMERO':([18,23,26,32,34,37,40,47,48,49,50,51,52,65,67,76,79,80,81,82,83,84,89,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'CADENA':([18,23,26,29,32,34,37,40,47,48,49,50,51,52,65,67,76,79,80,81,82,83,84,89,],[33,33,33,45,33,33,33,33,33,33,33,33,33,73,33,33,33,33,33,33,33,33,33,33,]),'CORCHETE_DER':([27,31,32,33,35,36,53,54,55,68,69,70,71,72,73,74,75,77,92,93,94,],[43,-49,53,-48,-47,-50,-51,75,-53,-29,-42,-43,-44,-45,92,93,-52,-46,-27,-55,-54,]),'PUNTO_COMA':([30,31,33,35,36,41,42,44,53,68,69,70,71,72,75,77,88,90,92,93,109,],[46,-49,-48,-47,-50,63,64,66,-51,-29,-42,-43,-44,-45,-52,-46,106,108,-27,-55,115,]),'PUNTO':([30,31,33,35,36,41,42,53,55,56,58,62,68,69,70,71,72,73,74,75,77,90,91,92,93,94,96,97,98,99,100,101,107,],[47,-49,-48,-47,-50,47,47,-51,47,47,47,47,47,47,47,47,47,-48,47,-52,-46,47,47,-27,-55,47,47,47,47,47,47,47,47,]),'MENOS':([30,31,33,35,36,41,42,53,55,56,58,62,68,69,70,71,72,73,74,75,77,90,91,92,93,94,96,97,98,99,100,101,107,],[49,-49,-48,-47,-50,49,49,-51,49,49,49,49,49,49,49,49,49,-48,49,-52,-46,49,49,-27,-55,49,49,49,49,49,49,49,49,]),'MULTIPLICAR':([30,31,33,35,36,41,42,53,55,56,58,62,68,69,70,71,72,73,74,75,77,90,91,92,93,94,96,97,98,99,100,101,107,],[50,-49,-48,-47,-50,50,50,-51,50,50,50,50,50,50,50,50,50,-48,50,-52,-46,50,50,-27,-55,50,50,50,50,50,50,50,50,]),'DIVIDIR':([30,31,33,35,36,41,42,53,55,56,58,62,68,69,70,71,72,73,74,75,77,90,91,92,93,94,96,97,98,99,100,101,107,],[51,-49,-48,-47,-50,51,51,-51,51,51,51,51,51,51,51,51,51,-48,51,-52,-46,51,51,-27,-55,51,51,51,51,51,51,51,51,]),'COMA':([31,33,35,36,40,45,53,54,55,60,61,62,68,69,70,71,72,75,77,86,87,92,93,94,107,114,],[-49,-48,-47,-50,-26,67,-51,76,-53,-21,89,-24,-29,-42,-43,-44,-45,-52,-46,105,-19,-27,-55,-54,-25,-20,]),'PAREN_DER':([31,33,35,36,40,53,56,57,60,61,62,68,69,70,71,72,75,77,86,87,91,92,93,96,97,98,99,100,101,102,107,112,114,],[-49,-48,-47,-50,-26,-51,77,78,-21,88,-24,-29,-42,-43,-44,-45,-52,-46,104,-19,109,-27,-55,-36,-37,-38,-39,-40,-41,111,-25,118,-20,]),'IGUAL':([31,33,35,36,53,58,68,69,70,71,72,75,77,92,93,],[-49,-48,-47,-50,-51,79,-29,-42,-43,-44,-45,-52,-46,-27,-55,]),'NO_IGUAL':([31,33,35,36,53,58,68,69,70,71,72,75,77,92,93,],[-49,-48,-47,-50,-51,80,-29,-42,-43,-44,-45,-52,-46,-27,-55,]),'MAYOR':([31,33,35,36,53,58,68,69,70,71,72,75,77,92,93,],[-49,-48,-47,-50,-51,81,-29,-42,-43,-44,-45,-52,-46,-27,-55,]),'MENOR':([31,33,35,36,53,58,68,69,70,71,72,75,77,92,93,],[-49,-48,-47,-50,-51,82,-29,-42,-43,-44,-45,-52,-46,-27,-55,]),'MAYOR_IGUAL':([31,33,35,36,53,58,68,69,70,71,72,75,77,92,93,],[-49,-48,-47,-50,-51,83,-29,-42,-43,-44,-45,-52,-46,-27,-55,]),'MENOR_IGUAL':([31,33,35,36,53,58,68,69,70,71,72,75,77,92,93,],[-49,-48,-47,-50,-51,84,-29,-42,-43,-44,-45,-52,-46,-27,-55,]),'AS':([59,],[85,]),'LLAVE_IZQ':([78,104,111,118,],[95,113,117,121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,95,113,117,121,],[3,110,119,120,124,]),'sentencia':([2,3,95,110,113,117,119,120,121,124,],[4,25,4,25,4,4,25,25,4,25,]),'asignacion':([2,3,95,110,113,117,119,120,121,124,],[5,5,5,5,5,5,5,5,5,5,]),'declaracion_define':([2,3,95,110,113,117,119,120,121,124,],[6,6,6,6,6,6,6,6,6,6,]),'sentencia_echo':([2,3,95,110,113,117,119,120,121,124,],[7,7,7,7,7,7,7,7,7,7,]),'asignacion_array':([2,3,95,110,113,117,119,120,121,124,],[8,8,8,8,8,8,8,8,8,8,]),'sentencia_if':([2,3,95,110,113,117,119,120,121,124,],[9,9,9,9,9,9,9,9,9,9,]),'sentencia_foreach':([2,3,95,110,113,117,119,120,121,124,],[10,10,10,10,10,10,10,10,10,10,]),'sentencia_funcion':([2,3,95,110,113,117,119,120,121,124,],[11,11,11,11,11,11,11,11,11,11,]),'sentencia_return':([2,3,95,110,113,117,119,120,121,124,],[12,12,12,12,12,12,12,12,12,12,]),'sentencia_llamada_funcion':([2,3,95,110,113,117,119,120,121,124,],[13,13,13,13,13,13,13,13,13,13,]),'sentencia_incremento':([2,3,95,110,113,117,119,120,121,124,],[14,14,14,14,14,14,14,14,14,14,]),'sentencia_comentario':([2,3,95,110,113,117,119,120,121,124,],[15,15,15,15,15,15,15,15,15,15,]),'expresion':([18,23,26,32,34,37,40,47,48,49,50,51,52,65,67,76,79,80,81,82,83,84,89,],[30,41,42,55,56,58,62,68,69,70,71,72,74,90,91,94,96,97,98,99,100,101,107,]),'lista_elementos':([32,],[54,]),'condicion':([37,],[57,]),'lista_argumentos':([40,],[61,]),'parametros_funcion':([60,],[86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> TAG_INICIO sentencias TAG_FIN','programa',3,'p_programa','parser.py',14),
  ('programa -> TAG_INICIO sentencias','programa',2,'p_programa','parser.py',15),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','parser.py',23),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_sentencias','parser.py',24),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','parser.py',33),
  ('sentencia -> declaracion_define','sentencia',1,'p_sentencia','parser.py',34),
  ('sentencia -> sentencia_echo','sentencia',1,'p_sentencia','parser.py',35),
  ('sentencia -> asignacion_array','sentencia',1,'p_sentencia','parser.py',36),
  ('sentencia -> sentencia_if','sentencia',1,'p_sentencia','parser.py',37),
  ('sentencia -> sentencia_foreach','sentencia',1,'p_sentencia','parser.py',38),
  ('sentencia -> sentencia_funcion','sentencia',1,'p_sentencia','parser.py',39),
  ('sentencia -> sentencia_return','sentencia',1,'p_sentencia','parser.py',40),
  ('sentencia -> sentencia_llamada_funcion','sentencia',1,'p_sentencia','parser.py',41),
  ('sentencia -> sentencia_incremento','sentencia',1,'p_sentencia','parser.py',42),
  ('sentencia -> sentencia_comentario','sentencia',1,'p_sentencia','parser.py',43),
  ('sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS ASIGNAR VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_foreach',10,'p_sentencia_foreach','parser.py',48),
  ('sentencia_foreach -> FOREACH PAREN_IZQ VARIABLE AS VARIABLE PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_foreach',9,'p_sentencia_foreach','parser.py',49),
  ('sentencia_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros_funcion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_funcion',8,'p_sentencia_funcion','parser.py',57),
  ('parametros_funcion -> VARIABLE','parametros_funcion',1,'p_parametros_funcion','parser.py',61),
  ('parametros_funcion -> parametros_funcion COMA VARIABLE','parametros_funcion',3,'p_parametros_funcion','parser.py',62),
  ('parametros_funcion -> <empty>','parametros_funcion',0,'p_parametros_funcion','parser.py',63),
  ('sentencia_return -> RETURN expresion PUNTO_COMA','sentencia_return',3,'p_sentencia_return','parser.py',73),
  ('sentencia_llamada_funcion -> IDENTIFICADOR PAREN_IZQ lista_argumentos PAREN_DER PUNTO_COMA','sentencia_llamada_funcion',5,'p_sentencia_llamada_funcion','parser.py',78),
  ('lista_argumentos -> expresion','lista_argumentos',1,'p_lista_argumentos','parser.py',82),
  ('lista_argumentos -> lista_argumentos COMA expresion','lista_argumentos',3,'p_lista_argumentos','parser.py',83),
  ('lista_argumentos -> <empty>','lista_argumentos',0,'p_lista_argumentos','parser.py',84),
  ('expresion -> VARIABLE CORCHETE_IZQ CADENA CORCHETE_DER','expresion',4,'p_expresion_acceso_array_asociativo','parser.py',95),
  ('sentencia_incremento -> VARIABLE MAS MAS PUNTO_COMA','sentencia_incremento',4,'p_sentencia_incremento','parser.py',100),
  ('expresion -> expresion PUNTO expresion','expresion',3,'p_expresion_concatenacion','parser.py',105),
  ('sentencia_comentario -> <empty>','sentencia_comentario',0,'p_sentencia_comentario','parser.py',110),
  ('asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA','asignacion',4,'p_asignacion','parser.py',115),
  ('asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA','asignacion_array',6,'p_asignacion_array','parser.py',120),
  ('declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA','declaracion_define',7,'p_declaracion_define','parser.py',125),
  ('sentencia_echo -> ECHO expresion PUNTO_COMA','sentencia_echo',3,'p_sentencia_echo','parser.py',130),
  ('sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_if',7,'p_sentencia_if','parser.py',135),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion','parser.py',140),
  ('condicion -> expresion NO_IGUAL expresion','condicion',3,'p_condicion','parser.py',141),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion','parser.py',142),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion','parser.py',143),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion','parser.py',144),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion','parser.py',145),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','parser.py',150),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','parser.py',151),
  ('expresion -> expresion MULTIPLICAR expresion','expresion',3,'p_expresion_binaria','parser.py',152),
  ('expresion -> expresion DIVIDIR expresion','expresion',3,'p_expresion_binaria','parser.py',153),
  ('expresion -> PAREN_IZQ expresion PAREN_DER','expresion',3,'p_expresion_parentesis','parser.py',157),
  ('expresion -> NUMERO','expresion',1,'p_expresion_simple','parser.py',161),
  ('expresion -> CADENA','expresion',1,'p_expresion_simple','parser.py',162),
  ('expresion -> VARIABLE','expresion',1,'p_expresion_simple','parser.py',163),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_simple','parser.py',164),
  ('expresion -> CORCHETE_IZQ CORCHETE_DER','expresion',2,'p_expresion_array_vacio','parser.py',169),
  ('expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER','expresion',3,'p_expresion_array','parser.py',174),
  ('lista_elementos -> expresion','lista_elementos',1,'p_lista_elementos','parser.py',178),
  ('lista_elementos -> lista_elementos COMA expresion','lista_elementos',3,'p_lista_elementos','parser.py',179),
  ('expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER','expresion',4,'p_expresion_acceso_array','parser.py',188),
]
