
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaARRAY_ASOCIATIVO AS ASIGNAR CADENA CLASS COMA CORCHETE_DER CORCHETE_IZQ DEFINE DIVIDIR DOBLE_DOS_PUNTOS ECHO ELSE ELSEIF FLECHA FOR FOREACH FUNCTION IDENTIFICADOR IF IGUAL LLAVE_DER LLAVE_IZQ MAS MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MULTIPLICAR NEW NO_IGUAL NUMERO PAREN_DER PAREN_IZQ PRINT PRIVATE PROTECTED PUBLIC PUNTO PUNTO_COMA READLINE RETURN TAG_FIN TAG_INICIO VARIABLE WHILEprograma : TAG_INICIO sentencias TAG_FIN\n| TAG_INICIO sentenciassentencias : sentencia\n| sentencias sentenciasentencia : asignacion\n| declaracion_define\n| sentencia_echo\n| asignacion_array\n| sentencia_if\n| definicion_funcion\n| llamada_funcion\n| sentencia_returnasignacion : VARIABLE ASIGNAR expresion PUNTO_COMAasignacion_array : VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMAdeclaracion_define : DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMAsentencia_echo : ECHO expresion PUNTO_COMAsentencia_if : IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DERdefinicion_funcion : FUNCTION IDENTIFICADOR PAREN_IZQ parametros PAREN_DER LLAVE_IZQ sentencias LLAVE_DER\n| FUNCTION IDENTIFICADOR PAREN_IZQ PAREN_DER LLAVE_IZQ sentencias LLAVE_DERparametros : VARIABLE\n| parametros COMA VARIABLEllamada_funcion : IDENTIFICADOR PAREN_IZQ argumentos PAREN_DER PUNTO_COMA\n| IDENTIFICADOR PAREN_IZQ PAREN_DER PUNTO_COMAargumentos : expresion\n| argumentos COMA expresionsentencia_return : RETURN expresion PUNTO_COMA\n| RETURN PUNTO_COMAexpresion : IDENTIFICADOR PAREN_IZQ argumentos PAREN_DER\n| IDENTIFICADOR PAREN_IZQ PAREN_DERcondicion : expresion IGUAL expresion\n| expresion NO_IGUAL expresion\n| expresion MAYOR expresion\n| expresion MENOR expresion\n| expresion MAYOR_IGUAL expresion\n| expresion MENOR_IGUAL expresionexpresion : expresion MAS expresion\n| expresion MENOS expresion\n| expresion MULTIPLICAR expresion\n| expresion DIVIDIR expresionexpresion : PAREN_IZQ expresion PAREN_DERexpresion : NUMERO\n| CADENA\n| VARIABLE\n| IDENTIFICADORexpresion : CORCHETE_IZQ CORCHETE_DERexpresion : CORCHETE_IZQ lista_elementos CORCHETE_DERlista_elementos : expresion\n| lista_elementos COMA expresionexpresion : VARIABLE CORCHETE_IZQ expresion CORCHETE_DER'
    
_lr_action_items = {'TAG_INICIO':([0,],[2,]),'$end':([1,3,4,5,6,7,8,9,10,11,12,20,21,36,40,57,58,83,99,101,107,108,110,111,],[0,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-1,-4,-27,-16,-26,-13,-23,-22,-14,-15,-17,-19,-18,]),'VARIABLE':([2,3,4,5,6,7,8,9,10,11,12,15,19,21,22,27,31,32,34,36,40,41,42,43,44,45,47,53,57,58,59,60,70,72,73,74,75,76,77,82,83,89,97,98,99,101,103,104,106,107,108,109,110,111,],[13,13,-3,-5,-6,-7,-8,-9,-10,-11,-12,30,30,-4,30,30,30,30,30,-27,-16,30,30,30,30,30,30,80,-26,-13,30,30,30,30,30,30,30,30,30,30,-23,13,105,13,-22,-14,13,13,13,-15,-17,13,-19,-18,]),'DEFINE':([2,3,4,5,6,7,8,9,10,11,12,21,36,40,57,58,83,89,98,99,101,103,104,106,107,108,109,110,111,],[14,14,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-27,-16,-26,-13,-23,14,14,-22,-14,14,14,14,-15,-17,14,-19,-18,]),'ECHO':([2,3,4,5,6,7,8,9,10,11,12,21,36,40,57,58,83,89,98,99,101,103,104,106,107,108,109,110,111,],[15,15,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-27,-16,-26,-13,-23,15,15,-22,-14,15,15,15,-15,-17,15,-19,-18,]),'IF':([2,3,4,5,6,7,8,9,10,11,12,21,36,40,57,58,83,89,98,99,101,103,104,106,107,108,109,110,111,],[16,16,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-27,-16,-26,-13,-23,16,16,-22,-14,16,16,16,-15,-17,16,-19,-18,]),'FUNCTION':([2,3,4,5,6,7,8,9,10,11,12,21,36,40,57,58,83,89,98,99,101,103,104,106,107,108,109,110,111,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-27,-16,-26,-13,-23,17,17,-22,-14,17,17,17,-15,-17,17,-19,-18,]),'IDENTIFICADOR':([2,3,4,5,6,7,8,9,10,11,12,15,17,19,21,22,27,31,32,34,36,40,41,42,43,44,45,47,57,58,59,60,70,72,73,74,75,76,77,82,83,89,98,99,101,103,104,106,107,108,109,110,111,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,26,33,26,-4,26,26,26,26,26,-27,-16,26,26,26,26,26,26,-26,-13,26,26,26,26,26,26,26,26,26,26,-23,18,18,-22,-14,18,18,18,-15,-17,18,-19,-18,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,21,36,40,57,58,83,89,98,99,101,103,104,106,107,108,109,110,111,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-27,-16,-26,-13,-23,19,19,-22,-14,19,19,19,-15,-17,19,-19,-18,]),'TAG_FIN':([3,4,5,6,7,8,9,10,11,12,21,36,40,57,58,83,99,101,107,108,110,111,],[20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-27,-16,-26,-13,-23,-22,-14,-15,-17,-19,-18,]),'LLAVE_DER':([4,5,6,7,8,9,10,11,12,21,36,40,57,58,83,99,101,103,106,107,108,109,110,111,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-4,-27,-16,-26,-13,-23,-22,-14,108,110,-15,-17,111,-19,-18,]),'ASIGNAR':([13,38,],[22,59,]),'CORCHETE_IZQ':([13,15,19,22,27,30,31,32,34,41,42,43,44,45,47,59,60,70,72,73,74,75,76,77,82,],[23,31,31,31,31,47,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PAREN_IZQ':([14,15,16,18,19,22,26,27,31,32,33,34,41,42,43,44,45,47,59,60,70,72,73,74,75,76,77,82,],[24,27,32,34,27,27,45,27,27,27,53,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'NUMERO':([15,19,22,27,31,32,34,41,42,43,44,45,47,59,60,70,72,73,74,75,76,77,82,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'CADENA':([15,19,22,24,27,31,32,34,41,42,43,44,45,47,59,60,70,72,73,74,75,76,77,82,],[29,29,29,39,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'PUNTO_COMA':([19,25,26,28,29,30,35,37,48,55,61,62,63,64,66,67,69,81,84,86,87,102,],[36,40,-44,-41,-42,-43,57,58,-45,83,-36,-37,-38,-39,-29,-40,-46,99,101,-28,-49,107,]),'CORCHETE_DER':([23,26,28,29,30,31,48,49,50,61,62,63,64,66,67,68,69,86,87,88,],[38,-44,-41,-42,-43,48,-45,69,-47,-36,-37,-38,-39,-29,-40,87,-46,-28,-49,-48,]),'MAS':([25,26,28,29,30,35,37,46,48,50,52,56,61,62,63,64,66,67,68,69,84,85,86,87,88,90,91,92,93,94,95,100,],[41,-44,-41,-42,-43,41,41,41,-45,41,41,41,41,41,41,41,-29,-40,41,-46,41,41,-28,-49,41,41,41,41,41,41,41,41,]),'MENOS':([25,26,28,29,30,35,37,46,48,50,52,56,61,62,63,64,66,67,68,69,84,85,86,87,88,90,91,92,93,94,95,100,],[42,-44,-41,-42,-43,42,42,42,-45,42,42,42,42,42,42,42,-29,-40,42,-46,42,42,-28,-49,42,42,42,42,42,42,42,42,]),'MULTIPLICAR':([25,26,28,29,30,35,37,46,48,50,52,56,61,62,63,64,66,67,68,69,84,85,86,87,88,90,91,92,93,94,95,100,],[43,-44,-41,-42,-43,43,43,43,-45,43,43,43,43,43,43,43,-29,-40,43,-46,43,43,-28,-49,43,43,43,43,43,43,43,43,]),'DIVIDIR':([25,26,28,29,30,35,37,46,48,50,52,56,61,62,63,64,66,67,68,69,84,85,86,87,88,90,91,92,93,94,95,100,],[44,-44,-41,-42,-43,44,44,44,-45,44,44,44,44,44,44,44,-29,-40,44,-46,44,44,-28,-49,44,44,44,44,44,44,44,44,]),'PAREN_DER':([26,28,29,30,34,45,46,48,51,53,54,56,61,62,63,64,65,66,67,69,78,80,85,86,87,90,91,92,93,94,95,100,105,],[-44,-41,-42,-43,55,66,67,-45,71,79,81,-24,-36,-37,-38,-39,86,-29,-40,-46,96,-20,102,-28,-49,-30,-31,-32,-33,-34,-35,-25,-21,]),'COMA':([26,28,29,30,39,48,49,50,54,56,61,62,63,64,65,66,67,69,78,80,86,87,88,100,105,],[-44,-41,-42,-43,60,-45,70,-47,82,-24,-36,-37,-38,-39,82,-29,-40,-46,97,-20,-28,-49,-48,-25,-21,]),'IGUAL':([26,28,29,30,48,52,61,62,63,64,66,67,69,86,87,],[-44,-41,-42,-43,-45,72,-36,-37,-38,-39,-29,-40,-46,-28,-49,]),'NO_IGUAL':([26,28,29,30,48,52,61,62,63,64,66,67,69,86,87,],[-44,-41,-42,-43,-45,73,-36,-37,-38,-39,-29,-40,-46,-28,-49,]),'MAYOR':([26,28,29,30,48,52,61,62,63,64,66,67,69,86,87,],[-44,-41,-42,-43,-45,74,-36,-37,-38,-39,-29,-40,-46,-28,-49,]),'MENOR':([26,28,29,30,48,52,61,62,63,64,66,67,69,86,87,],[-44,-41,-42,-43,-45,75,-36,-37,-38,-39,-29,-40,-46,-28,-49,]),'MAYOR_IGUAL':([26,28,29,30,48,52,61,62,63,64,66,67,69,86,87,],[-44,-41,-42,-43,-45,76,-36,-37,-38,-39,-29,-40,-46,-28,-49,]),'MENOR_IGUAL':([26,28,29,30,48,52,61,62,63,64,66,67,69,86,87,],[-44,-41,-42,-43,-45,77,-36,-37,-38,-39,-29,-40,-46,-28,-49,]),'LLAVE_IZQ':([71,79,96,],[89,98,104,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,89,98,104,],[3,103,106,109,]),'sentencia':([2,3,89,98,103,104,106,109,],[4,21,4,4,21,4,21,21,]),'asignacion':([2,3,89,98,103,104,106,109,],[5,5,5,5,5,5,5,5,]),'declaracion_define':([2,3,89,98,103,104,106,109,],[6,6,6,6,6,6,6,6,]),'sentencia_echo':([2,3,89,98,103,104,106,109,],[7,7,7,7,7,7,7,7,]),'asignacion_array':([2,3,89,98,103,104,106,109,],[8,8,8,8,8,8,8,8,]),'sentencia_if':([2,3,89,98,103,104,106,109,],[9,9,9,9,9,9,9,9,]),'definicion_funcion':([2,3,89,98,103,104,106,109,],[10,10,10,10,10,10,10,10,]),'llamada_funcion':([2,3,89,98,103,104,106,109,],[11,11,11,11,11,11,11,11,]),'sentencia_return':([2,3,89,98,103,104,106,109,],[12,12,12,12,12,12,12,12,]),'expresion':([15,19,22,27,31,32,34,41,42,43,44,45,47,59,60,70,72,73,74,75,76,77,82,],[25,35,37,46,50,52,56,61,62,63,64,56,68,84,85,88,90,91,92,93,94,95,100,]),'lista_elementos':([31,],[49,]),'condicion':([32,],[51,]),'argumentos':([34,45,],[54,65,]),'parametros':([53,],[78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> TAG_INICIO sentencias TAG_FIN','programa',3,'p_programa','parser.py',14),
  ('programa -> TAG_INICIO sentencias','programa',2,'p_programa','parser.py',15),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','parser.py',23),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_sentencias','parser.py',24),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','parser.py',33),
  ('sentencia -> declaracion_define','sentencia',1,'p_sentencia','parser.py',34),
  ('sentencia -> sentencia_echo','sentencia',1,'p_sentencia','parser.py',35),
  ('sentencia -> asignacion_array','sentencia',1,'p_sentencia','parser.py',36),
  ('sentencia -> sentencia_if','sentencia',1,'p_sentencia','parser.py',37),
  ('sentencia -> definicion_funcion','sentencia',1,'p_sentencia','parser.py',38),
  ('sentencia -> llamada_funcion','sentencia',1,'p_sentencia','parser.py',39),
  ('sentencia -> sentencia_return','sentencia',1,'p_sentencia','parser.py',40),
  ('asignacion -> VARIABLE ASIGNAR expresion PUNTO_COMA','asignacion',4,'p_asignacion','parser.py',45),
  ('asignacion_array -> VARIABLE CORCHETE_IZQ CORCHETE_DER ASIGNAR expresion PUNTO_COMA','asignacion_array',6,'p_asignacion_array','parser.py',50),
  ('declaracion_define -> DEFINE PAREN_IZQ CADENA COMA expresion PAREN_DER PUNTO_COMA','declaracion_define',7,'p_declaracion_define','parser.py',55),
  ('sentencia_echo -> ECHO expresion PUNTO_COMA','sentencia_echo',3,'p_sentencia_echo','parser.py',60),
  ('sentencia_if -> IF PAREN_IZQ condicion PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','sentencia_if',7,'p_sentencia_if','parser.py',65),
  ('definicion_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ parametros PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','definicion_funcion',8,'p_definicion_funcion','parser.py',70),
  ('definicion_funcion -> FUNCTION IDENTIFICADOR PAREN_IZQ PAREN_DER LLAVE_IZQ sentencias LLAVE_DER','definicion_funcion',7,'p_definicion_funcion','parser.py',71),
  ('parametros -> VARIABLE','parametros',1,'p_parametros','parser.py',79),
  ('parametros -> parametros COMA VARIABLE','parametros',3,'p_parametros','parser.py',80),
  ('llamada_funcion -> IDENTIFICADOR PAREN_IZQ argumentos PAREN_DER PUNTO_COMA','llamada_funcion',5,'p_llamada_funcion','parser.py',89),
  ('llamada_funcion -> IDENTIFICADOR PAREN_IZQ PAREN_DER PUNTO_COMA','llamada_funcion',4,'p_llamada_funcion','parser.py',90),
  ('argumentos -> expresion','argumentos',1,'p_argumentos','parser.py',98),
  ('argumentos -> argumentos COMA expresion','argumentos',3,'p_argumentos','parser.py',99),
  ('sentencia_return -> RETURN expresion PUNTO_COMA','sentencia_return',3,'p_sentencia_return','parser.py',108),
  ('sentencia_return -> RETURN PUNTO_COMA','sentencia_return',2,'p_sentencia_return','parser.py',109),
  ('expresion -> IDENTIFICADOR PAREN_IZQ argumentos PAREN_DER','expresion',4,'p_expresion_llamada_funcion','parser.py',117),
  ('expresion -> IDENTIFICADOR PAREN_IZQ PAREN_DER','expresion',3,'p_expresion_llamada_funcion','parser.py',118),
  ('condicion -> expresion IGUAL expresion','condicion',3,'p_condicion','parser.py',126),
  ('condicion -> expresion NO_IGUAL expresion','condicion',3,'p_condicion','parser.py',127),
  ('condicion -> expresion MAYOR expresion','condicion',3,'p_condicion','parser.py',128),
  ('condicion -> expresion MENOR expresion','condicion',3,'p_condicion','parser.py',129),
  ('condicion -> expresion MAYOR_IGUAL expresion','condicion',3,'p_condicion','parser.py',130),
  ('condicion -> expresion MENOR_IGUAL expresion','condicion',3,'p_condicion','parser.py',131),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','parser.py',136),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','parser.py',137),
  ('expresion -> expresion MULTIPLICAR expresion','expresion',3,'p_expresion_binaria','parser.py',138),
  ('expresion -> expresion DIVIDIR expresion','expresion',3,'p_expresion_binaria','parser.py',139),
  ('expresion -> PAREN_IZQ expresion PAREN_DER','expresion',3,'p_expresion_parentesis','parser.py',143),
  ('expresion -> NUMERO','expresion',1,'p_expresion_simple','parser.py',147),
  ('expresion -> CADENA','expresion',1,'p_expresion_simple','parser.py',148),
  ('expresion -> VARIABLE','expresion',1,'p_expresion_simple','parser.py',149),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_simple','parser.py',150),
  ('expresion -> CORCHETE_IZQ CORCHETE_DER','expresion',2,'p_expresion_array_vacio','parser.py',155),
  ('expresion -> CORCHETE_IZQ lista_elementos CORCHETE_DER','expresion',3,'p_expresion_array','parser.py',160),
  ('lista_elementos -> expresion','lista_elementos',1,'p_lista_elementos','parser.py',164),
  ('lista_elementos -> lista_elementos COMA expresion','lista_elementos',3,'p_lista_elementos','parser.py',165),
  ('expresion -> VARIABLE CORCHETE_IZQ expresion CORCHETE_DER','expresion',4,'p_expresion_acceso_array','parser.py',174),
]
